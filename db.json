{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/404.html","path":"404.html","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/z.jpg","path":"uploads/z.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/1.jpg","path":"uploads/1.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"511e1c17a6ee26b504c5b98f7853b5f56fc7e9ed","modified":1497931909000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1490216767000},{"_id":"themes/next/.DS_Store","hash":"16b80c9bffd98d7fede781571005bc2057c5b88a","modified":1529756393578},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1490216767000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1490216767000},{"_id":"themes/next/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1490216767000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1490216767000},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1490216767000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1490216767000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1490216767000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1490216767000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1490216767000},{"_id":"themes/next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1490216767000},{"_id":"themes/next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1490216767000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1490216767000},{"_id":"themes/next/_config.yml","hash":"1f1e9fb5572f208408ae24ed650e3388bbf80d27","modified":1529758492472},{"_id":"themes/next/package.json","hash":"7e87b2621104b39a30488654c2a8a0c6a563574b","modified":1490216767000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1490216767000},{"_id":"source/_posts/ECM6初探.md","hash":"5bf2de13186ccffc9068b3b9dc21951f94929862","modified":1505923751000},{"_id":"source/_drafts/FEexpress.md","hash":"5a7bb9064c0d7e03cc58ea770fddb66bbfea9847","modified":1492359682000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1494316106000},{"_id":"source/_posts/Hexo.md","hash":"c6ab03d78050a4f16f04afb936d2be18e4541f94","modified":1529758120701},{"_id":"source/_posts/Markdown.md","hash":"abba5de9e7301589dced8200c155d818ec8f8fda","modified":1504689900000},{"_id":"source/_posts/PATH.md","hash":"512308994f905e681c0fffe3f053046141a48de3","modified":1504689913000},{"_id":"source/_posts/bower.md","hash":"455611443d25934af7bd7f09b71ee5407aff4904","modified":1491883108000},{"_id":"source/_posts/draft.md","hash":"54aafa4ac45e274f3077217ed822109acbf37e2a","modified":1504689729000},{"_id":"source/_posts/git.md","hash":"2d7aa00d86a08e0e37cf39a406ef531a4fede4cf","modified":1504689798000},{"_id":"source/_posts/gulp.md","hash":"b3acfbf13fa1880c3c5e6b54630239de19f1ab32","modified":1491883106000},{"_id":"source/_posts/java.md","hash":"7c8acb3f8b111f6a983f08c86153768314dbc053","modified":1504689826000},{"_id":"source/_posts/javaQuickKey.md","hash":"0371d0bce46cda9ff4fec3d84c0d9e88511d0fdb","modified":1504689839000},{"_id":"source/_posts/javascript.md","hash":"ee0b5d7c17a2731b62d091de16a46e2bdd3406af","modified":1504689869000},{"_id":"source/_posts/natapp.md","hash":"1d22781a08f27a9ecfc6006db29e63468395b248","modified":1509420117000},{"_id":"source/_posts/nginx.md","hash":"ed7abf19328efa4bf98f5466a94e539ce5ec9ad6","modified":1529649905452},{"_id":"source/_posts/node.md","hash":"ea468b26c6753737ca5b9ff38162bc30e7f7d63d","modified":1508748479000},{"_id":"source/_posts/protobuf.md","hash":"f79401f4586cdf1df5984a0e5886f8d616b1b003","modified":1530111443732},{"_id":"source/_posts/sql.md","hash":"4719b48b9bee26d67dae753d572e084861a92b77","modified":1504687085000},{"_id":"source/_posts/url.md","hash":"8bd70e97758b5387ae8b63244e4582c81cbb355d","modified":1504689948000},{"_id":"source/_posts/vim.md","hash":"f134e3a0e4979c550fe755b2c926ba9d9fbd1f20","modified":1504689708000},{"_id":"source/_posts/vue.md","hash":"b9ec2f2ff0941ef9f17ee93d2817914cc3d6ced7","modified":1509964184000},{"_id":"source/_posts/zj.md","hash":"7584d1a2b7e68bd8d6d42426f5b351def41850c3","modified":1504689560000},{"_id":"source/about/index.md","hash":"973213867ae33d9c014c9127b3eca8e6e6755a05","modified":1491895599000},{"_id":"source/categories/index.md","hash":"0530a4096f641bfbb47bb95dbc59858bb8f37938","modified":1491812745000},{"_id":"source/tags/index.md","hash":"55bf746fba7b08b25faa492059582d45c5893baa","modified":1491811007000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1490216767000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1490216767000},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1490216767000},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1490216767000},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1490216767000},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1490216767000},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1490216767000},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1490216767000},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1490216767000},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1490216767000},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1490216767000},{"_id":"themes/next/languages/ru.yml","hash":"7462c3017dae88e5f80ff308db0b95baf960c83f","modified":1490216767000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"285f407700af5ee9162889f9e962204e70600a78","modified":1490635337000},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1490216767000},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1490216767000},{"_id":"themes/next/layout/.DS_Store","hash":"f4932ddbc7d64636c0aa6904032385e2b144f61f","modified":1490640652000},{"_id":"themes/next/layout/_layout.swig","hash":"909d68b164227fe7601d82e2303bf574eb754172","modified":1490642169000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1490216767000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1490216767000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1490216767000},{"_id":"themes/next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1490216767000},{"_id":"themes/next/layout/schedule.swig","hash":"234dc8c3b9e276e7811c69011efd5d560519ef19","modified":1490216767000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1490216767000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1490216767000},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1490216767000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1490216767000},{"_id":"themes/next/source/.DS_Store","hash":"87ed78fa1361828f3a48f412bf57a34f86f17c8c","modified":1490642856000},{"_id":"themes/next/source/404.html","hash":"d6cd47ba4ab178269d9e7be773e521a3f74a738b","modified":1491812888000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1490216767000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1490216767000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1490216767000},{"_id":"source/_posts/Jsp.md","hash":"78c45a5a1f233aeb35f188fb4dd39254b2d07ab2","modified":1504689879000},{"_id":"source/_drafts/javamianshi.md","hash":"3bfe9755d82d2b5150f1a479e3b36e5dfe9a8365","modified":1529660554007},{"_id":"source/_posts/fbs.md","hash":"a6c534eafef417a74178dbbab416842f6f851ed1","modified":1529344003661},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1490216767000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1490216767000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1490216767000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"b16fcbf0efd20c018d7545257a8533c497ea7647","modified":1490216767000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1490216767000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"911b99ba0445b2c07373128d87a4ef2eb7de341a","modified":1490216767000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1490216767000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1490216767000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1490216767000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1490216767000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"4512867d80d9eddfc3a0f5fea3c456f33aa9d522","modified":1490216767000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"3543660367ff829abb3c56e0a9c04c209bcfbf8d","modified":1490216767000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"edd17337b6589b435dade6933aacfd29ee53c0dc","modified":1491814991000},{"_id":"themes/next/layout/_partials/.DS_Store","hash":"ac37a342cd76e1cbf8a9794d8d235f01f6298ca0","modified":1490640646000},{"_id":"themes/next/layout/_partials/head.swig","hash":"a0eafe24d1dae30c790ae35612154b3ffbbd5cce","modified":1490216767000},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1490216767000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1490216767000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1490216767000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1490216767000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1490216767000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1490216767000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1490216767000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1490216767000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1490216767000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1490216767000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1490216767000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1490216767000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1490216767000},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1490216767000},{"_id":"themes/next/source/css/.DS_Store","hash":"8c6d7cf99c28d5a28334335c88c8eb40fe1bbb40","modified":1490642189000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1490216767000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1490216767000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1490216767000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1490216767000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1490216767000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1490216767000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1490216767000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1490216767000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1490216767000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1490216767000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1490216767000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1490216767000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1490216767000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1490216767000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1490216767000},{"_id":"themes/next/source/js/.DS_Store","hash":"bd7c5ffc965c42df1b10ea6b51aa93e782056006","modified":1490642164000},{"_id":"themes/next/source/uploads/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1490683746000},{"_id":"themes/next/layout/_macro/post.swig","hash":"b888932e2123d4ece70c376cb8f3f1b04a9d4f45","modified":1490216767000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1490216767000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1490216767000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1490216767000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1490216767000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1490216767000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1490216767000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1490216767000},{"_id":"themes/next/source/uploads/z.jpg","hash":"3238a9b09aa8f0c3800970ca5b1dad1a9a688fb1","modified":1490683691000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1490216767000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1490216767000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1490216767000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1490216767000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"2d1075f4cabcb3956b7b84a8e210f5a66f0a5562","modified":1490216767000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1490216767000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1490216767000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1490216767000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1490216767000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1490216767000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1490216767000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1490216767000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1490216767000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1490216767000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1490216767000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1490216767000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1490216767000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1490216767000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1490216767000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1490216767000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"a652f202bd5b30c648c228ab8f0e997eb4928e44","modified":1490216767000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1490216767000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1490216767000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1490216767000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1490216767000},{"_id":"themes/next/layout/_third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1490216767000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1490216767000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"abb92620197a16ed2c0775edf18a0f044a82256e","modified":1490216767000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"7240f2e5ec7115f8abbbc4c9ef73d4bed180fdc7","modified":1490216767000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"af9dd8a4aed7d06cf47b363eebff48850888566c","modified":1490216767000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1490216767000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1490216767000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"f4dbd4c896e6510ded8ebe05394c28f8a86e71bf","modified":1490216767000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1490216767000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1490216767000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1490216767000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1490216767000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1490216767000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"06f432f328a5b8a9ef0dbd5301b002aba600b4ce","modified":1490216767000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"28a7f84242ca816a6452a0a79669ca963d824607","modified":1490216767000},{"_id":"themes/next/source/js/src/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1490642164000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1490216767000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1490216767000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1490216767000},{"_id":"themes/next/source/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1490216767000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1490216767000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1490216767000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1490216767000},{"_id":"themes/next/source/js/src/utils.js","hash":"e13c9ccf70d593bdf3b8cc1d768f595abd610e6e","modified":1490216767000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1490216767000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1490216767000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1490216767000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1490216767000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1490216767000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1490216767000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1490216767000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1490216767000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1490216767000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1490216767000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1490216767000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1490216767000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1490216767000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1490216767000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1490216767000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1490216767000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1490216767000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1490216767000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1490216767000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1490216767000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1490216767000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1490216767000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1490216767000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1490216767000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1490216767000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1490216767000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1490216767000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"59ad08bcc6fe9793594869ac2b4c525021453e78","modified":1490216767000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ef089a407c90e58eca10c49bc47ec978f96e03ba","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1490216767000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1490216767000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"7804e31c44717c9a9ddf0f8482b9b9c1a0f74538","modified":1490216767000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1490216767000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1490216767000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1490216767000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"1eb34b9c1f6d541605ff23333eeb133e1c4daf17","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1490216767000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1490216767000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1490216767000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1490216767000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1490216767000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1490216767000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1490216767000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1490216767000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1490216767000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1490216767000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1490216767000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1490216767000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1490216767000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1490216767000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1490216767000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1490216767000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1490216767000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1490216767000},{"_id":"themes/next/source/uploads/1.jpg","hash":"896f4416b617b5176aef472e7045b455ab2c0af5","modified":1490032500000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1490216767000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1490216767000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"9ba36dec0aacc529162b63555e40aedd00967851","modified":1490683727000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"02ec7ec8cb7d8766607bfb4b2327186411cb098a","modified":1490682012000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0190398c4109b4ffa12ece84cdea90588c52e9ed","modified":1490643151000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"755b04edbbfbdd981a783edb09c9cc34cb79cea7","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a2ec22ef4a6817bbb2abe8660fcd99fe4ca0cc5e","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"b9a2e76f019a5941191f1263b54aef7b69c48789","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"8c0276883398651336853d5ec0e9da267a00dd86","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"dd310c2d999185e881db007360176ee2f811df10","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"173490e21bece35a34858e8e534cf86e34561350","modified":1490216767000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"42348219db93a85d2ee23cb06cebd4d8ab121726","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1490216767000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1490216767000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1490216767000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1490216767000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1490216767000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1490216767000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1490216767000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1490216767000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1490216767000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1490216767000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1490216767000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1490216767000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1490216767000}],"Category":[{"name":"FE","_id":"cjs1is1jk0004cdonlkhoy6yj"},{"name":"文本编辑","_id":"cjs1is1jt000gcdon71eyapge"},{"name":"path","_id":"cjs1is1jv000mcdonq2lulasv"},{"name":"how to exit vim","_id":"cjs1is1jz0010cdonkt3l44wi"},{"name":"wechat","_id":"cjs1is1k20017cdon2zjd4uap"},{"name":"url","_id":"cjs1is1k5001ecdonbrnmyi9o"},{"name":"sql","_id":"cjs1is1k7001kcdonwf9be5w2"}],"Data":[],"Page":[{"title":"","date":"2017-03-27T17:10:14.000Z","_content":"\n# 联系方式\n\n- 手机：13438315759\n- Email：rsl1400@gmail.com\n- 微信号：L_1400\n\n---\n\n# 个人信息\n\n - 饶思羚/女/1991\n - 本科/电子科大软件工程 \n - 工作年限：3年\n - 技术博客：https://rsl140.github.io/blog/\n - Github: https://github.com/rsl140\n\n - 期望职位：Web前端程序员\n - 期望薪资：税前月薪5k~8k\n - 期望城市：成都\n\n---\n\n# 工作经历\n\n## 武汉世科网络科技有限公司 （ 2014年4月 ~ 2016年12月 ）\n\n - 参与软件需求分析\n - 根据客户需求定制开发企业网站(HTML5、CSS、Javascript、Jquery。还原交互设计与视觉设计稿。)\n - 负责网站后台管理系统的开发及功能实现(基于MVC模式、.net、C#)\n - 负责网站维护任务(网站内容填写，网站功能变更等)\n\n### 股票网站项目\n\n负责网站页面实现(html+css,jq)，负责后端功能(登陆、注册、买入、卖出、排行榜等功能)，数据库的编写以及单元测试\n\n### 多个企业网站开发\n\n通过PSD效果图实现html页面(兼容主流浏览器)(部分包含移动版)，前端和后端数据关联。\n如：http://www.fuxicao.com/\n \n## 博彦科技武汉分公司(实习) （ 2013年6月 ~ 2014年1月 ）\n\n - 负责测试环境的搭建，执行测试用例并跟踪测试结果\n - 编写测试报告等相关文档(英文)\n\n---\n\n# 开源项目和作品\n\n## 开源项目\n\n - [仿拉钩webapp](https://github.com/rsl140/FE-Learn-All/tree/master/LagouApp) : 通过gulp、bower构建，使用angular、less编写，单页应用\n - [豆瓣音乐搜索](https://rsl140.github.io/Music/) : 基于豆瓣音乐API、使用jquery、Ajax和Bootstrap框架实现音乐查询。\n - [仿微博主页](https://rsl140.github.io/cloneWeibo/) : 基于Bootstrap框架，使用HTML5、jquery等前端WEB技术进行还原，并增加页面自适应功能。\n\n# 技能清单\n\n以下均为我熟练使用的技能\n\n- Web开发：html/css/scss/javascript/ajax/.NET\n- 前端框架：Bootstrap/AngularJS/jquery\n- 前端工具：Bower/Gulp\n- 数据库相关：MySQL\n- 版本管理、文档和自动化部署工具：Svn/Git\n\n---\n\n# 致谢\n感谢您花时间阅读我的简历，期待能有机会和您共事。\n\n","source":"about/index.md","raw":"---\ntitle: \ndate: 2017-03-28 01:10:14\n---\n\n# 联系方式\n\n- 手机：13438315759\n- Email：rsl1400@gmail.com\n- 微信号：L_1400\n\n---\n\n# 个人信息\n\n - 饶思羚/女/1991\n - 本科/电子科大软件工程 \n - 工作年限：3年\n - 技术博客：https://rsl140.github.io/blog/\n - Github: https://github.com/rsl140\n\n - 期望职位：Web前端程序员\n - 期望薪资：税前月薪5k~8k\n - 期望城市：成都\n\n---\n\n# 工作经历\n\n## 武汉世科网络科技有限公司 （ 2014年4月 ~ 2016年12月 ）\n\n - 参与软件需求分析\n - 根据客户需求定制开发企业网站(HTML5、CSS、Javascript、Jquery。还原交互设计与视觉设计稿。)\n - 负责网站后台管理系统的开发及功能实现(基于MVC模式、.net、C#)\n - 负责网站维护任务(网站内容填写，网站功能变更等)\n\n### 股票网站项目\n\n负责网站页面实现(html+css,jq)，负责后端功能(登陆、注册、买入、卖出、排行榜等功能)，数据库的编写以及单元测试\n\n### 多个企业网站开发\n\n通过PSD效果图实现html页面(兼容主流浏览器)(部分包含移动版)，前端和后端数据关联。\n如：http://www.fuxicao.com/\n \n## 博彦科技武汉分公司(实习) （ 2013年6月 ~ 2014年1月 ）\n\n - 负责测试环境的搭建，执行测试用例并跟踪测试结果\n - 编写测试报告等相关文档(英文)\n\n---\n\n# 开源项目和作品\n\n## 开源项目\n\n - [仿拉钩webapp](https://github.com/rsl140/FE-Learn-All/tree/master/LagouApp) : 通过gulp、bower构建，使用angular、less编写，单页应用\n - [豆瓣音乐搜索](https://rsl140.github.io/Music/) : 基于豆瓣音乐API、使用jquery、Ajax和Bootstrap框架实现音乐查询。\n - [仿微博主页](https://rsl140.github.io/cloneWeibo/) : 基于Bootstrap框架，使用HTML5、jquery等前端WEB技术进行还原，并增加页面自适应功能。\n\n# 技能清单\n\n以下均为我熟练使用的技能\n\n- Web开发：html/css/scss/javascript/ajax/.NET\n- 前端框架：Bootstrap/AngularJS/jquery\n- 前端工具：Bower/Gulp\n- 数据库相关：MySQL\n- 版本管理、文档和自动化部署工具：Svn/Git\n\n---\n\n# 致谢\n感谢您花时间阅读我的简历，期待能有机会和您共事。\n\n","updated":"2017-04-11T07:26:39.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjs1is1ji0001cdonwjmz0sr2","content":"<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>手机：13438315759</li>\n<li>Email：rsl1400@gmail.com</li>\n<li>微信号：L_1400</li>\n</ul>\n<hr>\n<h1 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a>个人信息</h1><ul>\n<li>饶思羚/女/1991</li>\n<li>本科/电子科大软件工程 </li>\n<li>工作年限：3年</li>\n<li>技术博客：<a href=\"https://rsl140.github.io/blog/\">https://rsl140.github.io/blog/</a></li>\n<li><p>Github: <a href=\"https://github.com/rsl140\" target=\"_blank\" rel=\"external\">https://github.com/rsl140</a></p>\n</li>\n<li><p>期望职位：Web前端程序员</p>\n</li>\n<li>期望薪资：税前月薪5k~8k</li>\n<li>期望城市：成都</li>\n</ul>\n<hr>\n<h1 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h1><h2 id=\"武汉世科网络科技有限公司-（-2014年4月-2016年12月-）\"><a href=\"#武汉世科网络科技有限公司-（-2014年4月-2016年12月-）\" class=\"headerlink\" title=\"武汉世科网络科技有限公司 （ 2014年4月 ~ 2016年12月 ）\"></a>武汉世科网络科技有限公司 （ 2014年4月 ~ 2016年12月 ）</h2><ul>\n<li>参与软件需求分析</li>\n<li>根据客户需求定制开发企业网站(HTML5、CSS、Javascript、Jquery。还原交互设计与视觉设计稿。)</li>\n<li>负责网站后台管理系统的开发及功能实现(基于MVC模式、.net、C#)</li>\n<li>负责网站维护任务(网站内容填写，网站功能变更等)</li>\n</ul>\n<h3 id=\"股票网站项目\"><a href=\"#股票网站项目\" class=\"headerlink\" title=\"股票网站项目\"></a>股票网站项目</h3><p>负责网站页面实现(html+css,jq)，负责后端功能(登陆、注册、买入、卖出、排行榜等功能)，数据库的编写以及单元测试</p>\n<h3 id=\"多个企业网站开发\"><a href=\"#多个企业网站开发\" class=\"headerlink\" title=\"多个企业网站开发\"></a>多个企业网站开发</h3><p>通过PSD效果图实现html页面(兼容主流浏览器)(部分包含移动版)，前端和后端数据关联。<br>如：<a href=\"http://www.fuxicao.com/\" target=\"_blank\" rel=\"external\">http://www.fuxicao.com/</a></p>\n<h2 id=\"博彦科技武汉分公司-实习-（-2013年6月-2014年1月-）\"><a href=\"#博彦科技武汉分公司-实习-（-2013年6月-2014年1月-）\" class=\"headerlink\" title=\"博彦科技武汉分公司(实习) （ 2013年6月 ~ 2014年1月 ）\"></a>博彦科技武汉分公司(实习) （ 2013年6月 ~ 2014年1月 ）</h2><ul>\n<li>负责测试环境的搭建，执行测试用例并跟踪测试结果</li>\n<li>编写测试报告等相关文档(英文)</li>\n</ul>\n<hr>\n<h1 id=\"开源项目和作品\"><a href=\"#开源项目和作品\" class=\"headerlink\" title=\"开源项目和作品\"></a>开源项目和作品</h1><h2 id=\"开源项目\"><a href=\"#开源项目\" class=\"headerlink\" title=\"开源项目\"></a>开源项目</h2><ul>\n<li><a href=\"https://github.com/rsl140/FE-Learn-All/tree/master/LagouApp\" target=\"_blank\" rel=\"external\">仿拉钩webapp</a> : 通过gulp、bower构建，使用angular、less编写，单页应用</li>\n<li><a href=\"https://rsl140.github.io/Music/\">豆瓣音乐搜索</a> : 基于豆瓣音乐API、使用jquery、Ajax和Bootstrap框架实现音乐查询。</li>\n<li><a href=\"https://rsl140.github.io/cloneWeibo/\">仿微博主页</a> : 基于Bootstrap框架，使用HTML5、jquery等前端WEB技术进行还原，并增加页面自适应功能。</li>\n</ul>\n<h1 id=\"技能清单\"><a href=\"#技能清单\" class=\"headerlink\" title=\"技能清单\"></a>技能清单</h1><p>以下均为我熟练使用的技能</p>\n<ul>\n<li>Web开发：html/css/scss/javascript/ajax/.NET</li>\n<li>前端框架：Bootstrap/AngularJS/jquery</li>\n<li>前端工具：Bower/Gulp</li>\n<li>数据库相关：MySQL</li>\n<li>版本管理、文档和自动化部署工具：Svn/Git</li>\n</ul>\n<hr>\n<h1 id=\"致谢\"><a href=\"#致谢\" class=\"headerlink\" title=\"致谢\"></a>致谢</h1><p>感谢您花时间阅读我的简历，期待能有机会和您共事。</p>\n","excerpt":"","more":"<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>手机：13438315759</li>\n<li>Email：rsl1400@gmail.com</li>\n<li>微信号：L_1400</li>\n</ul>\n<hr>\n<h1 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a>个人信息</h1><ul>\n<li>饶思羚/女/1991</li>\n<li>本科/电子科大软件工程 </li>\n<li>工作年限：3年</li>\n<li>技术博客：<a href=\"https://rsl140.github.io/blog/\">https://rsl140.github.io/blog/</a></li>\n<li><p>Github: <a href=\"https://github.com/rsl140\">https://github.com/rsl140</a></p>\n</li>\n<li><p>期望职位：Web前端程序员</p>\n</li>\n<li>期望薪资：税前月薪5k~8k</li>\n<li>期望城市：成都</li>\n</ul>\n<hr>\n<h1 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h1><h2 id=\"武汉世科网络科技有限公司-（-2014年4月-2016年12月-）\"><a href=\"#武汉世科网络科技有限公司-（-2014年4月-2016年12月-）\" class=\"headerlink\" title=\"武汉世科网络科技有限公司 （ 2014年4月 ~ 2016年12月 ）\"></a>武汉世科网络科技有限公司 （ 2014年4月 ~ 2016年12月 ）</h2><ul>\n<li>参与软件需求分析</li>\n<li>根据客户需求定制开发企业网站(HTML5、CSS、Javascript、Jquery。还原交互设计与视觉设计稿。)</li>\n<li>负责网站后台管理系统的开发及功能实现(基于MVC模式、.net、C#)</li>\n<li>负责网站维护任务(网站内容填写，网站功能变更等)</li>\n</ul>\n<h3 id=\"股票网站项目\"><a href=\"#股票网站项目\" class=\"headerlink\" title=\"股票网站项目\"></a>股票网站项目</h3><p>负责网站页面实现(html+css,jq)，负责后端功能(登陆、注册、买入、卖出、排行榜等功能)，数据库的编写以及单元测试</p>\n<h3 id=\"多个企业网站开发\"><a href=\"#多个企业网站开发\" class=\"headerlink\" title=\"多个企业网站开发\"></a>多个企业网站开发</h3><p>通过PSD效果图实现html页面(兼容主流浏览器)(部分包含移动版)，前端和后端数据关联。<br>如：<a href=\"http://www.fuxicao.com/\">http://www.fuxicao.com/</a></p>\n<h2 id=\"博彦科技武汉分公司-实习-（-2013年6月-2014年1月-）\"><a href=\"#博彦科技武汉分公司-实习-（-2013年6月-2014年1月-）\" class=\"headerlink\" title=\"博彦科技武汉分公司(实习) （ 2013年6月 ~ 2014年1月 ）\"></a>博彦科技武汉分公司(实习) （ 2013年6月 ~ 2014年1月 ）</h2><ul>\n<li>负责测试环境的搭建，执行测试用例并跟踪测试结果</li>\n<li>编写测试报告等相关文档(英文)</li>\n</ul>\n<hr>\n<h1 id=\"开源项目和作品\"><a href=\"#开源项目和作品\" class=\"headerlink\" title=\"开源项目和作品\"></a>开源项目和作品</h1><h2 id=\"开源项目\"><a href=\"#开源项目\" class=\"headerlink\" title=\"开源项目\"></a>开源项目</h2><ul>\n<li><a href=\"https://github.com/rsl140/FE-Learn-All/tree/master/LagouApp\">仿拉钩webapp</a> : 通过gulp、bower构建，使用angular、less编写，单页应用</li>\n<li><a href=\"https://rsl140.github.io/Music/\">豆瓣音乐搜索</a> : 基于豆瓣音乐API、使用jquery、Ajax和Bootstrap框架实现音乐查询。</li>\n<li><a href=\"https://rsl140.github.io/cloneWeibo/\">仿微博主页</a> : 基于Bootstrap框架，使用HTML5、jquery等前端WEB技术进行还原，并增加页面自适应功能。</li>\n</ul>\n<h1 id=\"技能清单\"><a href=\"#技能清单\" class=\"headerlink\" title=\"技能清单\"></a>技能清单</h1><p>以下均为我熟练使用的技能</p>\n<ul>\n<li>Web开发：html/css/scss/javascript/ajax/.NET</li>\n<li>前端框架：Bootstrap/AngularJS/jquery</li>\n<li>前端工具：Bower/Gulp</li>\n<li>数据库相关：MySQL</li>\n<li>版本管理、文档和自动化部署工具：Svn/Git</li>\n</ul>\n<hr>\n<h1 id=\"致谢\"><a href=\"#致谢\" class=\"headerlink\" title=\"致谢\"></a>致谢</h1><p>感谢您花时间阅读我的简历，期待能有机会和您共事。</p>\n"},{"title":"分类","date":"2017-04-10T08:00:50.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-04-10 16:00:50\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-04-10T08:25:45.000Z","path":"categories/index.html","layout":"page","_id":"cjs1is1jk0003cdonr71dg78l","content":"","excerpt":"","more":""},{"title":"标签","date":"2017-04-10T07:55:54.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2017-04-10 15:55:54\ntype: \"tags\"\ncomments: false\n---\n","updated":"2017-04-10T07:56:47.000Z","path":"tags/index.html","layout":"page","_id":"cjs1is1jm0007cdonn5oygzol","content":"","excerpt":"","more":""}],"Post":[{"title":"ECM6初探","date":"2017-09-06T06:50:54.000Z","keywords":"ECM6","_content":">ECM6学习总结 [ECMAScript 6 入门](http://es6.ruanyifeng.com/#docs/let)\n\n# let\n\n1. 声明变量用，类似var.只在代码块内有效.\n``` javascript\n{\n  let a = 10;\n  var b = 1;\n}\n\na // ReferenceError: a is not defined.\nb // 1\n```\n2. 不存在变量提升，声明变量一定要再声明后使用否则会报错\n3. 暂时性死区（temporal dead zone，简称 TDZ）\n``` javascript\nif (true) {\n  // TDZ开始\n  tmp = 'abc'; // ReferenceError\n  console.log(tmp); // ReferenceError\n\n  let tmp; // TDZ结束\n  console.log(tmp); // undefined\n\n  tmp = 123;\n  console.log(tmp); // 123\n}\n```\n4. 不允许在<span style=\"color: red;\">相同作用域</span>内，重复声明同一个变量\n<!--  more  -->\n5. <span style=\"color: red;\">注意：ES6的块级作用域允许声明函数的规则，只在使用大括号的情况下成立。</span>\n\n# const\n\n1. `const`声明一个只读的常量。一旦声明，常量的值就不能改变。\n2. 只在声明所在的块级作用域内有效\n3. 实际上保证的，并不是变量的值不得改动，而是变量指向的那个内存地址不得改动\n4. 对于`复合类型的数据`（主要是对象和数组），变量指向的内存地址，保存的只是一个指针\n5. 如果真的想将对象冻结，应该使用Object.freeze方法。\n``` javascript\nconst foo = Object.freeze({});\n// 常规模式时，下面一行不起作用；\n// 严格模式时，该行会报错\nfoo.prop = 123;\n```\n\n# 变量的解构赋值\n\n``` javascript\n按照对应位置，对变量赋值\n    let [foo, [[bar], baz]] = [1, [[2], 3]];\n    foo // 1\n    bar // 2\n    baz // 3\n```\n- 如果解构不成功，变量的值就等于undefined\n- 如果是不完全解构，值匹配部分数组也是可以的\n- 只要某种数据结构具有 Iterator 接口，都可以采用数组形式的解构赋值\n- 解构赋值允许指定默认值\n``` javascript\nlet [foo = true] = [];\nfoo // true\n\nlet [x, y = 'b'] = ['a']; // x='a', y='b'\nlet [x, y = 'b'] = ['a', undefined]; // x='a', y='b'\n```\n\n# rest参数\n\n(形式为：...变量名)\n用于获取函数的多余参数\nrest参数后不能再有其他参数(只能是最后一个参数)\n``` javascript\n// 使用argument变量的写法\nfunction sortNumbers() {\n    return Array.prototype.slice.call(arguments).sort();\n}\n// rest参数的写法\nconst sortNumbers = (...numbers) => numbers.sort();\n```\n\n","source":"_posts/ECM6初探.md","raw":"---\ntitle: ECM6初探\ndate: 2017-09-06 14:50:54\ntags: ECM6\ncategories: FE\nkeywords: ECM6\n---\n>ECM6学习总结 [ECMAScript 6 入门](http://es6.ruanyifeng.com/#docs/let)\n\n# let\n\n1. 声明变量用，类似var.只在代码块内有效.\n``` javascript\n{\n  let a = 10;\n  var b = 1;\n}\n\na // ReferenceError: a is not defined.\nb // 1\n```\n2. 不存在变量提升，声明变量一定要再声明后使用否则会报错\n3. 暂时性死区（temporal dead zone，简称 TDZ）\n``` javascript\nif (true) {\n  // TDZ开始\n  tmp = 'abc'; // ReferenceError\n  console.log(tmp); // ReferenceError\n\n  let tmp; // TDZ结束\n  console.log(tmp); // undefined\n\n  tmp = 123;\n  console.log(tmp); // 123\n}\n```\n4. 不允许在<span style=\"color: red;\">相同作用域</span>内，重复声明同一个变量\n<!--  more  -->\n5. <span style=\"color: red;\">注意：ES6的块级作用域允许声明函数的规则，只在使用大括号的情况下成立。</span>\n\n# const\n\n1. `const`声明一个只读的常量。一旦声明，常量的值就不能改变。\n2. 只在声明所在的块级作用域内有效\n3. 实际上保证的，并不是变量的值不得改动，而是变量指向的那个内存地址不得改动\n4. 对于`复合类型的数据`（主要是对象和数组），变量指向的内存地址，保存的只是一个指针\n5. 如果真的想将对象冻结，应该使用Object.freeze方法。\n``` javascript\nconst foo = Object.freeze({});\n// 常规模式时，下面一行不起作用；\n// 严格模式时，该行会报错\nfoo.prop = 123;\n```\n\n# 变量的解构赋值\n\n``` javascript\n按照对应位置，对变量赋值\n    let [foo, [[bar], baz]] = [1, [[2], 3]];\n    foo // 1\n    bar // 2\n    baz // 3\n```\n- 如果解构不成功，变量的值就等于undefined\n- 如果是不完全解构，值匹配部分数组也是可以的\n- 只要某种数据结构具有 Iterator 接口，都可以采用数组形式的解构赋值\n- 解构赋值允许指定默认值\n``` javascript\nlet [foo = true] = [];\nfoo // true\n\nlet [x, y = 'b'] = ['a']; // x='a', y='b'\nlet [x, y = 'b'] = ['a', undefined]; // x='a', y='b'\n```\n\n# rest参数\n\n(形式为：...变量名)\n用于获取函数的多余参数\nrest参数后不能再有其他参数(只能是最后一个参数)\n``` javascript\n// 使用argument变量的写法\nfunction sortNumbers() {\n    return Array.prototype.slice.call(arguments).sort();\n}\n// rest参数的写法\nconst sortNumbers = (...numbers) => numbers.sort();\n```\n\n","slug":"ECM6初探","published":1,"updated":"2017-09-20T16:09:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1je0000cdon03bai9oo","content":"<blockquote>\n<p>ECM6学习总结 <a href=\"http://es6.ruanyifeng.com/#docs/let\" target=\"_blank\" rel=\"external\">ECMAScript 6 入门</a></p>\n</blockquote>\n<h1 id=\"let\"><a href=\"#let\" class=\"headerlink\" title=\"let\"></a>let</h1><ol>\n<li><p>声明变量用，类似var.只在代码块内有效.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"keyword\">let</span> a = <span class=\"number\">10</span>;</div><div class=\"line\">  <span class=\"keyword\">var</span> b = <span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">a <span class=\"comment\">// ReferenceError: a is not defined.</span></div><div class=\"line\">b <span class=\"comment\">// 1</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>不存在变量提升，声明变量一定要再声明后使用否则会报错</p>\n</li>\n<li><p>暂时性死区（temporal dead zone，简称 TDZ）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"literal\">true</span>) &#123;</div><div class=\"line\">  <span class=\"comment\">// TDZ开始</span></div><div class=\"line\">  tmp = <span class=\"string\">'abc'</span>; <span class=\"comment\">// ReferenceError</span></div><div class=\"line\">  <span class=\"built_in\">console</span>.log(tmp); <span class=\"comment\">// ReferenceError</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">let</span> tmp; <span class=\"comment\">// TDZ结束</span></div><div class=\"line\">  <span class=\"built_in\">console</span>.log(tmp); <span class=\"comment\">// undefined</span></div><div class=\"line\"></div><div class=\"line\">  tmp = <span class=\"number\">123</span>;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(tmp); <span class=\"comment\">// 123</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>不允许在<span style=\"color: red;\">相同作用域</span>内，重复声明同一个变量</p>\n<a id=\"more\"></a></li>\n<li><span style=\"color: red;\">注意：ES6的块级作用域允许声明函数的规则，只在使用大括号的情况下成立。</span></li>\n</ol>\n<h1 id=\"const\"><a href=\"#const\" class=\"headerlink\" title=\"const\"></a>const</h1><ol>\n<li><code>const</code>声明一个只读的常量。一旦声明，常量的值就不能改变。</li>\n<li>只在声明所在的块级作用域内有效</li>\n<li>实际上保证的，并不是变量的值不得改动，而是变量指向的那个内存地址不得改动</li>\n<li>对于<code>复合类型的数据</code>（主要是对象和数组），变量指向的内存地址，保存的只是一个指针</li>\n<li>如果真的想将对象冻结，应该使用Object.freeze方法。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> foo = <span class=\"built_in\">Object</span>.freeze(&#123;&#125;);</div><div class=\"line\"><span class=\"comment\">// 常规模式时，下面一行不起作用；</span></div><div class=\"line\"><span class=\"comment\">// 严格模式时，该行会报错</span></div><div class=\"line\">foo.prop = <span class=\"number\">123</span>;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"变量的解构赋值\"><a href=\"#变量的解构赋值\" class=\"headerlink\" title=\"变量的解构赋值\"></a>变量的解构赋值</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">按照对应位置，对变量赋值</div><div class=\"line\">    <span class=\"keyword\">let</span> [foo, [[bar], baz]] = [<span class=\"number\">1</span>, [[<span class=\"number\">2</span>], <span class=\"number\">3</span>]];</div><div class=\"line\">    foo <span class=\"comment\">// 1</span></div><div class=\"line\">    bar <span class=\"comment\">// 2</span></div><div class=\"line\">    baz <span class=\"comment\">// 3</span></div></pre></td></tr></table></figure>\n<ul>\n<li>如果解构不成功，变量的值就等于undefined</li>\n<li>如果是不完全解构，值匹配部分数组也是可以的</li>\n<li>只要某种数据结构具有 Iterator 接口，都可以采用数组形式的解构赋值</li>\n<li>解构赋值允许指定默认值<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> [foo = <span class=\"literal\">true</span>] = [];</div><div class=\"line\">foo <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">let</span> [x, y = <span class=\"string\">'b'</span>] = [<span class=\"string\">'a'</span>]; <span class=\"comment\">// x='a', y='b'</span></div><div class=\"line\"><span class=\"keyword\">let</span> [x, y = <span class=\"string\">'b'</span>] = [<span class=\"string\">'a'</span>, <span class=\"literal\">undefined</span>]; <span class=\"comment\">// x='a', y='b'</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"rest参数\"><a href=\"#rest参数\" class=\"headerlink\" title=\"rest参数\"></a>rest参数</h1><p>(形式为：…变量名)<br>用于获取函数的多余参数<br>rest参数后不能再有其他参数(只能是最后一个参数)<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 使用argument变量的写法</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sortNumbers</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Array</span>.prototype.slice.call(<span class=\"built_in\">arguments</span>).sort();</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">// rest参数的写法</span></div><div class=\"line\"><span class=\"keyword\">const</span> sortNumbers = <span class=\"function\">(<span class=\"params\">...numbers</span>) =&gt;</span> numbers.sort();</div></pre></td></tr></table></figure></p>\n","excerpt":"<blockquote>\n<p>ECM6学习总结 <a href=\"http://es6.ruanyifeng.com/#docs/let\">ECMAScript 6 入门</a></p>\n</blockquote>\n<h1 id=\"let\"><a href=\"#let\" class=\"headerlink\" title=\"let\"></a>let</h1><ol>\n<li><p>声明变量用，类似var.只在代码块内有效.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"keyword\">let</span> a = <span class=\"number\">10</span>;</div><div class=\"line\">  <span class=\"keyword\">var</span> b = <span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">a <span class=\"comment\">// ReferenceError: a is not defined.</span></div><div class=\"line\">b <span class=\"comment\">// 1</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>不存在变量提升，声明变量一定要再声明后使用否则会报错</p>\n</li>\n<li><p>暂时性死区（temporal dead zone，简称 TDZ）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"literal\">true</span>) &#123;</div><div class=\"line\">  <span class=\"comment\">// TDZ开始</span></div><div class=\"line\">  tmp = <span class=\"string\">'abc'</span>; <span class=\"comment\">// ReferenceError</span></div><div class=\"line\">  <span class=\"built_in\">console</span>.log(tmp); <span class=\"comment\">// ReferenceError</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">let</span> tmp; <span class=\"comment\">// TDZ结束</span></div><div class=\"line\">  <span class=\"built_in\">console</span>.log(tmp); <span class=\"comment\">// undefined</span></div><div class=\"line\"></div><div class=\"line\">  tmp = <span class=\"number\">123</span>;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(tmp); <span class=\"comment\">// 123</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>不允许在<span style=\"color: red;\">相同作用域</span>内，重复声明同一个变量</p>","more":"</li>\n<li><span style=\"color: red;\">注意：ES6的块级作用域允许声明函数的规则，只在使用大括号的情况下成立。</span></li>\n</ol>\n<h1 id=\"const\"><a href=\"#const\" class=\"headerlink\" title=\"const\"></a>const</h1><ol>\n<li><code>const</code>声明一个只读的常量。一旦声明，常量的值就不能改变。</li>\n<li>只在声明所在的块级作用域内有效</li>\n<li>实际上保证的，并不是变量的值不得改动，而是变量指向的那个内存地址不得改动</li>\n<li>对于<code>复合类型的数据</code>（主要是对象和数组），变量指向的内存地址，保存的只是一个指针</li>\n<li>如果真的想将对象冻结，应该使用Object.freeze方法。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> foo = <span class=\"built_in\">Object</span>.freeze(&#123;&#125;);</div><div class=\"line\"><span class=\"comment\">// 常规模式时，下面一行不起作用；</span></div><div class=\"line\"><span class=\"comment\">// 严格模式时，该行会报错</span></div><div class=\"line\">foo.prop = <span class=\"number\">123</span>;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"变量的解构赋值\"><a href=\"#变量的解构赋值\" class=\"headerlink\" title=\"变量的解构赋值\"></a>变量的解构赋值</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">按照对应位置，对变量赋值</div><div class=\"line\">    <span class=\"keyword\">let</span> [foo, [[bar], baz]] = [<span class=\"number\">1</span>, [[<span class=\"number\">2</span>], <span class=\"number\">3</span>]];</div><div class=\"line\">    foo <span class=\"comment\">// 1</span></div><div class=\"line\">    bar <span class=\"comment\">// 2</span></div><div class=\"line\">    baz <span class=\"comment\">// 3</span></div></pre></td></tr></table></figure>\n<ul>\n<li>如果解构不成功，变量的值就等于undefined</li>\n<li>如果是不完全解构，值匹配部分数组也是可以的</li>\n<li>只要某种数据结构具有 Iterator 接口，都可以采用数组形式的解构赋值</li>\n<li>解构赋值允许指定默认值<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> [foo = <span class=\"literal\">true</span>] = [];</div><div class=\"line\">foo <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">let</span> [x, y = <span class=\"string\">'b'</span>] = [<span class=\"string\">'a'</span>]; <span class=\"comment\">// x='a', y='b'</span></div><div class=\"line\"><span class=\"keyword\">let</span> [x, y = <span class=\"string\">'b'</span>] = [<span class=\"string\">'a'</span>, <span class=\"literal\">undefined</span>]; <span class=\"comment\">// x='a', y='b'</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"rest参数\"><a href=\"#rest参数\" class=\"headerlink\" title=\"rest参数\"></a>rest参数</h1><p>(形式为：…变量名)<br>用于获取函数的多余参数<br>rest参数后不能再有其他参数(只能是最后一个参数)<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 使用argument变量的写法</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sortNumbers</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Array</span>.prototype.slice.call(<span class=\"built_in\">arguments</span>).sort();</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">// rest参数的写法</span></div><div class=\"line\"><span class=\"keyword\">const</span> sortNumbers = <span class=\"function\">(<span class=\"params\">...numbers</span>) =&gt;</span> numbers.sort();</div></pre></td></tr></table></figure></p>"},{"title":"前端学习进度(计划)","_content":"# 学习内容\nCanvas \nECMAScript 6\nNodejs\n内存泄漏\nMongoDB","source":"_drafts/FEexpress.md","raw":"---\ntitle: 前端学习进度(计划)\ntags:\n---\n# 学习内容\nCanvas \nECMAScript 6\nNodejs\n内存泄漏\nMongoDB","slug":"FEexpress","published":0,"date":"2017-04-11T10:21:39.000Z","updated":"2017-04-16T16:21:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1jj0002cdonb6lhl26t","content":"<h1 id=\"学习内容\"><a href=\"#学习内容\" class=\"headerlink\" title=\"学习内容\"></a>学习内容</h1><p>Canvas<br>ECMAScript 6<br>Nodejs<br>内存泄漏<br>MongoDB</p>\n","excerpt":"","more":"<h1 id=\"学习内容\"><a href=\"#学习内容\" class=\"headerlink\" title=\"学习内容\"></a>学习内容</h1><p>Canvas<br>ECMAScript 6<br>Nodejs<br>内存泄漏<br>MongoDB</p>\n"},{"title":"Hexo&常见问题","date":"2017-03-22T16:00:00.000Z","_content":"Hexo官网: [Hexo](https://hexo.io/)\n\n## 搭建本地博客\n\n### 环境配置\n\n``` bash\n\t git，node\n```\n### 安装hexo\n\n``` bash\n\tnpm install hexo-cli -g\n\thexo init #初始化\n\tnpm install\n\thexo server (hexo s) #本地运行默认4000端口\n```\n<!-- more -->\n### 使用\n缩写：\n``` bash\n\thexo c #缓存清理\n\thexo g #生成静态页面\n\thexo d #发布到github\n\thexo s #本地运行\n```\n### push 到github\n找到_config.yml文件，翻到最下面 ：后面都要有空格\n\n``` bash\n\tdeploy:\n\t\ttype: git\n\t\trepository: https://github.com/rsl140/blog.git\n\t\tbranch: master\n\t执行\n\t\tnpm install hexo-deployer-git --save\n\t\thexo d\n```\n### 常用命令\n\n``` bash\n\thexo new \"postName\" #新建文章\n\thexo new page \"pageName\" #新建页面\n\thexo generate #生成静态页面至public目录\n\thexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\n\thexo deploy #将.deploy目录部署到GitHub\n\thexo help  #查看帮助\n\thexo version  #查看Hexo的版本\n```\n### 主题\n\n``` bash\n\t在根目录下 git clone https://github.com/iissnan/hexo-theme-next themes/next #其他类似\n\t#启用\n\t#修改博客目录D:\\hexo\\_config.yml中的theme属性，将其设置为jacman。\n\ttheme: next\n\t#在主题更新之前，一定要备份好主题目录下的_config.yml文件，尤其是到后面修改了很多配置之后。\n\tcd themes/next\n\tgit pull origin master\n```\n#### 主题的配置\n　　主题的配置在D:\\hexo\\themes\\next\\_config.yml文件里面了。\n``` bash\nmenu:  #导航栏\n  主页: /\n  归档: /archives\n  关于: /about\n\n#导航栏上如何添加新页面呢？输入下面命令，新建一个页面，在里添加内容即可。\nhexo new page \"about\"\n#导航栏里的文件都在D:\\Hexo\\source\\目录下在相应的文件里修改，然后预览再部署。注意，修改任何的配置内容，都需要生成之后才有效。\n```\n### 本站使用的第三方配置\n\n数据统计：[不蒜子统计](http://theme-next.iissnan.com/third-party-services.html#analytics-tencent)\n\n评论系统：[DISQUS](http://theme-next.iissnan.com/third-party-services.html#disqus)\n\n### 标签(tag)页面创建\n\n``` bash\n\thexo new page tags #新建页面\n\n\ttype: \"tags\" #在页面中设置type标签\n\tcomments: false #禁用评论功能，如果有\n\n\tmenu: #在配置文件中添加tags\n\t  home: /\n\t  tags: /tags\n#分类页面同理 categories\n```\n\n### 修改文章范本\n\n范本文档目录为：scaffolds/post.md\n草稿文本目录为：scaffolds/draft.md\n\n``` bash\n\ttitle:  #文章标题\n\tdate:  #时间，一般不用改\n\tcategories:  #目录分类\n\ttags:  #标签，格式可以是[Hexo,总结]，中间用英文逗号分开\n\tkeywords:  #文章关键词，多个关键词用英文逗号隔开\n```\n\n### 我遇到的错误解决方法\n\n#### github不显示页面的问题\n在配置里的url如下设置\n\n``` bash\n\turl: https://rsl140.github.io/blog/m\n\troot: /blog #子文件夹目录名\n```\n\n#### hexo 无法生成新文章\n``` bash\n\t安装hexo步骤从新走一次\n\t提示hexo不是内部执行命令时 执行\n\tsudo npm install -g hexo\n```\n#### site设置\n``` bash\n\t# Site\n\ttitle: XiaoSi\n\tsubtitle:\n\tdescription: 小思\n\tauthor: Summer\n\tlanguage: zh-Hans #中文\n\ttimezone:   Asia/Shanghai #北京时间\n```\n#### github备份\n\n``` bash\n//假设hexo文件夹是已经生成的hexo博客目录\n//如果themes/next(风格名字目录)下面有.git，请删除这个.git文件夹。\n#cd hexo\n#git init  //初始化本地仓库\n#git add source themes scaffolds _config.yml package.json package-lock.json  //将必要的文件依次添加\n#git commit -m \"blog hexo\"\n#git branch hexo  //新建hexo分支\n#git checkout hexo  //切换到hexo分支上\n#git remote add origin git@github.com:user/user.github.io.git  //将本地与Github项目对接\n#git push origin hexo  //push到Github项目的hexo分支上\n```\n其他终端使用：\n\n> 前提:nodejs,git,hexo已经安装好，并配置好环境变量。\n\n``` bash\n#git clone -b hexo git@github.com:user/user.github.io.git  //将Github中hexo分支clone到本地\n#cd user.github.io\n#npm install\n```\n[参考原文](https://blog.csdn.net/shile/article/details/78714189)","source":"_posts/Hexo.md","raw":"---\ntitle: Hexo&常见问题\ndate: 2017-03-23\ncategories: FE\ntags: hexo\n---\nHexo官网: [Hexo](https://hexo.io/)\n\n## 搭建本地博客\n\n### 环境配置\n\n``` bash\n\t git，node\n```\n### 安装hexo\n\n``` bash\n\tnpm install hexo-cli -g\n\thexo init #初始化\n\tnpm install\n\thexo server (hexo s) #本地运行默认4000端口\n```\n<!-- more -->\n### 使用\n缩写：\n``` bash\n\thexo c #缓存清理\n\thexo g #生成静态页面\n\thexo d #发布到github\n\thexo s #本地运行\n```\n### push 到github\n找到_config.yml文件，翻到最下面 ：后面都要有空格\n\n``` bash\n\tdeploy:\n\t\ttype: git\n\t\trepository: https://github.com/rsl140/blog.git\n\t\tbranch: master\n\t执行\n\t\tnpm install hexo-deployer-git --save\n\t\thexo d\n```\n### 常用命令\n\n``` bash\n\thexo new \"postName\" #新建文章\n\thexo new page \"pageName\" #新建页面\n\thexo generate #生成静态页面至public目录\n\thexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\n\thexo deploy #将.deploy目录部署到GitHub\n\thexo help  #查看帮助\n\thexo version  #查看Hexo的版本\n```\n### 主题\n\n``` bash\n\t在根目录下 git clone https://github.com/iissnan/hexo-theme-next themes/next #其他类似\n\t#启用\n\t#修改博客目录D:\\hexo\\_config.yml中的theme属性，将其设置为jacman。\n\ttheme: next\n\t#在主题更新之前，一定要备份好主题目录下的_config.yml文件，尤其是到后面修改了很多配置之后。\n\tcd themes/next\n\tgit pull origin master\n```\n#### 主题的配置\n　　主题的配置在D:\\hexo\\themes\\next\\_config.yml文件里面了。\n``` bash\nmenu:  #导航栏\n  主页: /\n  归档: /archives\n  关于: /about\n\n#导航栏上如何添加新页面呢？输入下面命令，新建一个页面，在里添加内容即可。\nhexo new page \"about\"\n#导航栏里的文件都在D:\\Hexo\\source\\目录下在相应的文件里修改，然后预览再部署。注意，修改任何的配置内容，都需要生成之后才有效。\n```\n### 本站使用的第三方配置\n\n数据统计：[不蒜子统计](http://theme-next.iissnan.com/third-party-services.html#analytics-tencent)\n\n评论系统：[DISQUS](http://theme-next.iissnan.com/third-party-services.html#disqus)\n\n### 标签(tag)页面创建\n\n``` bash\n\thexo new page tags #新建页面\n\n\ttype: \"tags\" #在页面中设置type标签\n\tcomments: false #禁用评论功能，如果有\n\n\tmenu: #在配置文件中添加tags\n\t  home: /\n\t  tags: /tags\n#分类页面同理 categories\n```\n\n### 修改文章范本\n\n范本文档目录为：scaffolds/post.md\n草稿文本目录为：scaffolds/draft.md\n\n``` bash\n\ttitle:  #文章标题\n\tdate:  #时间，一般不用改\n\tcategories:  #目录分类\n\ttags:  #标签，格式可以是[Hexo,总结]，中间用英文逗号分开\n\tkeywords:  #文章关键词，多个关键词用英文逗号隔开\n```\n\n### 我遇到的错误解决方法\n\n#### github不显示页面的问题\n在配置里的url如下设置\n\n``` bash\n\turl: https://rsl140.github.io/blog/m\n\troot: /blog #子文件夹目录名\n```\n\n#### hexo 无法生成新文章\n``` bash\n\t安装hexo步骤从新走一次\n\t提示hexo不是内部执行命令时 执行\n\tsudo npm install -g hexo\n```\n#### site设置\n``` bash\n\t# Site\n\ttitle: XiaoSi\n\tsubtitle:\n\tdescription: 小思\n\tauthor: Summer\n\tlanguage: zh-Hans #中文\n\ttimezone:   Asia/Shanghai #北京时间\n```\n#### github备份\n\n``` bash\n//假设hexo文件夹是已经生成的hexo博客目录\n//如果themes/next(风格名字目录)下面有.git，请删除这个.git文件夹。\n#cd hexo\n#git init  //初始化本地仓库\n#git add source themes scaffolds _config.yml package.json package-lock.json  //将必要的文件依次添加\n#git commit -m \"blog hexo\"\n#git branch hexo  //新建hexo分支\n#git checkout hexo  //切换到hexo分支上\n#git remote add origin git@github.com:user/user.github.io.git  //将本地与Github项目对接\n#git push origin hexo  //push到Github项目的hexo分支上\n```\n其他终端使用：\n\n> 前提:nodejs,git,hexo已经安装好，并配置好环境变量。\n\n``` bash\n#git clone -b hexo git@github.com:user/user.github.io.git  //将Github中hexo分支clone到本地\n#cd user.github.io\n#npm install\n```\n[参考原文](https://blog.csdn.net/shile/article/details/78714189)","slug":"Hexo","published":1,"updated":"2018-06-23T12:48:40.701Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1jm0006cdon1xsee810","content":"<p>Hexo官网: <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a></p>\n<h2 id=\"搭建本地博客\"><a href=\"#搭建本地博客\" class=\"headerlink\" title=\"搭建本地博客\"></a>搭建本地博客</h2><h3 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git，node</div></pre></td></tr></table></figure>\n<h3 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-cli -g</div><div class=\"line\">hexo init <span class=\"comment\">#初始化</span></div><div class=\"line\">npm install</div><div class=\"line\">hexo server (hexo s) <span class=\"comment\">#本地运行默认4000端口</span></div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>缩写：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo c <span class=\"comment\">#缓存清理</span></div><div class=\"line\">hexo g <span class=\"comment\">#生成静态页面</span></div><div class=\"line\">hexo d <span class=\"comment\">#发布到github</span></div><div class=\"line\">hexo s <span class=\"comment\">#本地运行</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"push-到github\"><a href=\"#push-到github\" class=\"headerlink\" title=\"push 到github\"></a>push 到github</h3><p>找到_config.yml文件，翻到最下面 ：后面都要有空格</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">\t<span class=\"built_in\">type</span>: git</div><div class=\"line\">\trepository: https://github.com/rsl140/blog.git</div><div class=\"line\">\tbranch: master</div><div class=\"line\">执行</div><div class=\"line\">\tnpm install hexo-deployer-git --save</div><div class=\"line\">\thexo d</div></pre></td></tr></table></figure>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new <span class=\"string\">\"postName\"</span> <span class=\"comment\">#新建文章</span></div><div class=\"line\">hexo new page <span class=\"string\">\"pageName\"</span> <span class=\"comment\">#新建页面</span></div><div class=\"line\">hexo generate <span class=\"comment\">#生成静态页面至public目录</span></div><div class=\"line\">hexo server <span class=\"comment\">#开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span></div><div class=\"line\">hexo deploy <span class=\"comment\">#将.deploy目录部署到GitHub</span></div><div class=\"line\">hexo <span class=\"built_in\">help</span>  <span class=\"comment\">#查看帮助</span></div><div class=\"line\">hexo version  <span class=\"comment\">#查看Hexo的版本</span></div></pre></td></tr></table></figure>\n<h3 id=\"主题\"><a href=\"#主题\" class=\"headerlink\" title=\"主题\"></a>主题</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">在根目录下 git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next <span class=\"comment\">#其他类似</span></div><div class=\"line\"><span class=\"comment\">#启用</span></div><div class=\"line\"><span class=\"comment\">#修改博客目录D:\\hexo\\_config.yml中的theme属性，将其设置为jacman。</span></div><div class=\"line\">theme: next</div><div class=\"line\"><span class=\"comment\">#在主题更新之前，一定要备份好主题目录下的_config.yml文件，尤其是到后面修改了很多配置之后。</span></div><div class=\"line\"><span class=\"built_in\">cd</span> themes/next</div><div class=\"line\">git pull origin master</div></pre></td></tr></table></figure>\n<h4 id=\"主题的配置\"><a href=\"#主题的配置\" class=\"headerlink\" title=\"主题的配置\"></a>主题的配置</h4><p>　　主题的配置在D:\\hexo\\themes\\next_config.yml文件里面了。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">menu:  <span class=\"comment\">#导航栏</span></div><div class=\"line\">  主页: /</div><div class=\"line\">  归档: /archives</div><div class=\"line\">  关于: /about</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#导航栏上如何添加新页面呢？输入下面命令，新建一个页面，在里添加内容即可。</span></div><div class=\"line\">hexo new page <span class=\"string\">\"about\"</span></div><div class=\"line\"><span class=\"comment\">#导航栏里的文件都在D:\\Hexo\\source\\目录下在相应的文件里修改，然后预览再部署。注意，修改任何的配置内容，都需要生成之后才有效。</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"本站使用的第三方配置\"><a href=\"#本站使用的第三方配置\" class=\"headerlink\" title=\"本站使用的第三方配置\"></a>本站使用的第三方配置</h3><p>数据统计：<a href=\"http://theme-next.iissnan.com/third-party-services.html#analytics-tencent\" target=\"_blank\" rel=\"external\">不蒜子统计</a></p>\n<p>评论系统：<a href=\"http://theme-next.iissnan.com/third-party-services.html#disqus\" target=\"_blank\" rel=\"external\">DISQUS</a></p>\n<h3 id=\"标签-tag-页面创建\"><a href=\"#标签-tag-页面创建\" class=\"headerlink\" title=\"标签(tag)页面创建\"></a>标签(tag)页面创建</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">\thexo new page tags <span class=\"comment\">#新建页面</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"built_in\">type</span>: <span class=\"string\">\"tags\"</span> <span class=\"comment\">#在页面中设置type标签</span></div><div class=\"line\">\tcomments: <span class=\"literal\">false</span> <span class=\"comment\">#禁用评论功能，如果有</span></div><div class=\"line\"></div><div class=\"line\">\tmenu: <span class=\"comment\">#在配置文件中添加tags</span></div><div class=\"line\">\t  home: /</div><div class=\"line\">\t  tags: /tags</div><div class=\"line\"><span class=\"comment\">#分类页面同理 categories</span></div></pre></td></tr></table></figure>\n<h3 id=\"修改文章范本\"><a href=\"#修改文章范本\" class=\"headerlink\" title=\"修改文章范本\"></a>修改文章范本</h3><p>范本文档目录为：scaffolds/post.md<br>草稿文本目录为：scaffolds/draft.md</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">title:  <span class=\"comment\">#文章标题</span></div><div class=\"line\">date:  <span class=\"comment\">#时间，一般不用改</span></div><div class=\"line\">categories:  <span class=\"comment\">#目录分类</span></div><div class=\"line\">tags:  <span class=\"comment\">#标签，格式可以是[Hexo,总结]，中间用英文逗号分开</span></div><div class=\"line\">keywords:  <span class=\"comment\">#文章关键词，多个关键词用英文逗号隔开</span></div></pre></td></tr></table></figure>\n<h3 id=\"我遇到的错误解决方法\"><a href=\"#我遇到的错误解决方法\" class=\"headerlink\" title=\"我遇到的错误解决方法\"></a>我遇到的错误解决方法</h3><h4 id=\"github不显示页面的问题\"><a href=\"#github不显示页面的问题\" class=\"headerlink\" title=\"github不显示页面的问题\"></a>github不显示页面的问题</h4><p>在配置里的url如下设置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">url: https://rsl140.github.io/blog/m</div><div class=\"line\">root: /blog <span class=\"comment\">#子文件夹目录名</span></div></pre></td></tr></table></figure>\n<h4 id=\"hexo-无法生成新文章\"><a href=\"#hexo-无法生成新文章\" class=\"headerlink\" title=\"hexo 无法生成新文章\"></a>hexo 无法生成新文章</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">安装hexo步骤从新走一次</div><div class=\"line\">提示hexo不是内部执行命令时 执行</div><div class=\"line\">sudo npm install -g hexo</div></pre></td></tr></table></figure>\n<h4 id=\"site设置\"><a href=\"#site设置\" class=\"headerlink\" title=\"site设置\"></a>site设置</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Site</span></div><div class=\"line\">title: XiaoSi</div><div class=\"line\">subtitle:</div><div class=\"line\">description: 小思</div><div class=\"line\">author: Summer</div><div class=\"line\">language: zh-Hans <span class=\"comment\">#中文</span></div><div class=\"line\">timezone:   Asia/Shanghai <span class=\"comment\">#北京时间</span></div></pre></td></tr></table></figure>\n<h4 id=\"github备份\"><a href=\"#github备份\" class=\"headerlink\" title=\"github备份\"></a>github备份</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">//假设hexo文件夹是已经生成的hexo博客目录</div><div class=\"line\">//如果themes/next(风格名字目录)下面有.git，请删除这个.git文件夹。</div><div class=\"line\"><span class=\"comment\">#cd hexo</span></div><div class=\"line\"><span class=\"comment\">#git init  //初始化本地仓库</span></div><div class=\"line\"><span class=\"comment\">#git add source themes scaffolds _config.yml package.json package-lock.json  //将必要的文件依次添加</span></div><div class=\"line\"><span class=\"comment\">#git commit -m \"blog hexo\"</span></div><div class=\"line\"><span class=\"comment\">#git branch hexo  //新建hexo分支</span></div><div class=\"line\"><span class=\"comment\">#git checkout hexo  //切换到hexo分支上</span></div><div class=\"line\"><span class=\"comment\">#git remote add origin git@github.com:user/user.github.io.git  //将本地与Github项目对接</span></div><div class=\"line\"><span class=\"comment\">#git push origin hexo  //push到Github项目的hexo分支上</span></div></pre></td></tr></table></figure>\n<p>其他终端使用：</p>\n<blockquote>\n<p>前提:nodejs,git,hexo已经安装好，并配置好环境变量。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#git clone -b hexo git@github.com:user/user.github.io.git  //将Github中hexo分支clone到本地</span></div><div class=\"line\"><span class=\"comment\">#cd user.github.io</span></div><div class=\"line\"><span class=\"comment\">#npm install</span></div></pre></td></tr></table></figure>\n<p><a href=\"https://blog.csdn.net/shile/article/details/78714189\" target=\"_blank\" rel=\"external\">参考原文</a></p>\n","excerpt":"<p>Hexo官网: <a href=\"https://hexo.io/\">Hexo</a></p>\n<h2 id=\"搭建本地博客\"><a href=\"#搭建本地博客\" class=\"headerlink\" title=\"搭建本地博客\"></a>搭建本地博客</h2><h3 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git，node</div></pre></td></tr></table></figure>\n<h3 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-cli -g</div><div class=\"line\">hexo init <span class=\"comment\">#初始化</span></div><div class=\"line\">npm install</div><div class=\"line\">hexo server (hexo s) <span class=\"comment\">#本地运行默认4000端口</span></div></pre></td></tr></table></figure>","more":"<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>缩写：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo c <span class=\"comment\">#缓存清理</span></div><div class=\"line\">hexo g <span class=\"comment\">#生成静态页面</span></div><div class=\"line\">hexo d <span class=\"comment\">#发布到github</span></div><div class=\"line\">hexo s <span class=\"comment\">#本地运行</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"push-到github\"><a href=\"#push-到github\" class=\"headerlink\" title=\"push 到github\"></a>push 到github</h3><p>找到_config.yml文件，翻到最下面 ：后面都要有空格</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">\t<span class=\"built_in\">type</span>: git</div><div class=\"line\">\trepository: https://github.com/rsl140/blog.git</div><div class=\"line\">\tbranch: master</div><div class=\"line\">执行</div><div class=\"line\">\tnpm install hexo-deployer-git --save</div><div class=\"line\">\thexo d</div></pre></td></tr></table></figure>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new <span class=\"string\">\"postName\"</span> <span class=\"comment\">#新建文章</span></div><div class=\"line\">hexo new page <span class=\"string\">\"pageName\"</span> <span class=\"comment\">#新建页面</span></div><div class=\"line\">hexo generate <span class=\"comment\">#生成静态页面至public目录</span></div><div class=\"line\">hexo server <span class=\"comment\">#开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span></div><div class=\"line\">hexo deploy <span class=\"comment\">#将.deploy目录部署到GitHub</span></div><div class=\"line\">hexo <span class=\"built_in\">help</span>  <span class=\"comment\">#查看帮助</span></div><div class=\"line\">hexo version  <span class=\"comment\">#查看Hexo的版本</span></div></pre></td></tr></table></figure>\n<h3 id=\"主题\"><a href=\"#主题\" class=\"headerlink\" title=\"主题\"></a>主题</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">在根目录下 git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next <span class=\"comment\">#其他类似</span></div><div class=\"line\"><span class=\"comment\">#启用</span></div><div class=\"line\"><span class=\"comment\">#修改博客目录D:\\hexo\\_config.yml中的theme属性，将其设置为jacman。</span></div><div class=\"line\">theme: next</div><div class=\"line\"><span class=\"comment\">#在主题更新之前，一定要备份好主题目录下的_config.yml文件，尤其是到后面修改了很多配置之后。</span></div><div class=\"line\"><span class=\"built_in\">cd</span> themes/next</div><div class=\"line\">git pull origin master</div></pre></td></tr></table></figure>\n<h4 id=\"主题的配置\"><a href=\"#主题的配置\" class=\"headerlink\" title=\"主题的配置\"></a>主题的配置</h4><p>　　主题的配置在D:\\hexo\\themes\\next_config.yml文件里面了。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">menu:  <span class=\"comment\">#导航栏</span></div><div class=\"line\">  主页: /</div><div class=\"line\">  归档: /archives</div><div class=\"line\">  关于: /about</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#导航栏上如何添加新页面呢？输入下面命令，新建一个页面，在里添加内容即可。</span></div><div class=\"line\">hexo new page <span class=\"string\">\"about\"</span></div><div class=\"line\"><span class=\"comment\">#导航栏里的文件都在D:\\Hexo\\source\\目录下在相应的文件里修改，然后预览再部署。注意，修改任何的配置内容，都需要生成之后才有效。</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"本站使用的第三方配置\"><a href=\"#本站使用的第三方配置\" class=\"headerlink\" title=\"本站使用的第三方配置\"></a>本站使用的第三方配置</h3><p>数据统计：<a href=\"http://theme-next.iissnan.com/third-party-services.html#analytics-tencent\">不蒜子统计</a></p>\n<p>评论系统：<a href=\"http://theme-next.iissnan.com/third-party-services.html#disqus\">DISQUS</a></p>\n<h3 id=\"标签-tag-页面创建\"><a href=\"#标签-tag-页面创建\" class=\"headerlink\" title=\"标签(tag)页面创建\"></a>标签(tag)页面创建</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">\thexo new page tags <span class=\"comment\">#新建页面</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"built_in\">type</span>: <span class=\"string\">\"tags\"</span> <span class=\"comment\">#在页面中设置type标签</span></div><div class=\"line\">\tcomments: <span class=\"literal\">false</span> <span class=\"comment\">#禁用评论功能，如果有</span></div><div class=\"line\"></div><div class=\"line\">\tmenu: <span class=\"comment\">#在配置文件中添加tags</span></div><div class=\"line\">\t  home: /</div><div class=\"line\">\t  tags: /tags</div><div class=\"line\"><span class=\"comment\">#分类页面同理 categories</span></div></pre></td></tr></table></figure>\n<h3 id=\"修改文章范本\"><a href=\"#修改文章范本\" class=\"headerlink\" title=\"修改文章范本\"></a>修改文章范本</h3><p>范本文档目录为：scaffolds/post.md<br>草稿文本目录为：scaffolds/draft.md</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">title:  <span class=\"comment\">#文章标题</span></div><div class=\"line\">date:  <span class=\"comment\">#时间，一般不用改</span></div><div class=\"line\">categories:  <span class=\"comment\">#目录分类</span></div><div class=\"line\">tags:  <span class=\"comment\">#标签，格式可以是[Hexo,总结]，中间用英文逗号分开</span></div><div class=\"line\">keywords:  <span class=\"comment\">#文章关键词，多个关键词用英文逗号隔开</span></div></pre></td></tr></table></figure>\n<h3 id=\"我遇到的错误解决方法\"><a href=\"#我遇到的错误解决方法\" class=\"headerlink\" title=\"我遇到的错误解决方法\"></a>我遇到的错误解决方法</h3><h4 id=\"github不显示页面的问题\"><a href=\"#github不显示页面的问题\" class=\"headerlink\" title=\"github不显示页面的问题\"></a>github不显示页面的问题</h4><p>在配置里的url如下设置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">url: https://rsl140.github.io/blog/m</div><div class=\"line\">root: /blog <span class=\"comment\">#子文件夹目录名</span></div></pre></td></tr></table></figure>\n<h4 id=\"hexo-无法生成新文章\"><a href=\"#hexo-无法生成新文章\" class=\"headerlink\" title=\"hexo 无法生成新文章\"></a>hexo 无法生成新文章</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">安装hexo步骤从新走一次</div><div class=\"line\">提示hexo不是内部执行命令时 执行</div><div class=\"line\">sudo npm install -g hexo</div></pre></td></tr></table></figure>\n<h4 id=\"site设置\"><a href=\"#site设置\" class=\"headerlink\" title=\"site设置\"></a>site设置</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Site</span></div><div class=\"line\">title: XiaoSi</div><div class=\"line\">subtitle:</div><div class=\"line\">description: 小思</div><div class=\"line\">author: Summer</div><div class=\"line\">language: zh-Hans <span class=\"comment\">#中文</span></div><div class=\"line\">timezone:   Asia/Shanghai <span class=\"comment\">#北京时间</span></div></pre></td></tr></table></figure>\n<h4 id=\"github备份\"><a href=\"#github备份\" class=\"headerlink\" title=\"github备份\"></a>github备份</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">//假设hexo文件夹是已经生成的hexo博客目录</div><div class=\"line\">//如果themes/next(风格名字目录)下面有.git，请删除这个.git文件夹。</div><div class=\"line\"><span class=\"comment\">#cd hexo</span></div><div class=\"line\"><span class=\"comment\">#git init  //初始化本地仓库</span></div><div class=\"line\"><span class=\"comment\">#git add source themes scaffolds _config.yml package.json package-lock.json  //将必要的文件依次添加</span></div><div class=\"line\"><span class=\"comment\">#git commit -m \"blog hexo\"</span></div><div class=\"line\"><span class=\"comment\">#git branch hexo  //新建hexo分支</span></div><div class=\"line\"><span class=\"comment\">#git checkout hexo  //切换到hexo分支上</span></div><div class=\"line\"><span class=\"comment\">#git remote add origin git@github.com:user/user.github.io.git  //将本地与Github项目对接</span></div><div class=\"line\"><span class=\"comment\">#git push origin hexo  //push到Github项目的hexo分支上</span></div></pre></td></tr></table></figure>\n<p>其他终端使用：</p>\n<blockquote>\n<p>前提:nodejs,git,hexo已经安装好，并配置好环境变量。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#git clone -b hexo git@github.com:user/user.github.io.git  //将Github中hexo分支clone到本地</span></div><div class=\"line\"><span class=\"comment\">#cd user.github.io</span></div><div class=\"line\"><span class=\"comment\">#npm install</span></div></pre></td></tr></table></figure>\n<p><a href=\"https://blog.csdn.net/shile/article/details/78714189\">参考原文</a></p>"},{"title":"Markdown的语法","date":"2017-04-10T16:41:55.000Z","_content":"# 标题\n\n``` bash \n# 一级标题\n## 二级标题\n### 三级标题\n以此类推，#后接一个空格\n\n```\n\n# 列表\n无序列表使用星号、加号或是减号作为列表标记：\n\n``` bash \n*   Red\n*   Green\n*   Blue\n\n```\n有序列表则使用数字接着一个英文句点\n\n``` bash \n1.  Bird\n2.  McHale\n3.  Parish\n\n```\n<!-- more -->\n# 分隔线\n\n``` bash \n* * *\n\n***\n\n*****\n\n- - -\n\n---------------------------------------\n\n```\n\n# 链接\nMarkdown 支持两种形式的链接语法： 行内式和参考式两种形式。\n\n不管是哪一种，链接文字都是用 [方括号] 来标记。\n\n要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可\n\n``` bash \nThis is [an example](http://example.com/ \"Title\") inline link.\n\n[This link](http://example.net/) has no title attribute.\n\n```\n\n# 图片\n\n``` bash \n![Alt text](/path/to/img.jpg)\n\n![Alt text](/path/to/img.jpg \"Optional title\")\n\n```\n\n# 引用\n\n``` bash \n> 引用\n\n```\n\n# 表格\n\n``` bash \n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n\n```\n\n# 阅读全文\n\n``` bash \n<!-- more -->\n\n```\n","source":"_posts/Markdown.md","raw":"---\ntitle: Markdown的语法\ndate: 2017-04-11 00:41:55\ntags: markdown\ncategories: 文本编辑\n---\n# 标题\n\n``` bash \n# 一级标题\n## 二级标题\n### 三级标题\n以此类推，#后接一个空格\n\n```\n\n# 列表\n无序列表使用星号、加号或是减号作为列表标记：\n\n``` bash \n*   Red\n*   Green\n*   Blue\n\n```\n有序列表则使用数字接着一个英文句点\n\n``` bash \n1.  Bird\n2.  McHale\n3.  Parish\n\n```\n<!-- more -->\n# 分隔线\n\n``` bash \n* * *\n\n***\n\n*****\n\n- - -\n\n---------------------------------------\n\n```\n\n# 链接\nMarkdown 支持两种形式的链接语法： 行内式和参考式两种形式。\n\n不管是哪一种，链接文字都是用 [方括号] 来标记。\n\n要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可\n\n``` bash \nThis is [an example](http://example.com/ \"Title\") inline link.\n\n[This link](http://example.net/) has no title attribute.\n\n```\n\n# 图片\n\n``` bash \n![Alt text](/path/to/img.jpg)\n\n![Alt text](/path/to/img.jpg \"Optional title\")\n\n```\n\n# 引用\n\n``` bash \n> 引用\n\n```\n\n# 表格\n\n``` bash \n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n\n```\n\n# 阅读全文\n\n``` bash \n<!-- more -->\n\n```\n","slug":"Markdown","published":1,"updated":"2017-09-06T09:25:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1jo0008cdons1asrml2","content":"<h1 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 一级标题</span></div><div class=\"line\"><span class=\"comment\">## 二级标题</span></div><div class=\"line\"><span class=\"comment\">### 三级标题</span></div><div class=\"line\">以此类推，<span class=\"comment\">#后接一个空格</span></div></pre></td></tr></table></figure>\n<h1 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h1><p>无序列表使用星号、加号或是减号作为列表标记：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">*   Red</div><div class=\"line\">*   Green</div><div class=\"line\">*   Blue</div></pre></td></tr></table></figure>\n<p>有序列表则使用数字接着一个英文句点</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.  Bird</div><div class=\"line\">2.  McHale</div><div class=\"line\">3.  Parish</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h1 id=\"分隔线\"><a href=\"#分隔线\" class=\"headerlink\" title=\"分隔线\"></a>分隔线</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">* * *</div><div class=\"line\"></div><div class=\"line\">***</div><div class=\"line\"></div><div class=\"line\">*****</div><div class=\"line\"></div><div class=\"line\">- - -</div><div class=\"line\"></div><div class=\"line\">---------------------------------------</div></pre></td></tr></table></figure>\n<h1 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h1><p>Markdown 支持两种形式的链接语法： 行内式和参考式两种形式。</p>\n<p>不管是哪一种，链接文字都是用 [方括号] 来标记。</p>\n<p>要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">This is [an example](http://example.com/ <span class=\"string\">\"Title\"</span>) inline link.</div><div class=\"line\"></div><div class=\"line\">[This link](http://example.net/) has no title attribute.</div></pre></td></tr></table></figure>\n<h1 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">![Alt text](/path/to/img.jpg)</div><div class=\"line\"></div><div class=\"line\">![Alt text](/path/to/img.jpg <span class=\"string\">\"Optional title\"</span>)</div></pre></td></tr></table></figure>\n<h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; 引用</div></pre></td></tr></table></figure>\n<h1 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">| Tables        | Are           | Cool  |</div><div class=\"line\">| ------------- |:-------------:| -----:|</div><div class=\"line\">| col 3 is      | right-aligned | <span class=\"variable\">$1600</span> |</div><div class=\"line\">| col 2 is      | centered      |   <span class=\"variable\">$12</span> |</div><div class=\"line\">| zebra stripes | are neat      |    <span class=\"variable\">$1</span> |</div></pre></td></tr></table></figure>\n<h1 id=\"阅读全文\"><a href=\"#阅读全文\" class=\"headerlink\" title=\"阅读全文\"></a>阅读全文</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- more --&gt;</div></pre></td></tr></table></figure>\n","excerpt":"<h1 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 一级标题</span></div><div class=\"line\"><span class=\"comment\">## 二级标题</span></div><div class=\"line\"><span class=\"comment\">### 三级标题</span></div><div class=\"line\">以此类推，<span class=\"comment\">#后接一个空格</span></div></pre></td></tr></table></figure>\n<h1 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h1><p>无序列表使用星号、加号或是减号作为列表标记：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">*   Red</div><div class=\"line\">*   Green</div><div class=\"line\">*   Blue</div></pre></td></tr></table></figure>\n<p>有序列表则使用数字接着一个英文句点</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.  Bird</div><div class=\"line\">2.  McHale</div><div class=\"line\">3.  Parish</div></pre></td></tr></table></figure>","more":"<h1 id=\"分隔线\"><a href=\"#分隔线\" class=\"headerlink\" title=\"分隔线\"></a>分隔线</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">* * *</div><div class=\"line\"></div><div class=\"line\">***</div><div class=\"line\"></div><div class=\"line\">*****</div><div class=\"line\"></div><div class=\"line\">- - -</div><div class=\"line\"></div><div class=\"line\">---------------------------------------</div></pre></td></tr></table></figure>\n<h1 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h1><p>Markdown 支持两种形式的链接语法： 行内式和参考式两种形式。</p>\n<p>不管是哪一种，链接文字都是用 [方括号] 来标记。</p>\n<p>要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">This is [an example](http://example.com/ <span class=\"string\">\"Title\"</span>) inline link.</div><div class=\"line\"></div><div class=\"line\">[This link](http://example.net/) has no title attribute.</div></pre></td></tr></table></figure>\n<h1 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">![Alt text](/path/to/img.jpg)</div><div class=\"line\"></div><div class=\"line\">![Alt text](/path/to/img.jpg <span class=\"string\">\"Optional title\"</span>)</div></pre></td></tr></table></figure>\n<h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; 引用</div></pre></td></tr></table></figure>\n<h1 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">| Tables        | Are           | Cool  |</div><div class=\"line\">| ------------- |:-------------:| -----:|</div><div class=\"line\">| col 3 is      | right-aligned | <span class=\"variable\">$1600</span> |</div><div class=\"line\">| col 2 is      | centered      |   <span class=\"variable\">$12</span> |</div><div class=\"line\">| zebra stripes | are neat      |    <span class=\"variable\">$1</span> |</div></pre></td></tr></table></figure>\n<h1 id=\"阅读全文\"><a href=\"#阅读全文\" class=\"headerlink\" title=\"阅读全文\"></a>阅读全文</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- more --&gt;</div></pre></td></tr></table></figure>"},{"title":"mac for command not found","date":"2017-05-09T07:49:57.000Z","keywords":"mac,path,环境变量","_content":">装环境java环境变量后导致全局环境变量没有了，以下为解决方法\n\n# 在命令行中输入\n\n``` bash\n    1.export PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:$PATH #这样可以保证命令行暂时可以使用。关闭终端后再使用就不行了。\n\n    2.cd ~/ #进入当前用户的home目录\n\n    3.touch .bash_profile # 创建bash_profile执行命令\n\n    4.open .bash_profile # 打开并编辑bash_profile\n\n    5.在打开的记事本中会显示之前配置的path 保存文档\n\n    6.source .bash_profile # 更新命令 命令行(终端)要保持不要关闭\n\n```\n<!--  more  -->\n","source":"_posts/PATH.md","raw":"---\ntitle: mac for command not found\ndate: 2017-05-09 15:49:57\ntags: mac\ncategories: path\nkeywords: mac,path,环境变量\n---\n>装环境java环境变量后导致全局环境变量没有了，以下为解决方法\n\n# 在命令行中输入\n\n``` bash\n    1.export PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:$PATH #这样可以保证命令行暂时可以使用。关闭终端后再使用就不行了。\n\n    2.cd ~/ #进入当前用户的home目录\n\n    3.touch .bash_profile # 创建bash_profile执行命令\n\n    4.open .bash_profile # 打开并编辑bash_profile\n\n    5.在打开的记事本中会显示之前配置的path 保存文档\n\n    6.source .bash_profile # 更新命令 命令行(终端)要保持不要关闭\n\n```\n<!--  more  -->\n","slug":"PATH","published":1,"updated":"2017-09-06T09:25:13.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1jp0009cdon3gd3q7j4","content":"<blockquote>\n<p>装环境java环境变量后导致全局环境变量没有了，以下为解决方法</p>\n</blockquote>\n<h1 id=\"在命令行中输入\"><a href=\"#在命令行中输入\" class=\"headerlink\" title=\"在命令行中输入\"></a>在命令行中输入</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.export PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/<span class=\"built_in\">local</span>/bin:<span class=\"variable\">$PATH</span> <span class=\"comment\">#这样可以保证命令行暂时可以使用。关闭终端后再使用就不行了。</span></div><div class=\"line\"></div><div class=\"line\">2.cd ~/ <span class=\"comment\">#进入当前用户的home目录</span></div><div class=\"line\"></div><div class=\"line\">3.touch .bash_profile <span class=\"comment\"># 创建bash_profile执行命令</span></div><div class=\"line\"></div><div class=\"line\">4.open .bash_profile <span class=\"comment\"># 打开并编辑bash_profile</span></div><div class=\"line\"></div><div class=\"line\">5.在打开的记事本中会显示之前配置的path 保存文档</div><div class=\"line\"></div><div class=\"line\">6.source .bash_profile <span class=\"comment\"># 更新命令 命令行(终端)要保持不要关闭</span></div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n","excerpt":"<blockquote>\n<p>装环境java环境变量后导致全局环境变量没有了，以下为解决方法</p>\n</blockquote>\n<h1 id=\"在命令行中输入\"><a href=\"#在命令行中输入\" class=\"headerlink\" title=\"在命令行中输入\"></a>在命令行中输入</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.export PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/<span class=\"built_in\">local</span>/bin:<span class=\"variable\">$PATH</span> <span class=\"comment\">#这样可以保证命令行暂时可以使用。关闭终端后再使用就不行了。</span></div><div class=\"line\"></div><div class=\"line\">2.cd ~/ <span class=\"comment\">#进入当前用户的home目录</span></div><div class=\"line\"></div><div class=\"line\">3.touch .bash_profile <span class=\"comment\"># 创建bash_profile执行命令</span></div><div class=\"line\"></div><div class=\"line\">4.open .bash_profile <span class=\"comment\"># 打开并编辑bash_profile</span></div><div class=\"line\"></div><div class=\"line\">5.在打开的记事本中会显示之前配置的path 保存文档</div><div class=\"line\"></div><div class=\"line\">6.source .bash_profile <span class=\"comment\"># 更新命令 命令行(终端)要保持不要关闭</span></div></pre></td></tr></table></figure>","more":""},{"title":"Bower的使用","date":"2017-03-27T06:03:05.000Z","_content":"## Bower\n\n文件目录创建\n``` bash\n\tbower init\n```\n安装依赖文件\n``` bash\n\tbower install --save angular //例：angular安装\n```\n路径配置文件的创建\n``` bash\n\tnull>.bowerrc\n```\n项目卸载\n``` bash\n\tbower uninstall --save [文件名](移除项目)\n```\n<!-- more -->\n","source":"_posts/bower.md","raw":"---\ntitle: Bower的使用\ndate: 2017-03-27 14:03:05\ncategories: FE\ntags: bower\n---\n## Bower\n\n文件目录创建\n``` bash\n\tbower init\n```\n安装依赖文件\n``` bash\n\tbower install --save angular //例：angular安装\n```\n路径配置文件的创建\n``` bash\n\tnull>.bowerrc\n```\n项目卸载\n``` bash\n\tbower uninstall --save [文件名](移除项目)\n```\n<!-- more -->\n","slug":"bower","published":1,"updated":"2017-04-11T03:58:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1jr000dcdonylmoz7il","content":"<h2 id=\"Bower\"><a href=\"#Bower\" class=\"headerlink\" title=\"Bower\"></a>Bower</h2><p>文件目录创建<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">bower init</div></pre></td></tr></table></figure></p>\n<p>安装依赖文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">bower install --save angular //例：angular安装</div></pre></td></tr></table></figure></p>\n<p>路径配置文件的创建<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">null&gt;.bowerrc</div></pre></td></tr></table></figure></p>\n<p>项目卸载<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">bower uninstall --save [文件名](移除项目)</div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n","excerpt":"<h2 id=\"Bower\"><a href=\"#Bower\" class=\"headerlink\" title=\"Bower\"></a>Bower</h2><p>文件目录创建<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">bower init</div></pre></td></tr></table></figure></p>\n<p>安装依赖文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">bower install --save angular //例：angular安装</div></pre></td></tr></table></figure></p>\n<p>路径配置文件的创建<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">null&gt;.bowerrc</div></pre></td></tr></table></figure></p>\n<p>项目卸载<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">bower uninstall --save [文件名](移除项目)</div></pre></td></tr></table></figure></p>","more":""},{"title":"hexo draft 草稿","date":"2017-04-11T10:09:35.000Z","keywords":"hexo,草稿","_content":">想写些东西，但是暂时不想发布，就找到了用这种方法来保存\n\n创建草稿的方法是\n``` bash\n    hexo new draft name #name为文档名\n```\n创建好文档后存储的目录为:`source/_drafts/` 使用`hexo g`时，草稿不会被创建。\n\n想要查看草稿文章的话可使用`hexo s --draft` 或者在 `_config.yml`文件中进行配置`render_drafts: true`,本地启动时会渲染草稿.\n\n发布草稿使用如下方法\n``` bash    \n    hexo publish name #name为草稿.md的文件名\n```\n\n<!--  more  -->\n\n","source":"_posts/draft.md","raw":"---\ntitle: hexo draft 草稿\ndate: 2017-04-11 18:09:35\ntags: markdown\ncategories: 文本编辑\nkeywords: hexo,草稿\n---\n>想写些东西，但是暂时不想发布，就找到了用这种方法来保存\n\n创建草稿的方法是\n``` bash\n    hexo new draft name #name为文档名\n```\n创建好文档后存储的目录为:`source/_drafts/` 使用`hexo g`时，草稿不会被创建。\n\n想要查看草稿文章的话可使用`hexo s --draft` 或者在 `_config.yml`文件中进行配置`render_drafts: true`,本地启动时会渲染草稿.\n\n发布草稿使用如下方法\n``` bash    \n    hexo publish name #name为草稿.md的文件名\n```\n\n<!--  more  -->\n\n","slug":"draft","published":1,"updated":"2017-09-06T09:22:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1js000fcdon84f8spd5","content":"<blockquote>\n<p>想写些东西，但是暂时不想发布，就找到了用这种方法来保存</p>\n</blockquote>\n<p>创建草稿的方法是<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new draft name <span class=\"comment\">#name为文档名</span></div></pre></td></tr></table></figure></p>\n<p>创建好文档后存储的目录为:<code>source/_drafts/</code> 使用<code>hexo g</code>时，草稿不会被创建。</p>\n<p>想要查看草稿文章的话可使用<code>hexo s --draft</code> 或者在 <code>_config.yml</code>文件中进行配置<code>render_drafts: true</code>,本地启动时会渲染草稿.</p>\n<p>发布草稿使用如下方法<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo publish name <span class=\"comment\">#name为草稿.md的文件名</span></div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n","excerpt":"<blockquote>\n<p>想写些东西，但是暂时不想发布，就找到了用这种方法来保存</p>\n</blockquote>\n<p>创建草稿的方法是<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new draft name <span class=\"comment\">#name为文档名</span></div></pre></td></tr></table></figure></p>\n<p>创建好文档后存储的目录为:<code>source/_drafts/</code> 使用<code>hexo g</code>时，草稿不会被创建。</p>\n<p>想要查看草稿文章的话可使用<code>hexo s --draft</code> 或者在 <code>_config.yml</code>文件中进行配置<code>render_drafts: true</code>,本地启动时会渲染草稿.</p>\n<p>发布草稿使用如下方法<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo publish name <span class=\"comment\">#name为草稿.md的文件名</span></div></pre></td></tr></table></figure></p>","more":""},{"title":"Contributions不显示(git)","date":"2017-06-20T04:23:00.000Z","keywords":null,"_content":">当我换到MAC得时候重新配置了git之后 Contributions 不显示了 后来搜了很多方法，今天终于解决。\n\n## 原因：建立用户的时候用错了email 和github关联的email不一样 导致了Contributions不显示，值显示了新建repo的记录\n进入repo 查看git log 日志发现 提交邮箱和关联邮箱不一致。\n\n## 方法一：添加这个邮箱到自己的github账户中\n进入自己的设置里 email选项中新增log下的邮箱。（这时会收到一个验证邮件，点击确认。）\n返回主页后回发现Contributions出现了。\n\n## 方法二：修改提交记录中的邮箱为已被关联的邮箱(个人不太建议)\n\n<!--  more  -->\n\n## 如何正确设置你的 git 个人信息\n接下来全局设置好你的正确信息，以后就放心的用Github进行版本管理\n\n```\n    git config --global user.email \"你的邮件地址\"\n    git config --global user.name \"你的Github用户名\"\n```\n","source":"_posts/git.md","raw":"---\ntitle: Contributions不显示(git)\ndate: 2017-06-20 12:23:00\ntags:\ncategories:\nkeywords:\n---\n>当我换到MAC得时候重新配置了git之后 Contributions 不显示了 后来搜了很多方法，今天终于解决。\n\n## 原因：建立用户的时候用错了email 和github关联的email不一样 导致了Contributions不显示，值显示了新建repo的记录\n进入repo 查看git log 日志发现 提交邮箱和关联邮箱不一致。\n\n## 方法一：添加这个邮箱到自己的github账户中\n进入自己的设置里 email选项中新增log下的邮箱。（这时会收到一个验证邮件，点击确认。）\n返回主页后回发现Contributions出现了。\n\n## 方法二：修改提交记录中的邮箱为已被关联的邮箱(个人不太建议)\n\n<!--  more  -->\n\n## 如何正确设置你的 git 个人信息\n接下来全局设置好你的正确信息，以后就放心的用Github进行版本管理\n\n```\n    git config --global user.email \"你的邮件地址\"\n    git config --global user.name \"你的Github用户名\"\n```\n","slug":"git","published":1,"updated":"2017-09-06T09:23:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1ju000icdonl2nfpi2u","content":"<blockquote>\n<p>当我换到MAC得时候重新配置了git之后 Contributions 不显示了 后来搜了很多方法，今天终于解决。</p>\n</blockquote>\n<h2 id=\"原因：建立用户的时候用错了email-和github关联的email不一样-导致了Contributions不显示，值显示了新建repo的记录\"><a href=\"#原因：建立用户的时候用错了email-和github关联的email不一样-导致了Contributions不显示，值显示了新建repo的记录\" class=\"headerlink\" title=\"原因：建立用户的时候用错了email 和github关联的email不一样 导致了Contributions不显示，值显示了新建repo的记录\"></a>原因：建立用户的时候用错了email 和github关联的email不一样 导致了Contributions不显示，值显示了新建repo的记录</h2><p>进入repo 查看git log 日志发现 提交邮箱和关联邮箱不一致。</p>\n<h2 id=\"方法一：添加这个邮箱到自己的github账户中\"><a href=\"#方法一：添加这个邮箱到自己的github账户中\" class=\"headerlink\" title=\"方法一：添加这个邮箱到自己的github账户中\"></a>方法一：添加这个邮箱到自己的github账户中</h2><p>进入自己的设置里 email选项中新增log下的邮箱。（这时会收到一个验证邮件，点击确认。）<br>返回主页后回发现Contributions出现了。</p>\n<h2 id=\"方法二：修改提交记录中的邮箱为已被关联的邮箱-个人不太建议\"><a href=\"#方法二：修改提交记录中的邮箱为已被关联的邮箱-个人不太建议\" class=\"headerlink\" title=\"方法二：修改提交记录中的邮箱为已被关联的邮箱(个人不太建议)\"></a>方法二：修改提交记录中的邮箱为已被关联的邮箱(个人不太建议)</h2><a id=\"more\"></a>\n<h2 id=\"如何正确设置你的-git-个人信息\"><a href=\"#如何正确设置你的-git-个人信息\" class=\"headerlink\" title=\"如何正确设置你的 git 个人信息\"></a>如何正确设置你的 git 个人信息</h2><p>接下来全局设置好你的正确信息，以后就放心的用Github进行版本管理</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global user.email &quot;你的邮件地址&quot;</div><div class=\"line\">git config --global user.name &quot;你的Github用户名&quot;</div></pre></td></tr></table></figure>\n","excerpt":"<blockquote>\n<p>当我换到MAC得时候重新配置了git之后 Contributions 不显示了 后来搜了很多方法，今天终于解决。</p>\n</blockquote>\n<h2 id=\"原因：建立用户的时候用错了email-和github关联的email不一样-导致了Contributions不显示，值显示了新建repo的记录\"><a href=\"#原因：建立用户的时候用错了email-和github关联的email不一样-导致了Contributions不显示，值显示了新建repo的记录\" class=\"headerlink\" title=\"原因：建立用户的时候用错了email 和github关联的email不一样 导致了Contributions不显示，值显示了新建repo的记录\"></a>原因：建立用户的时候用错了email 和github关联的email不一样 导致了Contributions不显示，值显示了新建repo的记录</h2><p>进入repo 查看git log 日志发现 提交邮箱和关联邮箱不一致。</p>\n<h2 id=\"方法一：添加这个邮箱到自己的github账户中\"><a href=\"#方法一：添加这个邮箱到自己的github账户中\" class=\"headerlink\" title=\"方法一：添加这个邮箱到自己的github账户中\"></a>方法一：添加这个邮箱到自己的github账户中</h2><p>进入自己的设置里 email选项中新增log下的邮箱。（这时会收到一个验证邮件，点击确认。）<br>返回主页后回发现Contributions出现了。</p>\n<h2 id=\"方法二：修改提交记录中的邮箱为已被关联的邮箱-个人不太建议\"><a href=\"#方法二：修改提交记录中的邮箱为已被关联的邮箱-个人不太建议\" class=\"headerlink\" title=\"方法二：修改提交记录中的邮箱为已被关联的邮箱(个人不太建议)\"></a>方法二：修改提交记录中的邮箱为已被关联的邮箱(个人不太建议)</h2>","more":"<h2 id=\"如何正确设置你的-git-个人信息\"><a href=\"#如何正确设置你的-git-个人信息\" class=\"headerlink\" title=\"如何正确设置你的 git 个人信息\"></a>如何正确设置你的 git 个人信息</h2><p>接下来全局设置好你的正确信息，以后就放心的用Github进行版本管理</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global user.email &quot;你的邮件地址&quot;</div><div class=\"line\">git config --global user.name &quot;你的Github用户名&quot;</div></pre></td></tr></table></figure>"},{"title":"Gulp","date":"2017-03-27T06:07:41.000Z","_content":"## Gulp\n\n\n安装gulp\n\n``` bash\n\tnpm i -g gulp\n```\n初始化\n\n``` bash\n\tnpm init\n```\n当前文件中安装并保存在配置文件中\n\n``` bash\n\tnpm i --sace-dev gulp\n```\n模块安装\n\n``` bash\n\tnpm i --save-dev gulp-clean gulp-concat gulp-connect gulp-cssmin gulp-imagemin gulp-less gulp-load-plugins gulp-plumber gulp-uglify open\n```\n<!-- more -->","source":"_posts/gulp.md","raw":"---\ntitle: Gulp\ndate: 2017-03-27 14:07:41\ncategories: FE\ntags: gulp\n---\n## Gulp\n\n\n安装gulp\n\n``` bash\n\tnpm i -g gulp\n```\n初始化\n\n``` bash\n\tnpm init\n```\n当前文件中安装并保存在配置文件中\n\n``` bash\n\tnpm i --sace-dev gulp\n```\n模块安装\n\n``` bash\n\tnpm i --save-dev gulp-clean gulp-concat gulp-connect gulp-cssmin gulp-imagemin gulp-less gulp-load-plugins gulp-plumber gulp-uglify open\n```\n<!-- more -->","slug":"gulp","published":1,"updated":"2017-04-11T03:58:26.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1ju000lcdonp9ss21n3","content":"<h2 id=\"Gulp\"><a href=\"#Gulp\" class=\"headerlink\" title=\"Gulp\"></a>Gulp</h2><p>安装gulp</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i -g gulp</div></pre></td></tr></table></figure>\n<p>初始化</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm init</div></pre></td></tr></table></figure>\n<p>当前文件中安装并保存在配置文件中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i --sace-dev gulp</div></pre></td></tr></table></figure>\n<p>模块安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i --save-dev gulp-clean gulp-concat gulp-connect gulp-cssmin gulp-imagemin gulp-less gulp-load-plugins gulp-plumber gulp-uglify open</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>","excerpt":"<h2 id=\"Gulp\"><a href=\"#Gulp\" class=\"headerlink\" title=\"Gulp\"></a>Gulp</h2><p>安装gulp</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i -g gulp</div></pre></td></tr></table></figure>\n<p>初始化</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm init</div></pre></td></tr></table></figure>\n<p>当前文件中安装并保存在配置文件中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i --sace-dev gulp</div></pre></td></tr></table></figure>\n<p>模块安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm i --save-dev gulp-clean gulp-concat gulp-connect gulp-cssmin gulp-imagemin gulp-less gulp-load-plugins gulp-plumber gulp-uglify open</div></pre></td></tr></table></figure>","more":""},{"title":"java","date":"2017-05-09T07:48:26.000Z","keywords":null,"_content":">java 培训笔记\n\n# 第三章\n\n## Scanner\n重点：Scanner input= new Scanner(System.in) 在整个程序里面，只用写一次就可以了。然后input可以对于任意输出来进行调用。\ninput.close();//清除input里面的值\n\n## boolean（布尔）类型\nboolean类型的值\n真：true\n假：false\n例如：boolean isTiaoJian1=javaScore>98 && musicScore >80;\n例如命名：boolean isBig\n注：需要注意的一点是，boolean在命名的时候开头需要用is\n\n## if结构\n多重if执行结构为1次或0次，不会执行更多的次数。所以多重if需要遵循从前往后的执行顺序。\n\n在if里面，如果是字符串char和String进行比较的话，需要使用equals方法\n例如：if(sex.equals(\"男\"))\n当如果需要对常量和变量进行比较的时候，需要把常量写在前面，变量写后面\n例如：if(\"男\".equals(sex))\n\n## switch中可以使用的数据类型：\n1. char、short、int、long、bool 基本类型都可以用于switch语句。 2. float、double都不能用于switch语句。 3. enum类型,即枚举类型可以用于switch语句。4.String可以用于switch语句，但是限定于jdk1.7版本以上\n\n<!--  more  -->\n\n## *比较switch和多重if选择结构\n相同点\n都是用来处理多分支条件的结构\n不同点\nswitch选择结b构：只能处理等值条件判断的情况，而且条件必须是整型变量或字符型变量或String。\n多重if选择结构：没有swithc选择机构的限制，特别适合某个变量处于某个连续区间时的情况。\n\n## 退出命令\nSystem.exit(0);  //程序结束执行，0正常退出，1是异常推出\n\n## 判定输入是否异常\nhasNextInt //异常判断\n\n==比较的是变量的地址\nequals比较的是String类型变量的值\n\n# 第四章\n\n循环的四要素\n1、初始化循环变量\n2、判断循环条件\n3、执行循环操作\n4、迭代循环变量\n\nwhile循环和do-while循环的区别\n*语法不同\n\n*执行次序不同\n*初始情况不满足循环条件时\n1、while循环一次都不会执行\n2、do-while循环不管任何情况都至少执行一次\n\n# 第五章\n\n## 案例：实现整数反转\n``` java\n    public static void mian(String[ ] args){\n    int val=12345;\n    int r_digit;\n    System.out.print(\"反转后的整数是：\");\n    while(val!=0){\n            r_digit=val%10;\n            System.out.print(r_digit);\n            val=val/10;\n        }\n    }\n```\n\n## for循环执行条件\n1、参数初始化\n2、条件判断\n3、循环操作\n4、更新循环变量\n5、条件判断（如果为true）则再次执行循环体\n\n## for循环的条件使用方式\n``` java\n/*\n*1.初始化循环变量可以不写在for里面\n*2.迭代可以不写在for里面\n*3.判断条件也可以不写在for里面，但要在循环体里面写上break\n*/\n案例展示\npublic static void mian(String[ ] args){\n    int sum=0;//累加\n    int i=0;\n    for(){\n        if(i>10){\n            break;//终止循环\n            }\n        sum+=i;\n        i++;\n    }\n    System.out.println(\"1到10累加的和为：\"+sum);\n}\n```\n\n## break和Continue；\nbreak   终止整个循环\ncontinue  终止当前次的循环\n使用场合\nbreak可用于switch结构和循环结构中\nContinue只能用于循环结构\n作用（循环结构中）\nbreak语句终止某个循环，程序跳转到循环块外的下一条语句。\ncontinue跳出本次循环，进入下一次循环\n？？continue在多重判断里面是否有作用呢？？\n\nctrl+shift+o是导入包\njava里面的%的使用 NumberFormat(数字格式化)  \n//百度搜索 java NumberFormat\n/*指定要输出的格式化，\"##.00%\"这个格式是固定的*/\nDecimalFormat df1=new DecimalFormat(\"##.00%\");\n/*格式化*/\nString str=df1.format(0.389);\nSystem.out.println(str)\n\n## java如何获取当前时间\n``` java\n    Data currentDate=new data();\n    System.out.println(currentDate);//标准格里高利历\n    /*简易化日期显示，\"yyyy/MM/dd hh:mm:ss\"这个格式是固定的*/\n    SimpleDateFormat sdf=new SimpleDateFormat(\"yyyy/MM/dd hh:mm:ss\" );\n    注：大写的mm是月，小写的mm是分钟\n    String dateStr=sdf.format(currentDate);\n    System.out.println(dateStr);\n    Date newDate=sdf.parse(dateStr);//把字符转化成日期\n```\n\n嵌套循环的特点：\n外层循环循环1次，内层循环要循环所有次。\n\n# 第六章\n\n## 什么是数组：\n数组是一个变量，存储相同数据类型的一组数据\n数组和变量的区别\n变量：声明一个变量就是在内存空间划出一块合适的空间\n数组：声明一个数组就是在内存空间划出一串连续的空间\n\n## 数组的结构和基本要素\n标识符：数组的名称，用于区分不同的数组\n数组元素：实际就是变量名，用来确定数组的起始位置\n元素下标：数组中每个元素的编号\n数组元素：数组中存放内容\n\n元素下标标明了元素在数组中的位置，从0开始\n数组长度固定不变，避免数组越界\n数组中的所有元素必须是相同的数据类型\n\n## 使用数组的四步：\n1、声明数组 int[] a;\n2、分配空间 a=new int[5];\n数据类型[ ]  数组名 = new 数据类型[大小]；\n3、赋值 a[0]=8;\n4、处理数据 a[0]=a[0]*10;\n\n## 关于length\n数组的长度使用：数组名.length\n数组的length：没有括号的叫属性，有括号的叫方法\n\n当基本数据类型被定义到堆空间的时候，java默认分配值（int double boolean）\n引用数据数据类型不会分配值，是空的（String）\nint：0\ndouble:0.0\nboolean:false\nString:null\n\n## 关于数组错误异常的提示：\nNullpointerException  空指针异常  检查是否没有没有对引用类型赋值\nArrayIndexOutOfboundsException 数组下标越界   检查是否越界，超出长度\n\n## for each（加强循环） \nfor（String pro:products）{\nSystem.out.println(pro);\n}\n步长 是指访问数组里面的量的时候，所需要的执行顺序。\n例如：如果我要访问一个数组中每一个数的话，就可以用加强循环\n   如果我要访问一个组数中不是每一个数的画（或者需要获取下标的时候也不能使用），就不能用加强循环。\n\n`Arrays.sort`(数组);//对数组进行升序排列\n\n基本数据类型：改变一个变量的值，不会去影响另外一个变量的值。\n\n`compare`\n\n## 对象\n用来描述客观事物的一个实体，由一组属性和方法构成。\n对象的属性和方法`通常`都是封装在一起的。\n### 类\n具有相同属性和方法的一组对象的集合\n\n#### 定义一个类的步骤\n1.定义类名\n2.编写类的属性\n3.编写类的方法\n\n#### 常见错误\n不能在方法外部直接写程序逻辑代码 如:\n``` java\n    public class demo{\n        int age =20;\n\n        if(age < 20){\n            System.out.println(\"XXXX\"); // 逻辑程序不能写在方法外部 除非加个代码块{}\n        }\n        public int show(){\n            return age;\n        }\n    }\n```\n\n#### 作用域\n局部变量的作用域仅限于定义他的方法\n成员变量的作用域在整个类内部都是可见的\n\njava会给成员变量一个初值\njava不会给局部变量赋予初值\n在同一个方法中，不允许有同名局部变量；在不同的方法中，可以有同名局部变量\n两类变量同名时，局部变量具有更高的优先级\n\n`堆内存`：保存对象的真正数据，都是每一个对象的属性内容\n`栈内存`：保存的时一块堆内存的地址\n\n#### 递归\n``` java\n    public class Hello{\n        public static void main(String[] arry){\n            System.out.println(add(100));\n        }\n\n        public static int add(int num){\n            if(num == 1){//结束条件\n                return 1;//不再向后继续加了\n            }\n            return num+add(num-1);//修改参数内容\n        }\n    }\n```\n# 字符串(String)\n\n`concat` 字符串链接(数字类型调用不了)\n`substring(3)`从第3个(包含)开始截取到最后\n`substring(2,5)`从第2个(包含)开始截取到第5个(不包含)\n\n## 文件名判断方法\n``` java\n    String fileName = \"djkl.java\";\n    int index = fileName.lastIndexOf(\".\");\n    //index != -1 找不到\n    if(index != -1 && index != 0 && fileName.substring(index+1).equals(\"java\")){\n            System.out.println(\"有效文件名！\");\n    }else{\n            System.out.println(\"文件名无效！\");\n    }\n\n    /*检查邮箱格式*/\n    if(email.indexOf('@') != -1 && email.indexOf('.') > email.indexOf('@')){\n        emailCorrect = true;\n    }else{\n        System.out.println(\"Email无效！\");\n    }\n```\n\n## String StringBuffer StringBuilder的区别\n\n# 第十章\n\n## 构造函数\n当没有显式声明有参的构造方法的时候，java会默认生成一无参的构造方法\n一旦声明了有参的构造函数后，java就不会生成无参的构造函数\n\n## static\n可以用来修饰属性、方法和代码块\n修饰的属性和方法称为类属性（类变量）、类方法\n不使用static修饰的属性和方法，属于单个对象，通常称为实例属性（实例变量）、实例方法\nstatic修饰的变量和方法可以通过类名和对象名访问，而不用static修饰的变量和方法只能通过对象名访问\nfinal修饰的变量成为常量，其值固定不变\n\nstatic定义的方法不能调用static的方法或属性\n非static定义的方法可以调用static的属性或方法\n\n## 封装\n将类的某些信息隐藏在类内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对隐藏信息的操作和访问\n<span style=\"color: red\">好处：</span>只能通过规定方法访问数据，方便加入控制语句，方便修改实现\n\n## 抽象类\n1.抽象类的关键字是abstract\n2.在一个类如果至少有一个abstract方法，那么这个类必须是抽象类\n3.抽象类里可以包含普通方法和属性\n4.抽象类的子类必须实现父类的抽象方法，如果不想实现，那么这个子类必须为抽象类\n5.abstract方法不能写为私有，必须是可见的\n6.抽象方法不能有实现\n\n``` java\n    public abstract class PetAbstract extends Pet {\n    public abstract void print();//不能为private\n    \n    public void text(){\n        System.out.print(\"这是一个普通方法\");\n    }\n}\n```\n\n## 多态\n/|位置|方法名|参数表|返回值|访问修饰符\n-|----|-----|-----|-----|---------\n方法重写|子类|相同|相同|相同|不能比父类更严格\n方法重载|同类|相同|相同|无关|无关\n\n<span style=\"color: red\">多态的必要条件</span>\n1.要有继承\n2.要有重写\n3.父类引用指向子类对象\n\n多态的好处\n1.可替换性\n2.可扩充性\n3.接口性\n4.灵活性\n5.简化性\n\n## IO流\n\nFile file = new File(\"/Users/`UserName #自己的用户名`/Desktop/1.html\");\n`File.separator` 用于代替\"/\"\n``` java\nFile.separator+\"Users\"+File.separator+\"UserName\"+File.separator+\"Desktop\"+File.separator+\"desktop\"+File.separator+\"1.html\"\n```\n\n## 多线程\n\n进程：是程序的一次动态执行过程，它对应了从代码加载、执行至执行完毕的一个完整过程。\n特点：\n1.进程是系统运行程序的基本单位\n2.每一个进程有自己的独立的内存空间、一组系统资源。\n3.每一个进程的内部数据和状态都是完全独立。\n\n线程：进程内部的一个执行单位，它使程序中一个单一的顺序控制流程。\n\n- 引入进程是为了多个程序并发执行，提高资源的利用率和系统吞吐量\n- 引入线程是为了减少程序在并发执行时付出的时空开销\n- 进程间不能共享内存，但线程之间共享内存非常容易\n- 使用多线程实现多任务并发比多进程的效率高\n\n### 实现方法\n``` java\n方法一:继承Java.lang.Thread类,并覆盖run()方法\n    class MyThread extends Thread {\n     public void run( ) {\n         /* 覆盖该方法*/\n      }\n    }\n方法二:实现Java.lang.Runnable接口,并实现run()方法\n    class MyThread implements Runnable{\n      public void run( ) {\n            /* 实现该方法*/ \n      }\n    }\n```\n\n# Tomcat\n`$ /Library/Tomcat/bin/startup.sh`开启服务器\n`$ /Library/Tomcat/bin/shutdown.sh`关闭服务器\n`localhost:8080`服务器开启地址\nwebapps 网站放置地址\n`localhost:8080/javaJar`","source":"_posts/java.md","raw":"---\ntitle: java\ndate: 2017-05-09 15:48:26\ntags:\ncategories:\nkeywords:\n---\n>java 培训笔记\n\n# 第三章\n\n## Scanner\n重点：Scanner input= new Scanner(System.in) 在整个程序里面，只用写一次就可以了。然后input可以对于任意输出来进行调用。\ninput.close();//清除input里面的值\n\n## boolean（布尔）类型\nboolean类型的值\n真：true\n假：false\n例如：boolean isTiaoJian1=javaScore>98 && musicScore >80;\n例如命名：boolean isBig\n注：需要注意的一点是，boolean在命名的时候开头需要用is\n\n## if结构\n多重if执行结构为1次或0次，不会执行更多的次数。所以多重if需要遵循从前往后的执行顺序。\n\n在if里面，如果是字符串char和String进行比较的话，需要使用equals方法\n例如：if(sex.equals(\"男\"))\n当如果需要对常量和变量进行比较的时候，需要把常量写在前面，变量写后面\n例如：if(\"男\".equals(sex))\n\n## switch中可以使用的数据类型：\n1. char、short、int、long、bool 基本类型都可以用于switch语句。 2. float、double都不能用于switch语句。 3. enum类型,即枚举类型可以用于switch语句。4.String可以用于switch语句，但是限定于jdk1.7版本以上\n\n<!--  more  -->\n\n## *比较switch和多重if选择结构\n相同点\n都是用来处理多分支条件的结构\n不同点\nswitch选择结b构：只能处理等值条件判断的情况，而且条件必须是整型变量或字符型变量或String。\n多重if选择结构：没有swithc选择机构的限制，特别适合某个变量处于某个连续区间时的情况。\n\n## 退出命令\nSystem.exit(0);  //程序结束执行，0正常退出，1是异常推出\n\n## 判定输入是否异常\nhasNextInt //异常判断\n\n==比较的是变量的地址\nequals比较的是String类型变量的值\n\n# 第四章\n\n循环的四要素\n1、初始化循环变量\n2、判断循环条件\n3、执行循环操作\n4、迭代循环变量\n\nwhile循环和do-while循环的区别\n*语法不同\n\n*执行次序不同\n*初始情况不满足循环条件时\n1、while循环一次都不会执行\n2、do-while循环不管任何情况都至少执行一次\n\n# 第五章\n\n## 案例：实现整数反转\n``` java\n    public static void mian(String[ ] args){\n    int val=12345;\n    int r_digit;\n    System.out.print(\"反转后的整数是：\");\n    while(val!=0){\n            r_digit=val%10;\n            System.out.print(r_digit);\n            val=val/10;\n        }\n    }\n```\n\n## for循环执行条件\n1、参数初始化\n2、条件判断\n3、循环操作\n4、更新循环变量\n5、条件判断（如果为true）则再次执行循环体\n\n## for循环的条件使用方式\n``` java\n/*\n*1.初始化循环变量可以不写在for里面\n*2.迭代可以不写在for里面\n*3.判断条件也可以不写在for里面，但要在循环体里面写上break\n*/\n案例展示\npublic static void mian(String[ ] args){\n    int sum=0;//累加\n    int i=0;\n    for(){\n        if(i>10){\n            break;//终止循环\n            }\n        sum+=i;\n        i++;\n    }\n    System.out.println(\"1到10累加的和为：\"+sum);\n}\n```\n\n## break和Continue；\nbreak   终止整个循环\ncontinue  终止当前次的循环\n使用场合\nbreak可用于switch结构和循环结构中\nContinue只能用于循环结构\n作用（循环结构中）\nbreak语句终止某个循环，程序跳转到循环块外的下一条语句。\ncontinue跳出本次循环，进入下一次循环\n？？continue在多重判断里面是否有作用呢？？\n\nctrl+shift+o是导入包\njava里面的%的使用 NumberFormat(数字格式化)  \n//百度搜索 java NumberFormat\n/*指定要输出的格式化，\"##.00%\"这个格式是固定的*/\nDecimalFormat df1=new DecimalFormat(\"##.00%\");\n/*格式化*/\nString str=df1.format(0.389);\nSystem.out.println(str)\n\n## java如何获取当前时间\n``` java\n    Data currentDate=new data();\n    System.out.println(currentDate);//标准格里高利历\n    /*简易化日期显示，\"yyyy/MM/dd hh:mm:ss\"这个格式是固定的*/\n    SimpleDateFormat sdf=new SimpleDateFormat(\"yyyy/MM/dd hh:mm:ss\" );\n    注：大写的mm是月，小写的mm是分钟\n    String dateStr=sdf.format(currentDate);\n    System.out.println(dateStr);\n    Date newDate=sdf.parse(dateStr);//把字符转化成日期\n```\n\n嵌套循环的特点：\n外层循环循环1次，内层循环要循环所有次。\n\n# 第六章\n\n## 什么是数组：\n数组是一个变量，存储相同数据类型的一组数据\n数组和变量的区别\n变量：声明一个变量就是在内存空间划出一块合适的空间\n数组：声明一个数组就是在内存空间划出一串连续的空间\n\n## 数组的结构和基本要素\n标识符：数组的名称，用于区分不同的数组\n数组元素：实际就是变量名，用来确定数组的起始位置\n元素下标：数组中每个元素的编号\n数组元素：数组中存放内容\n\n元素下标标明了元素在数组中的位置，从0开始\n数组长度固定不变，避免数组越界\n数组中的所有元素必须是相同的数据类型\n\n## 使用数组的四步：\n1、声明数组 int[] a;\n2、分配空间 a=new int[5];\n数据类型[ ]  数组名 = new 数据类型[大小]；\n3、赋值 a[0]=8;\n4、处理数据 a[0]=a[0]*10;\n\n## 关于length\n数组的长度使用：数组名.length\n数组的length：没有括号的叫属性，有括号的叫方法\n\n当基本数据类型被定义到堆空间的时候，java默认分配值（int double boolean）\n引用数据数据类型不会分配值，是空的（String）\nint：0\ndouble:0.0\nboolean:false\nString:null\n\n## 关于数组错误异常的提示：\nNullpointerException  空指针异常  检查是否没有没有对引用类型赋值\nArrayIndexOutOfboundsException 数组下标越界   检查是否越界，超出长度\n\n## for each（加强循环） \nfor（String pro:products）{\nSystem.out.println(pro);\n}\n步长 是指访问数组里面的量的时候，所需要的执行顺序。\n例如：如果我要访问一个数组中每一个数的话，就可以用加强循环\n   如果我要访问一个组数中不是每一个数的画（或者需要获取下标的时候也不能使用），就不能用加强循环。\n\n`Arrays.sort`(数组);//对数组进行升序排列\n\n基本数据类型：改变一个变量的值，不会去影响另外一个变量的值。\n\n`compare`\n\n## 对象\n用来描述客观事物的一个实体，由一组属性和方法构成。\n对象的属性和方法`通常`都是封装在一起的。\n### 类\n具有相同属性和方法的一组对象的集合\n\n#### 定义一个类的步骤\n1.定义类名\n2.编写类的属性\n3.编写类的方法\n\n#### 常见错误\n不能在方法外部直接写程序逻辑代码 如:\n``` java\n    public class demo{\n        int age =20;\n\n        if(age < 20){\n            System.out.println(\"XXXX\"); // 逻辑程序不能写在方法外部 除非加个代码块{}\n        }\n        public int show(){\n            return age;\n        }\n    }\n```\n\n#### 作用域\n局部变量的作用域仅限于定义他的方法\n成员变量的作用域在整个类内部都是可见的\n\njava会给成员变量一个初值\njava不会给局部变量赋予初值\n在同一个方法中，不允许有同名局部变量；在不同的方法中，可以有同名局部变量\n两类变量同名时，局部变量具有更高的优先级\n\n`堆内存`：保存对象的真正数据，都是每一个对象的属性内容\n`栈内存`：保存的时一块堆内存的地址\n\n#### 递归\n``` java\n    public class Hello{\n        public static void main(String[] arry){\n            System.out.println(add(100));\n        }\n\n        public static int add(int num){\n            if(num == 1){//结束条件\n                return 1;//不再向后继续加了\n            }\n            return num+add(num-1);//修改参数内容\n        }\n    }\n```\n# 字符串(String)\n\n`concat` 字符串链接(数字类型调用不了)\n`substring(3)`从第3个(包含)开始截取到最后\n`substring(2,5)`从第2个(包含)开始截取到第5个(不包含)\n\n## 文件名判断方法\n``` java\n    String fileName = \"djkl.java\";\n    int index = fileName.lastIndexOf(\".\");\n    //index != -1 找不到\n    if(index != -1 && index != 0 && fileName.substring(index+1).equals(\"java\")){\n            System.out.println(\"有效文件名！\");\n    }else{\n            System.out.println(\"文件名无效！\");\n    }\n\n    /*检查邮箱格式*/\n    if(email.indexOf('@') != -1 && email.indexOf('.') > email.indexOf('@')){\n        emailCorrect = true;\n    }else{\n        System.out.println(\"Email无效！\");\n    }\n```\n\n## String StringBuffer StringBuilder的区别\n\n# 第十章\n\n## 构造函数\n当没有显式声明有参的构造方法的时候，java会默认生成一无参的构造方法\n一旦声明了有参的构造函数后，java就不会生成无参的构造函数\n\n## static\n可以用来修饰属性、方法和代码块\n修饰的属性和方法称为类属性（类变量）、类方法\n不使用static修饰的属性和方法，属于单个对象，通常称为实例属性（实例变量）、实例方法\nstatic修饰的变量和方法可以通过类名和对象名访问，而不用static修饰的变量和方法只能通过对象名访问\nfinal修饰的变量成为常量，其值固定不变\n\nstatic定义的方法不能调用static的方法或属性\n非static定义的方法可以调用static的属性或方法\n\n## 封装\n将类的某些信息隐藏在类内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对隐藏信息的操作和访问\n<span style=\"color: red\">好处：</span>只能通过规定方法访问数据，方便加入控制语句，方便修改实现\n\n## 抽象类\n1.抽象类的关键字是abstract\n2.在一个类如果至少有一个abstract方法，那么这个类必须是抽象类\n3.抽象类里可以包含普通方法和属性\n4.抽象类的子类必须实现父类的抽象方法，如果不想实现，那么这个子类必须为抽象类\n5.abstract方法不能写为私有，必须是可见的\n6.抽象方法不能有实现\n\n``` java\n    public abstract class PetAbstract extends Pet {\n    public abstract void print();//不能为private\n    \n    public void text(){\n        System.out.print(\"这是一个普通方法\");\n    }\n}\n```\n\n## 多态\n/|位置|方法名|参数表|返回值|访问修饰符\n-|----|-----|-----|-----|---------\n方法重写|子类|相同|相同|相同|不能比父类更严格\n方法重载|同类|相同|相同|无关|无关\n\n<span style=\"color: red\">多态的必要条件</span>\n1.要有继承\n2.要有重写\n3.父类引用指向子类对象\n\n多态的好处\n1.可替换性\n2.可扩充性\n3.接口性\n4.灵活性\n5.简化性\n\n## IO流\n\nFile file = new File(\"/Users/`UserName #自己的用户名`/Desktop/1.html\");\n`File.separator` 用于代替\"/\"\n``` java\nFile.separator+\"Users\"+File.separator+\"UserName\"+File.separator+\"Desktop\"+File.separator+\"desktop\"+File.separator+\"1.html\"\n```\n\n## 多线程\n\n进程：是程序的一次动态执行过程，它对应了从代码加载、执行至执行完毕的一个完整过程。\n特点：\n1.进程是系统运行程序的基本单位\n2.每一个进程有自己的独立的内存空间、一组系统资源。\n3.每一个进程的内部数据和状态都是完全独立。\n\n线程：进程内部的一个执行单位，它使程序中一个单一的顺序控制流程。\n\n- 引入进程是为了多个程序并发执行，提高资源的利用率和系统吞吐量\n- 引入线程是为了减少程序在并发执行时付出的时空开销\n- 进程间不能共享内存，但线程之间共享内存非常容易\n- 使用多线程实现多任务并发比多进程的效率高\n\n### 实现方法\n``` java\n方法一:继承Java.lang.Thread类,并覆盖run()方法\n    class MyThread extends Thread {\n     public void run( ) {\n         /* 覆盖该方法*/\n      }\n    }\n方法二:实现Java.lang.Runnable接口,并实现run()方法\n    class MyThread implements Runnable{\n      public void run( ) {\n            /* 实现该方法*/ \n      }\n    }\n```\n\n# Tomcat\n`$ /Library/Tomcat/bin/startup.sh`开启服务器\n`$ /Library/Tomcat/bin/shutdown.sh`关闭服务器\n`localhost:8080`服务器开启地址\nwebapps 网站放置地址\n`localhost:8080/javaJar`","slug":"java","published":1,"updated":"2017-09-06T09:23:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1jw000pcdonqb962iu3","content":"<blockquote>\n<p>java 培训笔记</p>\n</blockquote>\n<h1 id=\"第三章\"><a href=\"#第三章\" class=\"headerlink\" title=\"第三章\"></a>第三章</h1><h2 id=\"Scanner\"><a href=\"#Scanner\" class=\"headerlink\" title=\"Scanner\"></a>Scanner</h2><p>重点：Scanner input= new Scanner(System.in) 在整个程序里面，只用写一次就可以了。然后input可以对于任意输出来进行调用。<br>input.close();//清除input里面的值</p>\n<h2 id=\"boolean（布尔）类型\"><a href=\"#boolean（布尔）类型\" class=\"headerlink\" title=\"boolean（布尔）类型\"></a>boolean（布尔）类型</h2><p>boolean类型的值<br>真：true<br>假：false<br>例如：boolean isTiaoJian1=javaScore&gt;98 &amp;&amp; musicScore &gt;80;<br>例如命名：boolean isBig<br>注：需要注意的一点是，boolean在命名的时候开头需要用is</p>\n<h2 id=\"if结构\"><a href=\"#if结构\" class=\"headerlink\" title=\"if结构\"></a>if结构</h2><p>多重if执行结构为1次或0次，不会执行更多的次数。所以多重if需要遵循从前往后的执行顺序。</p>\n<p>在if里面，如果是字符串char和String进行比较的话，需要使用equals方法<br>例如：if(sex.equals(“男”))<br>当如果需要对常量和变量进行比较的时候，需要把常量写在前面，变量写后面<br>例如：if(“男”.equals(sex))</p>\n<h2 id=\"switch中可以使用的数据类型：\"><a href=\"#switch中可以使用的数据类型：\" class=\"headerlink\" title=\"switch中可以使用的数据类型：\"></a>switch中可以使用的数据类型：</h2><ol>\n<li>char、short、int、long、bool 基本类型都可以用于switch语句。 2. float、double都不能用于switch语句。 3. enum类型,即枚举类型可以用于switch语句。4.String可以用于switch语句，但是限定于jdk1.7版本以上</li>\n</ol>\n<a id=\"more\"></a>\n<h2 id=\"比较switch和多重if选择结构\"><a href=\"#比较switch和多重if选择结构\" class=\"headerlink\" title=\"*比较switch和多重if选择结构\"></a>*比较switch和多重if选择结构</h2><p>相同点<br>都是用来处理多分支条件的结构<br>不同点<br>switch选择结b构：只能处理等值条件判断的情况，而且条件必须是整型变量或字符型变量或String。<br>多重if选择结构：没有swithc选择机构的限制，特别适合某个变量处于某个连续区间时的情况。</p>\n<h2 id=\"退出命令\"><a href=\"#退出命令\" class=\"headerlink\" title=\"退出命令\"></a>退出命令</h2><p>System.exit(0);  //程序结束执行，0正常退出，1是异常推出</p>\n<h2 id=\"判定输入是否异常\"><a href=\"#判定输入是否异常\" class=\"headerlink\" title=\"判定输入是否异常\"></a>判定输入是否异常</h2><p>hasNextInt //异常判断</p>\n<p>==比较的是变量的地址<br>equals比较的是String类型变量的值</p>\n<h1 id=\"第四章\"><a href=\"#第四章\" class=\"headerlink\" title=\"第四章\"></a>第四章</h1><p>循环的四要素<br>1、初始化循环变量<br>2、判断循环条件<br>3、执行循环操作<br>4、迭代循环变量</p>\n<p>while循环和do-while循环的区别<br>*语法不同</p>\n<p><em>执行次序不同\n</em>初始情况不满足循环条件时<br>1、while循环一次都不会执行<br>2、do-while循环不管任何情况都至少执行一次</p>\n<h1 id=\"第五章\"><a href=\"#第五章\" class=\"headerlink\" title=\"第五章\"></a>第五章</h1><h2 id=\"案例：实现整数反转\"><a href=\"#案例：实现整数反转\" class=\"headerlink\" title=\"案例：实现整数反转\"></a>案例：实现整数反转</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">mian</span><span class=\"params\">(String[ ] args)</span></span>&#123;</div><div class=\"line\"><span class=\"keyword\">int</span> val=<span class=\"number\">12345</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> r_digit;</div><div class=\"line\">System.out.print(<span class=\"string\">\"反转后的整数是：\"</span>);</div><div class=\"line\"><span class=\"keyword\">while</span>(val!=<span class=\"number\">0</span>)&#123;</div><div class=\"line\">        r_digit=val%<span class=\"number\">10</span>;</div><div class=\"line\">        System.out.print(r_digit);</div><div class=\"line\">        val=val/<span class=\"number\">10</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"for循环执行条件\"><a href=\"#for循环执行条件\" class=\"headerlink\" title=\"for循环执行条件\"></a>for循环执行条件</h2><p>1、参数初始化<br>2、条件判断<br>3、循环操作<br>4、更新循环变量<br>5、条件判断（如果为true）则再次执行循环体</p>\n<h2 id=\"for循环的条件使用方式\"><a href=\"#for循环的条件使用方式\" class=\"headerlink\" title=\"for循环的条件使用方式\"></a>for循环的条件使用方式</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\">*1.初始化循环变量可以不写在for里面</div><div class=\"line\">*2.迭代可以不写在for里面</div><div class=\"line\">*3.判断条件也可以不写在for里面，但要在循环体里面写上break</div><div class=\"line\">*/</div><div class=\"line\">案例展示</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">mian</span><span class=\"params\">(String[ ] args)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> sum=<span class=\"number\">0</span>;<span class=\"comment\">//累加</span></div><div class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>()&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(i&gt;<span class=\"number\">10</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">break</span>;<span class=\"comment\">//终止循环</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        sum+=i;</div><div class=\"line\">        i++;</div><div class=\"line\">    &#125;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"1到10累加的和为：\"</span>+sum);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"break和Continue；\"><a href=\"#break和Continue；\" class=\"headerlink\" title=\"break和Continue；\"></a>break和Continue；</h2><p>break   终止整个循环<br>continue  终止当前次的循环<br>使用场合<br>break可用于switch结构和循环结构中<br>Continue只能用于循环结构<br>作用（循环结构中）<br>break语句终止某个循环，程序跳转到循环块外的下一条语句。<br>continue跳出本次循环，进入下一次循环<br>？？continue在多重判断里面是否有作用呢？？</p>\n<p>ctrl+shift+o是导入包<br>java里面的%的使用 NumberFormat(数字格式化)<br>//百度搜索 java NumberFormat<br>/<em>指定要输出的格式化，”##.00%”这个格式是固定的</em>/<br>DecimalFormat df1=new DecimalFormat(“##.00%”);<br>/<em>格式化</em>/<br>String str=df1.format(0.389);<br>System.out.println(str)</p>\n<h2 id=\"java如何获取当前时间\"><a href=\"#java如何获取当前时间\" class=\"headerlink\" title=\"java如何获取当前时间\"></a>java如何获取当前时间</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Data currentDate=<span class=\"keyword\">new</span> data();</div><div class=\"line\">System.out.println(currentDate);<span class=\"comment\">//标准格里高利历</span></div><div class=\"line\"><span class=\"comment\">/*简易化日期显示，\"yyyy/MM/dd hh:mm:ss\"这个格式是固定的*/</span></div><div class=\"line\">SimpleDateFormat sdf=<span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyy/MM/dd hh:mm:ss\"</span> );</div><div class=\"line\">注：大写的mm是月，小写的mm是分钟</div><div class=\"line\">String dateStr=sdf.format(currentDate);</div><div class=\"line\">System.out.println(dateStr);</div><div class=\"line\">Date newDate=sdf.parse(dateStr);<span class=\"comment\">//把字符转化成日期</span></div></pre></td></tr></table></figure>\n<p>嵌套循环的特点：<br>外层循环循环1次，内层循环要循环所有次。</p>\n<h1 id=\"第六章\"><a href=\"#第六章\" class=\"headerlink\" title=\"第六章\"></a>第六章</h1><h2 id=\"什么是数组：\"><a href=\"#什么是数组：\" class=\"headerlink\" title=\"什么是数组：\"></a>什么是数组：</h2><p>数组是一个变量，存储相同数据类型的一组数据<br>数组和变量的区别<br>变量：声明一个变量就是在内存空间划出一块合适的空间<br>数组：声明一个数组就是在内存空间划出一串连续的空间</p>\n<h2 id=\"数组的结构和基本要素\"><a href=\"#数组的结构和基本要素\" class=\"headerlink\" title=\"数组的结构和基本要素\"></a>数组的结构和基本要素</h2><p>标识符：数组的名称，用于区分不同的数组<br>数组元素：实际就是变量名，用来确定数组的起始位置<br>元素下标：数组中每个元素的编号<br>数组元素：数组中存放内容</p>\n<p>元素下标标明了元素在数组中的位置，从0开始<br>数组长度固定不变，避免数组越界<br>数组中的所有元素必须是相同的数据类型</p>\n<h2 id=\"使用数组的四步：\"><a href=\"#使用数组的四步：\" class=\"headerlink\" title=\"使用数组的四步：\"></a>使用数组的四步：</h2><p>1、声明数组 int[] a;<br>2、分配空间 a=new int[5];<br>数据类型[ ]  数组名 = new 数据类型[大小]；<br>3、赋值 a[0]=8;<br>4、处理数据 a[0]=a[0]*10;</p>\n<h2 id=\"关于length\"><a href=\"#关于length\" class=\"headerlink\" title=\"关于length\"></a>关于length</h2><p>数组的长度使用：数组名.length<br>数组的length：没有括号的叫属性，有括号的叫方法</p>\n<p>当基本数据类型被定义到堆空间的时候，java默认分配值（int double boolean）<br>引用数据数据类型不会分配值，是空的（String）<br>int：0<br>double:0.0<br>boolean:false<br>String:null</p>\n<h2 id=\"关于数组错误异常的提示：\"><a href=\"#关于数组错误异常的提示：\" class=\"headerlink\" title=\"关于数组错误异常的提示：\"></a>关于数组错误异常的提示：</h2><p>NullpointerException  空指针异常  检查是否没有没有对引用类型赋值<br>ArrayIndexOutOfboundsException 数组下标越界   检查是否越界，超出长度</p>\n<h2 id=\"for-each（加强循环）\"><a href=\"#for-each（加强循环）\" class=\"headerlink\" title=\"for each（加强循环）\"></a>for each（加强循环）</h2><p>for（String pro:products）{<br>System.out.println(pro);<br>}<br>步长 是指访问数组里面的量的时候，所需要的执行顺序。<br>例如：如果我要访问一个数组中每一个数的话，就可以用加强循环<br>   如果我要访问一个组数中不是每一个数的画（或者需要获取下标的时候也不能使用），就不能用加强循环。</p>\n<p><code>Arrays.sort</code>(数组);//对数组进行升序排列</p>\n<p>基本数据类型：改变一个变量的值，不会去影响另外一个变量的值。</p>\n<p><code>compare</code></p>\n<h2 id=\"对象\"><a href=\"#对象\" class=\"headerlink\" title=\"对象\"></a>对象</h2><p>用来描述客观事物的一个实体，由一组属性和方法构成。<br>对象的属性和方法<code>通常</code>都是封装在一起的。</p>\n<h3 id=\"类\"><a href=\"#类\" class=\"headerlink\" title=\"类\"></a>类</h3><p>具有相同属性和方法的一组对象的集合</p>\n<h4 id=\"定义一个类的步骤\"><a href=\"#定义一个类的步骤\" class=\"headerlink\" title=\"定义一个类的步骤\"></a>定义一个类的步骤</h4><p>1.定义类名<br>2.编写类的属性<br>3.编写类的方法</p>\n<h4 id=\"常见错误\"><a href=\"#常见错误\" class=\"headerlink\" title=\"常见错误\"></a>常见错误</h4><p>不能在方法外部直接写程序逻辑代码 如:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demo</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> age =<span class=\"number\">20</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span>(age &lt; <span class=\"number\">20</span>)&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"XXXX\"</span>); <span class=\"comment\">// 逻辑程序不能写在方法外部 除非加个代码块&#123;&#125;</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">show</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> age;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h4><p>局部变量的作用域仅限于定义他的方法<br>成员变量的作用域在整个类内部都是可见的</p>\n<p>java会给成员变量一个初值<br>java不会给局部变量赋予初值<br>在同一个方法中，不允许有同名局部变量；在不同的方法中，可以有同名局部变量<br>两类变量同名时，局部变量具有更高的优先级</p>\n<p><code>堆内存</code>：保存对象的真正数据，都是每一个对象的属性内容<br><code>栈内存</code>：保存的时一块堆内存的地址</p>\n<h4 id=\"递归\"><a href=\"#递归\" class=\"headerlink\" title=\"递归\"></a>递归</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Hello</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] arry)</span></span>&#123;</div><div class=\"line\">        System.out.println(add(<span class=\"number\">100</span>));</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> num)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(num == <span class=\"number\">1</span>)&#123;<span class=\"comment\">//结束条件</span></div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;<span class=\"comment\">//不再向后继续加了</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> num+add(num-<span class=\"number\">1</span>);<span class=\"comment\">//修改参数内容</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"字符串-String\"><a href=\"#字符串-String\" class=\"headerlink\" title=\"字符串(String)\"></a>字符串(String)</h1><p><code>concat</code> 字符串链接(数字类型调用不了)<br><code>substring(3)</code>从第3个(包含)开始截取到最后<br><code>substring(2,5)</code>从第2个(包含)开始截取到第5个(不包含)</p>\n<h2 id=\"文件名判断方法\"><a href=\"#文件名判断方法\" class=\"headerlink\" title=\"文件名判断方法\"></a>文件名判断方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">String fileName = <span class=\"string\">\"djkl.java\"</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> index = fileName.lastIndexOf(<span class=\"string\">\".\"</span>);</div><div class=\"line\"><span class=\"comment\">//index != -1 找不到</span></div><div class=\"line\"><span class=\"keyword\">if</span>(index != -<span class=\"number\">1</span> &amp;&amp; index != <span class=\"number\">0</span> &amp;&amp; fileName.substring(index+<span class=\"number\">1</span>).equals(<span class=\"string\">\"java\"</span>))&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"有效文件名！\"</span>);</div><div class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"文件名无效！\"</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/*检查邮箱格式*/</span></div><div class=\"line\"><span class=\"keyword\">if</span>(email.indexOf(<span class=\"string\">'@'</span>) != -<span class=\"number\">1</span> &amp;&amp; email.indexOf(<span class=\"string\">'.'</span>) &gt; email.indexOf(<span class=\"string\">'@'</span>))&#123;</div><div class=\"line\">    emailCorrect = <span class=\"keyword\">true</span>;</div><div class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"Email无效！\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"String-StringBuffer-StringBuilder的区别\"><a href=\"#String-StringBuffer-StringBuilder的区别\" class=\"headerlink\" title=\"String StringBuffer StringBuilder的区别\"></a>String StringBuffer StringBuilder的区别</h2><h1 id=\"第十章\"><a href=\"#第十章\" class=\"headerlink\" title=\"第十章\"></a>第十章</h1><h2 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h2><p>当没有显式声明有参的构造方法的时候，java会默认生成一无参的构造方法<br>一旦声明了有参的构造函数后，java就不会生成无参的构造函数</p>\n<h2 id=\"static\"><a href=\"#static\" class=\"headerlink\" title=\"static\"></a>static</h2><p>可以用来修饰属性、方法和代码块<br>修饰的属性和方法称为类属性（类变量）、类方法<br>不使用static修饰的属性和方法，属于单个对象，通常称为实例属性（实例变量）、实例方法<br>static修饰的变量和方法可以通过类名和对象名访问，而不用static修饰的变量和方法只能通过对象名访问<br>final修饰的变量成为常量，其值固定不变</p>\n<p>static定义的方法不能调用static的方法或属性<br>非static定义的方法可以调用static的属性或方法</p>\n<h2 id=\"封装\"><a href=\"#封装\" class=\"headerlink\" title=\"封装\"></a>封装</h2><p>将类的某些信息隐藏在类内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对隐藏信息的操作和访问<br><span style=\"color: red\">好处：</span>只能通过规定方法访问数据，方便加入控制语句，方便修改实现</p>\n<h2 id=\"抽象类\"><a href=\"#抽象类\" class=\"headerlink\" title=\"抽象类\"></a>抽象类</h2><p>1.抽象类的关键字是abstract<br>2.在一个类如果至少有一个abstract方法，那么这个类必须是抽象类<br>3.抽象类里可以包含普通方法和属性<br>4.抽象类的子类必须实现父类的抽象方法，如果不想实现，那么这个子类必须为抽象类<br>5.abstract方法不能写为私有，必须是可见的<br>6.抽象方法不能有实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PetAbstract</span> <span class=\"keyword\">extends</span> <span class=\"title\">Pet</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span>;<span class=\"comment\">//不能为private</span></div><div class=\"line\">    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">text</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        System.out.print(<span class=\"string\">\"这是一个普通方法\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"多态\"><a href=\"#多态\" class=\"headerlink\" title=\"多态\"></a>多态</h2><table>\n<thead>\n<tr>\n<th>/</th>\n<th>位置</th>\n<th>方法名</th>\n<th>参数表</th>\n<th>返回值</th>\n<th>访问修饰符</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>方法重写</td>\n<td>子类</td>\n<td>相同</td>\n<td>相同</td>\n<td>相同</td>\n<td>不能比父类更严格</td>\n</tr>\n<tr>\n<td>方法重载</td>\n<td>同类</td>\n<td>相同</td>\n<td>相同</td>\n<td>无关</td>\n<td>无关</td>\n</tr>\n</tbody>\n</table>\n<p><span style=\"color: red\">多态的必要条件</span><br>1.要有继承<br>2.要有重写<br>3.父类引用指向子类对象</p>\n<p>多态的好处<br>1.可替换性<br>2.可扩充性<br>3.接口性<br>4.灵活性<br>5.简化性</p>\n<h2 id=\"IO流\"><a href=\"#IO流\" class=\"headerlink\" title=\"IO流\"></a>IO流</h2><p>File file = new File(“/Users/<code>UserName #自己的用户名</code>/Desktop/1.html”);<br><code>File.separator</code> 用于代替”/“<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">File.separator+<span class=\"string\">\"Users\"</span>+File.separator+<span class=\"string\">\"UserName\"</span>+File.separator+<span class=\"string\">\"Desktop\"</span>+File.separator+<span class=\"string\">\"desktop\"</span>+File.separator+<span class=\"string\">\"1.html\"</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"多线程\"><a href=\"#多线程\" class=\"headerlink\" title=\"多线程\"></a>多线程</h2><p>进程：是程序的一次动态执行过程，它对应了从代码加载、执行至执行完毕的一个完整过程。<br>特点：<br>1.进程是系统运行程序的基本单位<br>2.每一个进程有自己的独立的内存空间、一组系统资源。<br>3.每一个进程的内部数据和状态都是完全独立。</p>\n<p>线程：进程内部的一个执行单位，它使程序中一个单一的顺序控制流程。</p>\n<ul>\n<li>引入进程是为了多个程序并发执行，提高资源的利用率和系统吞吐量</li>\n<li>引入线程是为了减少程序在并发执行时付出的时空开销</li>\n<li>进程间不能共享内存，但线程之间共享内存非常容易</li>\n<li>使用多线程实现多任务并发比多进程的效率高</li>\n</ul>\n<h3 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">方法一:继承Java.lang.Thread类,并覆盖run()方法</div><div class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyThread</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span> </span>&#123;</div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">( )</span> </span>&#123;</div><div class=\"line\">         <span class=\"comment\">/* 覆盖该方法*/</span></div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">方法二:实现Java.lang.Runnable接口,并实现run()方法</div><div class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</div><div class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">( )</span> </span>&#123;</div><div class=\"line\">            <span class=\"comment\">/* 实现该方法*/</span> </div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h1 id=\"Tomcat\"><a href=\"#Tomcat\" class=\"headerlink\" title=\"Tomcat\"></a>Tomcat</h1><p><code>$ /Library/Tomcat/bin/startup.sh</code>开启服务器<br><code>$ /Library/Tomcat/bin/shutdown.sh</code>关闭服务器<br><code>localhost:8080</code>服务器开启地址<br>webapps 网站放置地址<br><code>localhost:8080/javaJar</code></p>\n","excerpt":"<blockquote>\n<p>java 培训笔记</p>\n</blockquote>\n<h1 id=\"第三章\"><a href=\"#第三章\" class=\"headerlink\" title=\"第三章\"></a>第三章</h1><h2 id=\"Scanner\"><a href=\"#Scanner\" class=\"headerlink\" title=\"Scanner\"></a>Scanner</h2><p>重点：Scanner input= new Scanner(System.in) 在整个程序里面，只用写一次就可以了。然后input可以对于任意输出来进行调用。<br>input.close();//清除input里面的值</p>\n<h2 id=\"boolean（布尔）类型\"><a href=\"#boolean（布尔）类型\" class=\"headerlink\" title=\"boolean（布尔）类型\"></a>boolean（布尔）类型</h2><p>boolean类型的值<br>真：true<br>假：false<br>例如：boolean isTiaoJian1=javaScore&gt;98 &amp;&amp; musicScore &gt;80;<br>例如命名：boolean isBig<br>注：需要注意的一点是，boolean在命名的时候开头需要用is</p>\n<h2 id=\"if结构\"><a href=\"#if结构\" class=\"headerlink\" title=\"if结构\"></a>if结构</h2><p>多重if执行结构为1次或0次，不会执行更多的次数。所以多重if需要遵循从前往后的执行顺序。</p>\n<p>在if里面，如果是字符串char和String进行比较的话，需要使用equals方法<br>例如：if(sex.equals(“男”))<br>当如果需要对常量和变量进行比较的时候，需要把常量写在前面，变量写后面<br>例如：if(“男”.equals(sex))</p>\n<h2 id=\"switch中可以使用的数据类型：\"><a href=\"#switch中可以使用的数据类型：\" class=\"headerlink\" title=\"switch中可以使用的数据类型：\"></a>switch中可以使用的数据类型：</h2><ol>\n<li>char、short、int、long、bool 基本类型都可以用于switch语句。 2. float、double都不能用于switch语句。 3. enum类型,即枚举类型可以用于switch语句。4.String可以用于switch语句，但是限定于jdk1.7版本以上</li>\n</ol>","more":"<h2 id=\"比较switch和多重if选择结构\"><a href=\"#比较switch和多重if选择结构\" class=\"headerlink\" title=\"*比较switch和多重if选择结构\"></a>*比较switch和多重if选择结构</h2><p>相同点<br>都是用来处理多分支条件的结构<br>不同点<br>switch选择结b构：只能处理等值条件判断的情况，而且条件必须是整型变量或字符型变量或String。<br>多重if选择结构：没有swithc选择机构的限制，特别适合某个变量处于某个连续区间时的情况。</p>\n<h2 id=\"退出命令\"><a href=\"#退出命令\" class=\"headerlink\" title=\"退出命令\"></a>退出命令</h2><p>System.exit(0);  //程序结束执行，0正常退出，1是异常推出</p>\n<h2 id=\"判定输入是否异常\"><a href=\"#判定输入是否异常\" class=\"headerlink\" title=\"判定输入是否异常\"></a>判定输入是否异常</h2><p>hasNextInt //异常判断</p>\n<p>==比较的是变量的地址<br>equals比较的是String类型变量的值</p>\n<h1 id=\"第四章\"><a href=\"#第四章\" class=\"headerlink\" title=\"第四章\"></a>第四章</h1><p>循环的四要素<br>1、初始化循环变量<br>2、判断循环条件<br>3、执行循环操作<br>4、迭代循环变量</p>\n<p>while循环和do-while循环的区别<br>*语法不同</p>\n<p><em>执行次序不同\n</em>初始情况不满足循环条件时<br>1、while循环一次都不会执行<br>2、do-while循环不管任何情况都至少执行一次</p>\n<h1 id=\"第五章\"><a href=\"#第五章\" class=\"headerlink\" title=\"第五章\"></a>第五章</h1><h2 id=\"案例：实现整数反转\"><a href=\"#案例：实现整数反转\" class=\"headerlink\" title=\"案例：实现整数反转\"></a>案例：实现整数反转</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">mian</span><span class=\"params\">(String[ ] args)</span></span>&#123;</div><div class=\"line\"><span class=\"keyword\">int</span> val=<span class=\"number\">12345</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> r_digit;</div><div class=\"line\">System.out.print(<span class=\"string\">\"反转后的整数是：\"</span>);</div><div class=\"line\"><span class=\"keyword\">while</span>(val!=<span class=\"number\">0</span>)&#123;</div><div class=\"line\">        r_digit=val%<span class=\"number\">10</span>;</div><div class=\"line\">        System.out.print(r_digit);</div><div class=\"line\">        val=val/<span class=\"number\">10</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"for循环执行条件\"><a href=\"#for循环执行条件\" class=\"headerlink\" title=\"for循环执行条件\"></a>for循环执行条件</h2><p>1、参数初始化<br>2、条件判断<br>3、循环操作<br>4、更新循环变量<br>5、条件判断（如果为true）则再次执行循环体</p>\n<h2 id=\"for循环的条件使用方式\"><a href=\"#for循环的条件使用方式\" class=\"headerlink\" title=\"for循环的条件使用方式\"></a>for循环的条件使用方式</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*</div><div class=\"line\">*1.初始化循环变量可以不写在for里面</div><div class=\"line\">*2.迭代可以不写在for里面</div><div class=\"line\">*3.判断条件也可以不写在for里面，但要在循环体里面写上break</div><div class=\"line\">*/</span></div><div class=\"line\">案例展示</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">mian</span><span class=\"params\">(String[ ] args)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> sum=<span class=\"number\">0</span>;<span class=\"comment\">//累加</span></div><div class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>()&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(i&gt;<span class=\"number\">10</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">break</span>;<span class=\"comment\">//终止循环</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        sum+=i;</div><div class=\"line\">        i++;</div><div class=\"line\">    &#125;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"1到10累加的和为：\"</span>+sum);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"break和Continue；\"><a href=\"#break和Continue；\" class=\"headerlink\" title=\"break和Continue；\"></a>break和Continue；</h2><p>break   终止整个循环<br>continue  终止当前次的循环<br>使用场合<br>break可用于switch结构和循环结构中<br>Continue只能用于循环结构<br>作用（循环结构中）<br>break语句终止某个循环，程序跳转到循环块外的下一条语句。<br>continue跳出本次循环，进入下一次循环<br>？？continue在多重判断里面是否有作用呢？？</p>\n<p>ctrl+shift+o是导入包<br>java里面的%的使用 NumberFormat(数字格式化)<br>//百度搜索 java NumberFormat<br>/<em>指定要输出的格式化，”##.00%”这个格式是固定的</em>/<br>DecimalFormat df1=new DecimalFormat(“##.00%”);<br>/<em>格式化</em>/<br>String str=df1.format(0.389);<br>System.out.println(str)</p>\n<h2 id=\"java如何获取当前时间\"><a href=\"#java如何获取当前时间\" class=\"headerlink\" title=\"java如何获取当前时间\"></a>java如何获取当前时间</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Data currentDate=<span class=\"keyword\">new</span> data();</div><div class=\"line\">System.out.println(currentDate);<span class=\"comment\">//标准格里高利历</span></div><div class=\"line\"><span class=\"comment\">/*简易化日期显示，\"yyyy/MM/dd hh:mm:ss\"这个格式是固定的*/</span></div><div class=\"line\">SimpleDateFormat sdf=<span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyy/MM/dd hh:mm:ss\"</span> );</div><div class=\"line\">注：大写的mm是月，小写的mm是分钟</div><div class=\"line\">String dateStr=sdf.format(currentDate);</div><div class=\"line\">System.out.println(dateStr);</div><div class=\"line\">Date newDate=sdf.parse(dateStr);<span class=\"comment\">//把字符转化成日期</span></div></pre></td></tr></table></figure>\n<p>嵌套循环的特点：<br>外层循环循环1次，内层循环要循环所有次。</p>\n<h1 id=\"第六章\"><a href=\"#第六章\" class=\"headerlink\" title=\"第六章\"></a>第六章</h1><h2 id=\"什么是数组：\"><a href=\"#什么是数组：\" class=\"headerlink\" title=\"什么是数组：\"></a>什么是数组：</h2><p>数组是一个变量，存储相同数据类型的一组数据<br>数组和变量的区别<br>变量：声明一个变量就是在内存空间划出一块合适的空间<br>数组：声明一个数组就是在内存空间划出一串连续的空间</p>\n<h2 id=\"数组的结构和基本要素\"><a href=\"#数组的结构和基本要素\" class=\"headerlink\" title=\"数组的结构和基本要素\"></a>数组的结构和基本要素</h2><p>标识符：数组的名称，用于区分不同的数组<br>数组元素：实际就是变量名，用来确定数组的起始位置<br>元素下标：数组中每个元素的编号<br>数组元素：数组中存放内容</p>\n<p>元素下标标明了元素在数组中的位置，从0开始<br>数组长度固定不变，避免数组越界<br>数组中的所有元素必须是相同的数据类型</p>\n<h2 id=\"使用数组的四步：\"><a href=\"#使用数组的四步：\" class=\"headerlink\" title=\"使用数组的四步：\"></a>使用数组的四步：</h2><p>1、声明数组 int[] a;<br>2、分配空间 a=new int[5];<br>数据类型[ ]  数组名 = new 数据类型[大小]；<br>3、赋值 a[0]=8;<br>4、处理数据 a[0]=a[0]*10;</p>\n<h2 id=\"关于length\"><a href=\"#关于length\" class=\"headerlink\" title=\"关于length\"></a>关于length</h2><p>数组的长度使用：数组名.length<br>数组的length：没有括号的叫属性，有括号的叫方法</p>\n<p>当基本数据类型被定义到堆空间的时候，java默认分配值（int double boolean）<br>引用数据数据类型不会分配值，是空的（String）<br>int：0<br>double:0.0<br>boolean:false<br>String:null</p>\n<h2 id=\"关于数组错误异常的提示：\"><a href=\"#关于数组错误异常的提示：\" class=\"headerlink\" title=\"关于数组错误异常的提示：\"></a>关于数组错误异常的提示：</h2><p>NullpointerException  空指针异常  检查是否没有没有对引用类型赋值<br>ArrayIndexOutOfboundsException 数组下标越界   检查是否越界，超出长度</p>\n<h2 id=\"for-each（加强循环）\"><a href=\"#for-each（加强循环）\" class=\"headerlink\" title=\"for each（加强循环）\"></a>for each（加强循环）</h2><p>for（String pro:products）{<br>System.out.println(pro);<br>}<br>步长 是指访问数组里面的量的时候，所需要的执行顺序。<br>例如：如果我要访问一个数组中每一个数的话，就可以用加强循环<br>   如果我要访问一个组数中不是每一个数的画（或者需要获取下标的时候也不能使用），就不能用加强循环。</p>\n<p><code>Arrays.sort</code>(数组);//对数组进行升序排列</p>\n<p>基本数据类型：改变一个变量的值，不会去影响另外一个变量的值。</p>\n<p><code>compare</code></p>\n<h2 id=\"对象\"><a href=\"#对象\" class=\"headerlink\" title=\"对象\"></a>对象</h2><p>用来描述客观事物的一个实体，由一组属性和方法构成。<br>对象的属性和方法<code>通常</code>都是封装在一起的。</p>\n<h3 id=\"类\"><a href=\"#类\" class=\"headerlink\" title=\"类\"></a>类</h3><p>具有相同属性和方法的一组对象的集合</p>\n<h4 id=\"定义一个类的步骤\"><a href=\"#定义一个类的步骤\" class=\"headerlink\" title=\"定义一个类的步骤\"></a>定义一个类的步骤</h4><p>1.定义类名<br>2.编写类的属性<br>3.编写类的方法</p>\n<h4 id=\"常见错误\"><a href=\"#常见错误\" class=\"headerlink\" title=\"常见错误\"></a>常见错误</h4><p>不能在方法外部直接写程序逻辑代码 如:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demo</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> age =<span class=\"number\">20</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span>(age &lt; <span class=\"number\">20</span>)&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"XXXX\"</span>); <span class=\"comment\">// 逻辑程序不能写在方法外部 除非加个代码块&#123;&#125;</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">show</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> age;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h4><p>局部变量的作用域仅限于定义他的方法<br>成员变量的作用域在整个类内部都是可见的</p>\n<p>java会给成员变量一个初值<br>java不会给局部变量赋予初值<br>在同一个方法中，不允许有同名局部变量；在不同的方法中，可以有同名局部变量<br>两类变量同名时，局部变量具有更高的优先级</p>\n<p><code>堆内存</code>：保存对象的真正数据，都是每一个对象的属性内容<br><code>栈内存</code>：保存的时一块堆内存的地址</p>\n<h4 id=\"递归\"><a href=\"#递归\" class=\"headerlink\" title=\"递归\"></a>递归</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Hello</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] arry)</span></span>&#123;</div><div class=\"line\">        System.out.println(add(<span class=\"number\">100</span>));</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> num)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(num == <span class=\"number\">1</span>)&#123;<span class=\"comment\">//结束条件</span></div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;<span class=\"comment\">//不再向后继续加了</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> num+add(num-<span class=\"number\">1</span>);<span class=\"comment\">//修改参数内容</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"字符串-String\"><a href=\"#字符串-String\" class=\"headerlink\" title=\"字符串(String)\"></a>字符串(String)</h1><p><code>concat</code> 字符串链接(数字类型调用不了)<br><code>substring(3)</code>从第3个(包含)开始截取到最后<br><code>substring(2,5)</code>从第2个(包含)开始截取到第5个(不包含)</p>\n<h2 id=\"文件名判断方法\"><a href=\"#文件名判断方法\" class=\"headerlink\" title=\"文件名判断方法\"></a>文件名判断方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">String fileName = <span class=\"string\">\"djkl.java\"</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> index = fileName.lastIndexOf(<span class=\"string\">\".\"</span>);</div><div class=\"line\"><span class=\"comment\">//index != -1 找不到</span></div><div class=\"line\"><span class=\"keyword\">if</span>(index != -<span class=\"number\">1</span> &amp;&amp; index != <span class=\"number\">0</span> &amp;&amp; fileName.substring(index+<span class=\"number\">1</span>).equals(<span class=\"string\">\"java\"</span>))&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"有效文件名！\"</span>);</div><div class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"文件名无效！\"</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/*检查邮箱格式*/</span></div><div class=\"line\"><span class=\"keyword\">if</span>(email.indexOf(<span class=\"string\">'@'</span>) != -<span class=\"number\">1</span> &amp;&amp; email.indexOf(<span class=\"string\">'.'</span>) &gt; email.indexOf(<span class=\"string\">'@'</span>))&#123;</div><div class=\"line\">    emailCorrect = <span class=\"keyword\">true</span>;</div><div class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"Email无效！\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"String-StringBuffer-StringBuilder的区别\"><a href=\"#String-StringBuffer-StringBuilder的区别\" class=\"headerlink\" title=\"String StringBuffer StringBuilder的区别\"></a>String StringBuffer StringBuilder的区别</h2><h1 id=\"第十章\"><a href=\"#第十章\" class=\"headerlink\" title=\"第十章\"></a>第十章</h1><h2 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h2><p>当没有显式声明有参的构造方法的时候，java会默认生成一无参的构造方法<br>一旦声明了有参的构造函数后，java就不会生成无参的构造函数</p>\n<h2 id=\"static\"><a href=\"#static\" class=\"headerlink\" title=\"static\"></a>static</h2><p>可以用来修饰属性、方法和代码块<br>修饰的属性和方法称为类属性（类变量）、类方法<br>不使用static修饰的属性和方法，属于单个对象，通常称为实例属性（实例变量）、实例方法<br>static修饰的变量和方法可以通过类名和对象名访问，而不用static修饰的变量和方法只能通过对象名访问<br>final修饰的变量成为常量，其值固定不变</p>\n<p>static定义的方法不能调用static的方法或属性<br>非static定义的方法可以调用static的属性或方法</p>\n<h2 id=\"封装\"><a href=\"#封装\" class=\"headerlink\" title=\"封装\"></a>封装</h2><p>将类的某些信息隐藏在类内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对隐藏信息的操作和访问<br><span style=\"color: red\">好处：</span>只能通过规定方法访问数据，方便加入控制语句，方便修改实现</p>\n<h2 id=\"抽象类\"><a href=\"#抽象类\" class=\"headerlink\" title=\"抽象类\"></a>抽象类</h2><p>1.抽象类的关键字是abstract<br>2.在一个类如果至少有一个abstract方法，那么这个类必须是抽象类<br>3.抽象类里可以包含普通方法和属性<br>4.抽象类的子类必须实现父类的抽象方法，如果不想实现，那么这个子类必须为抽象类<br>5.abstract方法不能写为私有，必须是可见的<br>6.抽象方法不能有实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PetAbstract</span> <span class=\"keyword\">extends</span> <span class=\"title\">Pet</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span>;<span class=\"comment\">//不能为private</span></div><div class=\"line\">    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">text</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        System.out.print(<span class=\"string\">\"这是一个普通方法\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"多态\"><a href=\"#多态\" class=\"headerlink\" title=\"多态\"></a>多态</h2><table>\n<thead>\n<tr>\n<th>/</th>\n<th>位置</th>\n<th>方法名</th>\n<th>参数表</th>\n<th>返回值</th>\n<th>访问修饰符</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>方法重写</td>\n<td>子类</td>\n<td>相同</td>\n<td>相同</td>\n<td>相同</td>\n<td>不能比父类更严格</td>\n</tr>\n<tr>\n<td>方法重载</td>\n<td>同类</td>\n<td>相同</td>\n<td>相同</td>\n<td>无关</td>\n<td>无关</td>\n</tr>\n</tbody>\n</table>\n<p><span style=\"color: red\">多态的必要条件</span><br>1.要有继承<br>2.要有重写<br>3.父类引用指向子类对象</p>\n<p>多态的好处<br>1.可替换性<br>2.可扩充性<br>3.接口性<br>4.灵活性<br>5.简化性</p>\n<h2 id=\"IO流\"><a href=\"#IO流\" class=\"headerlink\" title=\"IO流\"></a>IO流</h2><p>File file = new File(“/Users/<code>UserName #自己的用户名</code>/Desktop/1.html”);<br><code>File.separator</code> 用于代替”/“<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">File.separator+<span class=\"string\">\"Users\"</span>+File.separator+<span class=\"string\">\"UserName\"</span>+File.separator+<span class=\"string\">\"Desktop\"</span>+File.separator+<span class=\"string\">\"desktop\"</span>+File.separator+<span class=\"string\">\"1.html\"</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"多线程\"><a href=\"#多线程\" class=\"headerlink\" title=\"多线程\"></a>多线程</h2><p>进程：是程序的一次动态执行过程，它对应了从代码加载、执行至执行完毕的一个完整过程。<br>特点：<br>1.进程是系统运行程序的基本单位<br>2.每一个进程有自己的独立的内存空间、一组系统资源。<br>3.每一个进程的内部数据和状态都是完全独立。</p>\n<p>线程：进程内部的一个执行单位，它使程序中一个单一的顺序控制流程。</p>\n<ul>\n<li>引入进程是为了多个程序并发执行，提高资源的利用率和系统吞吐量</li>\n<li>引入线程是为了减少程序在并发执行时付出的时空开销</li>\n<li>进程间不能共享内存，但线程之间共享内存非常容易</li>\n<li>使用多线程实现多任务并发比多进程的效率高</li>\n</ul>\n<h3 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">方法一:继承Java.lang.Thread类,并覆盖run()方法</div><div class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyThread</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span> </span>&#123;</div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">( )</span> </span>&#123;</div><div class=\"line\">         <span class=\"comment\">/* 覆盖该方法*/</span></div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">方法二:实现Java.lang.Runnable接口,并实现run()方法</div><div class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</div><div class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">( )</span> </span>&#123;</div><div class=\"line\">            <span class=\"comment\">/* 实现该方法*/</span> </div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h1 id=\"Tomcat\"><a href=\"#Tomcat\" class=\"headerlink\" title=\"Tomcat\"></a>Tomcat</h1><p><code>$ /Library/Tomcat/bin/startup.sh</code>开启服务器<br><code>$ /Library/Tomcat/bin/shutdown.sh</code>关闭服务器<br><code>localhost:8080</code>服务器开启地址<br>webapps 网站放置地址<br><code>localhost:8080/javaJar</code></p>"},{"title":"Eclipse常用快捷键操作命令","date":"2017-06-02T02:23:32.000Z","keywords":null,"_content":">Eclipse常用快捷键\n\nCtrl+1 快速修复(最经典的快捷键,就不用多说了)\nCtrl+D: 删除当前行\nCtrl+Alt+↓ 复制当前行到下一行(复制增加)\nCtrl+Alt+↑ 复制当前行到上一行(复制增加)\nAlt+↓ 当前行和下面一行交互位置(特别实用,可以省去先剪切,再粘贴了)\nAlt+↑ 当前行和上面一行交互位置(同上)\nAlt+← 前一个编辑的页面\nAlt+→ 下一个编辑的页面(当然是针对上面那条来说了)\nAlt+Enter 显示当前选择资源(工程,or 文件 or文件)的属性\nShift+Enter 在当前行的下一行插入空行(这时鼠标可以在当前行的任一位置,不一定是最后)\n<!--  more  -->\nShift+Ctrl+Enter 在当前行插入空行(原理同上条)\nCtrl+Q 定位到最后编辑的地方\nCtrl+L 定位在某行 (对于程序超过100的人就有福音了)\nCtrl+M 最大化当前的Edit或View (再按则反之)\nCtrl+/ 注释当前行,再按则取消注释\nCtrl+O 快速显示 OutLine\nCtrl+T 快速显示当前类的继承结构\nCtrl+W 关闭当前Editer\nCtrl+K 参照选中的Word快速定位到下一个\nCtrl+E 快速显示当前Editer的下拉列表(如果当前页面没有显示的用黑体表示)\nCtrl+/(小键盘) 折叠当前类中的所有代码\nCtrl+×(小键盘) 展开当前类中的所有代码\nCtrl+Space 代码助手完成一些代码的插入(但一般和输入法有冲突,可以修改输入法的热键,也可以暂用Alt+/来代替)\nCtrl+Shift+E 显示管理当前打开的所有的View的管理器(可以选择关闭,激活等操作)\nCtrl+J 正向增量查找(按下Ctrl+J后,你所输入的每个字母编辑器都提供快速匹配定位到某个单词,如果没有,则在stutes line中显示没有找到了,查一个单词时,特别实用,这个功能Idea两年前就有了)\nCtrl+Shift+J 反向增量查找(和上条相同,只不过是从后往前查)\nCtrl+Shift+F4 关闭所有打开的Editer\nCtrl+Shift+X 把当前选中的文本全部变味小写\nCtrl+Shift+Y 把当前选中的文本全部变为小写\nCtrl+Shift+F 格式化当前代码\nCtrl+Shift+P 定位到对于的匹配符(譬如{}) (从前面定位后面时,光标要在匹配符里面,后面到前面,则反之)\n\n下面的快捷键是重构里面常用的(注:一般重构的快捷键都是Alt+Shift开头的了)\n\nAlt+Shift+R 重命名 (尤其是变量和类的Rename,比手工方法能节省很多劳动力)\nAlt+Shift+M 抽取方法 (这是重构里面最常用的方法之一了,尤其是对一大堆泥团代码有用)\nAlt+Shift+C 修改函数结构(比较实用,有N个函数调用了这个方法,修改一次搞定)\nAlt+Shift+L 抽取本地变量( 可以直接把一些魔法数字和字符串抽取成一个变量,尤其是多处调用的时候)\nAlt+Shift+F 把Class中的local变量变为field变量 (比较实用的功能)\nAlt+Shift+I 合并变量(可能这样说有点不妥Inline)\nAlt+Shift+V 移动函数和变量(不怎么常用)\nAlt+Shift+Z 重构的后悔药(Undo)\n\n# 编辑\n作用域 功能 快捷键\n全局 查找并替换 Ctrl+F\n文本编辑器 查找上一个 Ctrl+Shift+K\n文本编辑器 查找下一个 Ctrl+K\n全局 撤销 Ctrl+Z\n全局 复制 Ctrl+C\n全局 恢复上一个选择 Alt+Shift+↓\n全局 剪切 Ctrl+X\n全局 快速修正 Ctrl1+1\n全局 内容辅助 Alt+/\n全局 全部选中 Ctrl+A\n全局 删除 Delete\n全局 上下文信息 Alt+？\nAlt+Shift+?\nCtrl+Shift+Space\nJava编辑器 显示工具提示描述 F2\nJava编辑器 选择封装元素 Alt+Shift+↑\nJava编辑器 选择上一个元素 Alt+Shift+←\nJava编辑器 选择下一个元素 Alt+Shift+→\n文本编辑器 增量查找 Ctrl+J\n文本编辑器 增量逆向查找 Ctrl+Shift+J\n全局 粘贴 Ctrl+V\n全局 重做 Ctrl+Y\n\n# 查看\n作用域 功能 快捷键\n全局 放大 Ctrl+=\n全局 缩小 Ctrl+-\n\n# 窗口\n作用域 功能 快捷键\n全局 激活编辑器 F12\n全局 切换编辑器 Ctrl+Shift+W\n全局 上一个编辑器 Ctrl+Shift+F6\n全局 上一个视图 Ctrl+Shift+F7\n全局 上一个透视图 Ctrl+Shift+F8\n全局 下一个编辑器 Ctrl+F6\n全局 下一个视图 Ctrl+F7\n全局 下一个透视图 Ctrl+F8\n文本编辑器 显示标尺上下文菜单 Ctrl+W\n全局 显示视图菜单 Ctrl+F10\n全局 显示系统菜单 Alt+-\n\n# 导航\n作用域 功能 快捷键\nJava编辑器 打开结构 Ctrl+F3\n全局 打开类型 Ctrl+Shift+T\n全局 打开类型层次结构 F4\n全局 打开声明 F3\n全局 打开外部javadoc Shift+F2\n全局 打开资源 Ctrl+Shift+R\n全局 后退历史记录 Alt+←\n全局 前进历史记录 Alt+→\n全局 上一个 Ctrl+,\n全局 下一个 Ctrl+.\nJava编辑器 显示大纲 Ctrl+O\n全局 在层次结构中打开类型 Ctrl+Shift+H\n全局 转至匹配的括号 Ctrl+Shift+P\n全局 转至上一个编辑位置 Ctrl+Q\nJava编辑器 转至上一个成员 Ctrl+Shift+↑\nJava编辑器 转至下一个成员 Ctrl+Shift+↓\n文本编辑器 转至行 Ctrl+L\n\n# 搜索\n作用域 功能 快捷键\n全局 出现在文件中 Ctrl+Shift+U\n全局 打开搜索对话框 Ctrl+H\n全局 工作区中的声明 Ctrl+G\n全局 工作区中的引用 Ctrl+Shift+G\n\n# 文本编辑\n作用域 功能 快捷键\n文本编辑器 改写切换 Insert\n文本编辑器 上滚行 Ctrl+↑\n文本编辑器 下滚行 Ctrl+↓\n\n# 文件\n作用域 功能 快捷键\n全局 保存 Ctrl+X\nCtrl+S\n全局 打印 Ctrl+P\n全局 关闭 Ctrl+F4\n全局 全部保存 Ctrl+Shift+S\n全局 全部关闭 Ctrl+Shift+F4\n全局 属性 Alt+Enter\n全局 新建 Ctrl+N\n\n# 项目\n作用域 功能 快捷键\n全局 全部构建 Ctrl+B\n\n# 源代码\n作用域 功能 快捷键\nJava编辑器 格式化 Ctrl+Shift+F\nJava编辑器 取消注释 Ctrl+\\\nJava编辑器 注释 Ctrl+/\nJava编辑器 添加导入 Ctrl+Shift+M\nJava编辑器 组织导入 Ctrl+Shift+O\nJava编辑器 使用try/catch块来包围 未设置，太常用了，所以在这里列出,建议自己设置。\n也可以使用Ctrl+1自动修正。\n\n# 运行\n作用域 功能 快捷键\n全局 单步返回 F7\n全局 单步跳过 F6\n全局 单步跳入 F5\n全局 单步跳入选择 Ctrl+F5\n全局 调试上次启动 F11\n全局 继续 F8\n全局 使用过滤器单步执行 Shift+F5\n全局 添加/去除断点 Ctrl+Shift+B\n全局 显示 Ctrl+D\n全局 运行上次启动 Ctrl+F11\n全局 运行至行 Ctrl+R\n全局 执行 Ctrl+U\n\n# 重构\n作用域 功能 快捷键\n全局 撤销重构 Alt+Shift+Z\n全局 抽取方法 Alt+Shift+M\n全局 抽取局部变量 Alt+Shift+L\n全局 内联 Alt+Shift+I\n全局 移动 Alt+Shift+V\n全局 重命名 Alt+Shift+R\n全局 重做 Alt+Shift+Y","source":"_posts/javaQuickKey.md","raw":"---\ntitle: Eclipse常用快捷键操作命令\ndate: 2017-06-02 10:23:32\ntags:\ncategories: how to exit vim \nkeywords:\n---\n>Eclipse常用快捷键\n\nCtrl+1 快速修复(最经典的快捷键,就不用多说了)\nCtrl+D: 删除当前行\nCtrl+Alt+↓ 复制当前行到下一行(复制增加)\nCtrl+Alt+↑ 复制当前行到上一行(复制增加)\nAlt+↓ 当前行和下面一行交互位置(特别实用,可以省去先剪切,再粘贴了)\nAlt+↑ 当前行和上面一行交互位置(同上)\nAlt+← 前一个编辑的页面\nAlt+→ 下一个编辑的页面(当然是针对上面那条来说了)\nAlt+Enter 显示当前选择资源(工程,or 文件 or文件)的属性\nShift+Enter 在当前行的下一行插入空行(这时鼠标可以在当前行的任一位置,不一定是最后)\n<!--  more  -->\nShift+Ctrl+Enter 在当前行插入空行(原理同上条)\nCtrl+Q 定位到最后编辑的地方\nCtrl+L 定位在某行 (对于程序超过100的人就有福音了)\nCtrl+M 最大化当前的Edit或View (再按则反之)\nCtrl+/ 注释当前行,再按则取消注释\nCtrl+O 快速显示 OutLine\nCtrl+T 快速显示当前类的继承结构\nCtrl+W 关闭当前Editer\nCtrl+K 参照选中的Word快速定位到下一个\nCtrl+E 快速显示当前Editer的下拉列表(如果当前页面没有显示的用黑体表示)\nCtrl+/(小键盘) 折叠当前类中的所有代码\nCtrl+×(小键盘) 展开当前类中的所有代码\nCtrl+Space 代码助手完成一些代码的插入(但一般和输入法有冲突,可以修改输入法的热键,也可以暂用Alt+/来代替)\nCtrl+Shift+E 显示管理当前打开的所有的View的管理器(可以选择关闭,激活等操作)\nCtrl+J 正向增量查找(按下Ctrl+J后,你所输入的每个字母编辑器都提供快速匹配定位到某个单词,如果没有,则在stutes line中显示没有找到了,查一个单词时,特别实用,这个功能Idea两年前就有了)\nCtrl+Shift+J 反向增量查找(和上条相同,只不过是从后往前查)\nCtrl+Shift+F4 关闭所有打开的Editer\nCtrl+Shift+X 把当前选中的文本全部变味小写\nCtrl+Shift+Y 把当前选中的文本全部变为小写\nCtrl+Shift+F 格式化当前代码\nCtrl+Shift+P 定位到对于的匹配符(譬如{}) (从前面定位后面时,光标要在匹配符里面,后面到前面,则反之)\n\n下面的快捷键是重构里面常用的(注:一般重构的快捷键都是Alt+Shift开头的了)\n\nAlt+Shift+R 重命名 (尤其是变量和类的Rename,比手工方法能节省很多劳动力)\nAlt+Shift+M 抽取方法 (这是重构里面最常用的方法之一了,尤其是对一大堆泥团代码有用)\nAlt+Shift+C 修改函数结构(比较实用,有N个函数调用了这个方法,修改一次搞定)\nAlt+Shift+L 抽取本地变量( 可以直接把一些魔法数字和字符串抽取成一个变量,尤其是多处调用的时候)\nAlt+Shift+F 把Class中的local变量变为field变量 (比较实用的功能)\nAlt+Shift+I 合并变量(可能这样说有点不妥Inline)\nAlt+Shift+V 移动函数和变量(不怎么常用)\nAlt+Shift+Z 重构的后悔药(Undo)\n\n# 编辑\n作用域 功能 快捷键\n全局 查找并替换 Ctrl+F\n文本编辑器 查找上一个 Ctrl+Shift+K\n文本编辑器 查找下一个 Ctrl+K\n全局 撤销 Ctrl+Z\n全局 复制 Ctrl+C\n全局 恢复上一个选择 Alt+Shift+↓\n全局 剪切 Ctrl+X\n全局 快速修正 Ctrl1+1\n全局 内容辅助 Alt+/\n全局 全部选中 Ctrl+A\n全局 删除 Delete\n全局 上下文信息 Alt+？\nAlt+Shift+?\nCtrl+Shift+Space\nJava编辑器 显示工具提示描述 F2\nJava编辑器 选择封装元素 Alt+Shift+↑\nJava编辑器 选择上一个元素 Alt+Shift+←\nJava编辑器 选择下一个元素 Alt+Shift+→\n文本编辑器 增量查找 Ctrl+J\n文本编辑器 增量逆向查找 Ctrl+Shift+J\n全局 粘贴 Ctrl+V\n全局 重做 Ctrl+Y\n\n# 查看\n作用域 功能 快捷键\n全局 放大 Ctrl+=\n全局 缩小 Ctrl+-\n\n# 窗口\n作用域 功能 快捷键\n全局 激活编辑器 F12\n全局 切换编辑器 Ctrl+Shift+W\n全局 上一个编辑器 Ctrl+Shift+F6\n全局 上一个视图 Ctrl+Shift+F7\n全局 上一个透视图 Ctrl+Shift+F8\n全局 下一个编辑器 Ctrl+F6\n全局 下一个视图 Ctrl+F7\n全局 下一个透视图 Ctrl+F8\n文本编辑器 显示标尺上下文菜单 Ctrl+W\n全局 显示视图菜单 Ctrl+F10\n全局 显示系统菜单 Alt+-\n\n# 导航\n作用域 功能 快捷键\nJava编辑器 打开结构 Ctrl+F3\n全局 打开类型 Ctrl+Shift+T\n全局 打开类型层次结构 F4\n全局 打开声明 F3\n全局 打开外部javadoc Shift+F2\n全局 打开资源 Ctrl+Shift+R\n全局 后退历史记录 Alt+←\n全局 前进历史记录 Alt+→\n全局 上一个 Ctrl+,\n全局 下一个 Ctrl+.\nJava编辑器 显示大纲 Ctrl+O\n全局 在层次结构中打开类型 Ctrl+Shift+H\n全局 转至匹配的括号 Ctrl+Shift+P\n全局 转至上一个编辑位置 Ctrl+Q\nJava编辑器 转至上一个成员 Ctrl+Shift+↑\nJava编辑器 转至下一个成员 Ctrl+Shift+↓\n文本编辑器 转至行 Ctrl+L\n\n# 搜索\n作用域 功能 快捷键\n全局 出现在文件中 Ctrl+Shift+U\n全局 打开搜索对话框 Ctrl+H\n全局 工作区中的声明 Ctrl+G\n全局 工作区中的引用 Ctrl+Shift+G\n\n# 文本编辑\n作用域 功能 快捷键\n文本编辑器 改写切换 Insert\n文本编辑器 上滚行 Ctrl+↑\n文本编辑器 下滚行 Ctrl+↓\n\n# 文件\n作用域 功能 快捷键\n全局 保存 Ctrl+X\nCtrl+S\n全局 打印 Ctrl+P\n全局 关闭 Ctrl+F4\n全局 全部保存 Ctrl+Shift+S\n全局 全部关闭 Ctrl+Shift+F4\n全局 属性 Alt+Enter\n全局 新建 Ctrl+N\n\n# 项目\n作用域 功能 快捷键\n全局 全部构建 Ctrl+B\n\n# 源代码\n作用域 功能 快捷键\nJava编辑器 格式化 Ctrl+Shift+F\nJava编辑器 取消注释 Ctrl+\\\nJava编辑器 注释 Ctrl+/\nJava编辑器 添加导入 Ctrl+Shift+M\nJava编辑器 组织导入 Ctrl+Shift+O\nJava编辑器 使用try/catch块来包围 未设置，太常用了，所以在这里列出,建议自己设置。\n也可以使用Ctrl+1自动修正。\n\n# 运行\n作用域 功能 快捷键\n全局 单步返回 F7\n全局 单步跳过 F6\n全局 单步跳入 F5\n全局 单步跳入选择 Ctrl+F5\n全局 调试上次启动 F11\n全局 继续 F8\n全局 使用过滤器单步执行 Shift+F5\n全局 添加/去除断点 Ctrl+Shift+B\n全局 显示 Ctrl+D\n全局 运行上次启动 Ctrl+F11\n全局 运行至行 Ctrl+R\n全局 执行 Ctrl+U\n\n# 重构\n作用域 功能 快捷键\n全局 撤销重构 Alt+Shift+Z\n全局 抽取方法 Alt+Shift+M\n全局 抽取局部变量 Alt+Shift+L\n全局 内联 Alt+Shift+I\n全局 移动 Alt+Shift+V\n全局 重命名 Alt+Shift+R\n全局 重做 Alt+Shift+Y","slug":"javaQuickKey","published":1,"updated":"2017-09-06T09:23:59.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1jx000rcdon5u9876ef","content":"<blockquote>\n<p>Eclipse常用快捷键</p>\n</blockquote>\n<p>Ctrl+1 快速修复(最经典的快捷键,就不用多说了)<br>Ctrl+D: 删除当前行<br>Ctrl+Alt+↓ 复制当前行到下一行(复制增加)<br>Ctrl+Alt+↑ 复制当前行到上一行(复制增加)<br>Alt+↓ 当前行和下面一行交互位置(特别实用,可以省去先剪切,再粘贴了)<br>Alt+↑ 当前行和上面一行交互位置(同上)<br>Alt+← 前一个编辑的页面<br>Alt+→ 下一个编辑的页面(当然是针对上面那条来说了)<br>Alt+Enter 显示当前选择资源(工程,or 文件 or文件)的属性<br>Shift+Enter 在当前行的下一行插入空行(这时鼠标可以在当前行的任一位置,不一定是最后)<br><a id=\"more\"></a><br>Shift+Ctrl+Enter 在当前行插入空行(原理同上条)<br>Ctrl+Q 定位到最后编辑的地方<br>Ctrl+L 定位在某行 (对于程序超过100的人就有福音了)<br>Ctrl+M 最大化当前的Edit或View (再按则反之)<br>Ctrl+/ 注释当前行,再按则取消注释<br>Ctrl+O 快速显示 OutLine<br>Ctrl+T 快速显示当前类的继承结构<br>Ctrl+W 关闭当前Editer<br>Ctrl+K 参照选中的Word快速定位到下一个<br>Ctrl+E 快速显示当前Editer的下拉列表(如果当前页面没有显示的用黑体表示)<br>Ctrl+/(小键盘) 折叠当前类中的所有代码<br>Ctrl+×(小键盘) 展开当前类中的所有代码<br>Ctrl+Space 代码助手完成一些代码的插入(但一般和输入法有冲突,可以修改输入法的热键,也可以暂用Alt+/来代替)<br>Ctrl+Shift+E 显示管理当前打开的所有的View的管理器(可以选择关闭,激活等操作)<br>Ctrl+J 正向增量查找(按下Ctrl+J后,你所输入的每个字母编辑器都提供快速匹配定位到某个单词,如果没有,则在stutes line中显示没有找到了,查一个单词时,特别实用,这个功能Idea两年前就有了)<br>Ctrl+Shift+J 反向增量查找(和上条相同,只不过是从后往前查)<br>Ctrl+Shift+F4 关闭所有打开的Editer<br>Ctrl+Shift+X 把当前选中的文本全部变味小写<br>Ctrl+Shift+Y 把当前选中的文本全部变为小写<br>Ctrl+Shift+F 格式化当前代码<br>Ctrl+Shift+P 定位到对于的匹配符(譬如{}) (从前面定位后面时,光标要在匹配符里面,后面到前面,则反之)</p>\n<p>下面的快捷键是重构里面常用的(注:一般重构的快捷键都是Alt+Shift开头的了)</p>\n<p>Alt+Shift+R 重命名 (尤其是变量和类的Rename,比手工方法能节省很多劳动力)<br>Alt+Shift+M 抽取方法 (这是重构里面最常用的方法之一了,尤其是对一大堆泥团代码有用)<br>Alt+Shift+C 修改函数结构(比较实用,有N个函数调用了这个方法,修改一次搞定)<br>Alt+Shift+L 抽取本地变量( 可以直接把一些魔法数字和字符串抽取成一个变量,尤其是多处调用的时候)<br>Alt+Shift+F 把Class中的local变量变为field变量 (比较实用的功能)<br>Alt+Shift+I 合并变量(可能这样说有点不妥Inline)<br>Alt+Shift+V 移动函数和变量(不怎么常用)<br>Alt+Shift+Z 重构的后悔药(Undo)</p>\n<h1 id=\"编辑\"><a href=\"#编辑\" class=\"headerlink\" title=\"编辑\"></a>编辑</h1><p>作用域 功能 快捷键<br>全局 查找并替换 Ctrl+F<br>文本编辑器 查找上一个 Ctrl+Shift+K<br>文本编辑器 查找下一个 Ctrl+K<br>全局 撤销 Ctrl+Z<br>全局 复制 Ctrl+C<br>全局 恢复上一个选择 Alt+Shift+↓<br>全局 剪切 Ctrl+X<br>全局 快速修正 Ctrl1+1<br>全局 内容辅助 Alt+/<br>全局 全部选中 Ctrl+A<br>全局 删除 Delete<br>全局 上下文信息 Alt+？<br>Alt+Shift+?<br>Ctrl+Shift+Space<br>Java编辑器 显示工具提示描述 F2<br>Java编辑器 选择封装元素 Alt+Shift+↑<br>Java编辑器 选择上一个元素 Alt+Shift+←<br>Java编辑器 选择下一个元素 Alt+Shift+→<br>文本编辑器 增量查找 Ctrl+J<br>文本编辑器 增量逆向查找 Ctrl+Shift+J<br>全局 粘贴 Ctrl+V<br>全局 重做 Ctrl+Y</p>\n<h1 id=\"查看\"><a href=\"#查看\" class=\"headerlink\" title=\"查看\"></a>查看</h1><p>作用域 功能 快捷键<br>全局 放大 Ctrl+=<br>全局 缩小 Ctrl+-</p>\n<h1 id=\"窗口\"><a href=\"#窗口\" class=\"headerlink\" title=\"窗口\"></a>窗口</h1><p>作用域 功能 快捷键<br>全局 激活编辑器 F12<br>全局 切换编辑器 Ctrl+Shift+W<br>全局 上一个编辑器 Ctrl+Shift+F6<br>全局 上一个视图 Ctrl+Shift+F7<br>全局 上一个透视图 Ctrl+Shift+F8<br>全局 下一个编辑器 Ctrl+F6<br>全局 下一个视图 Ctrl+F7<br>全局 下一个透视图 Ctrl+F8<br>文本编辑器 显示标尺上下文菜单 Ctrl+W<br>全局 显示视图菜单 Ctrl+F10<br>全局 显示系统菜单 Alt+-</p>\n<h1 id=\"导航\"><a href=\"#导航\" class=\"headerlink\" title=\"导航\"></a>导航</h1><p>作用域 功能 快捷键<br>Java编辑器 打开结构 Ctrl+F3<br>全局 打开类型 Ctrl+Shift+T<br>全局 打开类型层次结构 F4<br>全局 打开声明 F3<br>全局 打开外部javadoc Shift+F2<br>全局 打开资源 Ctrl+Shift+R<br>全局 后退历史记录 Alt+←<br>全局 前进历史记录 Alt+→<br>全局 上一个 Ctrl+,<br>全局 下一个 Ctrl+.<br>Java编辑器 显示大纲 Ctrl+O<br>全局 在层次结构中打开类型 Ctrl+Shift+H<br>全局 转至匹配的括号 Ctrl+Shift+P<br>全局 转至上一个编辑位置 Ctrl+Q<br>Java编辑器 转至上一个成员 Ctrl+Shift+↑<br>Java编辑器 转至下一个成员 Ctrl+Shift+↓<br>文本编辑器 转至行 Ctrl+L</p>\n<h1 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h1><p>作用域 功能 快捷键<br>全局 出现在文件中 Ctrl+Shift+U<br>全局 打开搜索对话框 Ctrl+H<br>全局 工作区中的声明 Ctrl+G<br>全局 工作区中的引用 Ctrl+Shift+G</p>\n<h1 id=\"文本编辑\"><a href=\"#文本编辑\" class=\"headerlink\" title=\"文本编辑\"></a>文本编辑</h1><p>作用域 功能 快捷键<br>文本编辑器 改写切换 Insert<br>文本编辑器 上滚行 Ctrl+↑<br>文本编辑器 下滚行 Ctrl+↓</p>\n<h1 id=\"文件\"><a href=\"#文件\" class=\"headerlink\" title=\"文件\"></a>文件</h1><p>作用域 功能 快捷键<br>全局 保存 Ctrl+X<br>Ctrl+S<br>全局 打印 Ctrl+P<br>全局 关闭 Ctrl+F4<br>全局 全部保存 Ctrl+Shift+S<br>全局 全部关闭 Ctrl+Shift+F4<br>全局 属性 Alt+Enter<br>全局 新建 Ctrl+N</p>\n<h1 id=\"项目\"><a href=\"#项目\" class=\"headerlink\" title=\"项目\"></a>项目</h1><p>作用域 功能 快捷键<br>全局 全部构建 Ctrl+B</p>\n<h1 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h1><p>作用域 功能 快捷键<br>Java编辑器 格式化 Ctrl+Shift+F<br>Java编辑器 取消注释 Ctrl+\\<br>Java编辑器 注释 Ctrl+/<br>Java编辑器 添加导入 Ctrl+Shift+M<br>Java编辑器 组织导入 Ctrl+Shift+O<br>Java编辑器 使用try/catch块来包围 未设置，太常用了，所以在这里列出,建议自己设置。<br>也可以使用Ctrl+1自动修正。</p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>作用域 功能 快捷键<br>全局 单步返回 F7<br>全局 单步跳过 F6<br>全局 单步跳入 F5<br>全局 单步跳入选择 Ctrl+F5<br>全局 调试上次启动 F11<br>全局 继续 F8<br>全局 使用过滤器单步执行 Shift+F5<br>全局 添加/去除断点 Ctrl+Shift+B<br>全局 显示 Ctrl+D<br>全局 运行上次启动 Ctrl+F11<br>全局 运行至行 Ctrl+R<br>全局 执行 Ctrl+U</p>\n<h1 id=\"重构\"><a href=\"#重构\" class=\"headerlink\" title=\"重构\"></a>重构</h1><p>作用域 功能 快捷键<br>全局 撤销重构 Alt+Shift+Z<br>全局 抽取方法 Alt+Shift+M<br>全局 抽取局部变量 Alt+Shift+L<br>全局 内联 Alt+Shift+I<br>全局 移动 Alt+Shift+V<br>全局 重命名 Alt+Shift+R<br>全局 重做 Alt+Shift+Y</p>\n","excerpt":"<blockquote>\n<p>Eclipse常用快捷键</p>\n</blockquote>\n<p>Ctrl+1 快速修复(最经典的快捷键,就不用多说了)<br>Ctrl+D: 删除当前行<br>Ctrl+Alt+↓ 复制当前行到下一行(复制增加)<br>Ctrl+Alt+↑ 复制当前行到上一行(复制增加)<br>Alt+↓ 当前行和下面一行交互位置(特别实用,可以省去先剪切,再粘贴了)<br>Alt+↑ 当前行和上面一行交互位置(同上)<br>Alt+← 前一个编辑的页面<br>Alt+→ 下一个编辑的页面(当然是针对上面那条来说了)<br>Alt+Enter 显示当前选择资源(工程,or 文件 or文件)的属性<br>Shift+Enter 在当前行的下一行插入空行(这时鼠标可以在当前行的任一位置,不一定是最后)<br>","more":"<br>Shift+Ctrl+Enter 在当前行插入空行(原理同上条)<br>Ctrl+Q 定位到最后编辑的地方<br>Ctrl+L 定位在某行 (对于程序超过100的人就有福音了)<br>Ctrl+M 最大化当前的Edit或View (再按则反之)<br>Ctrl+/ 注释当前行,再按则取消注释<br>Ctrl+O 快速显示 OutLine<br>Ctrl+T 快速显示当前类的继承结构<br>Ctrl+W 关闭当前Editer<br>Ctrl+K 参照选中的Word快速定位到下一个<br>Ctrl+E 快速显示当前Editer的下拉列表(如果当前页面没有显示的用黑体表示)<br>Ctrl+/(小键盘) 折叠当前类中的所有代码<br>Ctrl+×(小键盘) 展开当前类中的所有代码<br>Ctrl+Space 代码助手完成一些代码的插入(但一般和输入法有冲突,可以修改输入法的热键,也可以暂用Alt+/来代替)<br>Ctrl+Shift+E 显示管理当前打开的所有的View的管理器(可以选择关闭,激活等操作)<br>Ctrl+J 正向增量查找(按下Ctrl+J后,你所输入的每个字母编辑器都提供快速匹配定位到某个单词,如果没有,则在stutes line中显示没有找到了,查一个单词时,特别实用,这个功能Idea两年前就有了)<br>Ctrl+Shift+J 反向增量查找(和上条相同,只不过是从后往前查)<br>Ctrl+Shift+F4 关闭所有打开的Editer<br>Ctrl+Shift+X 把当前选中的文本全部变味小写<br>Ctrl+Shift+Y 把当前选中的文本全部变为小写<br>Ctrl+Shift+F 格式化当前代码<br>Ctrl+Shift+P 定位到对于的匹配符(譬如{}) (从前面定位后面时,光标要在匹配符里面,后面到前面,则反之)</p>\n<p>下面的快捷键是重构里面常用的(注:一般重构的快捷键都是Alt+Shift开头的了)</p>\n<p>Alt+Shift+R 重命名 (尤其是变量和类的Rename,比手工方法能节省很多劳动力)<br>Alt+Shift+M 抽取方法 (这是重构里面最常用的方法之一了,尤其是对一大堆泥团代码有用)<br>Alt+Shift+C 修改函数结构(比较实用,有N个函数调用了这个方法,修改一次搞定)<br>Alt+Shift+L 抽取本地变量( 可以直接把一些魔法数字和字符串抽取成一个变量,尤其是多处调用的时候)<br>Alt+Shift+F 把Class中的local变量变为field变量 (比较实用的功能)<br>Alt+Shift+I 合并变量(可能这样说有点不妥Inline)<br>Alt+Shift+V 移动函数和变量(不怎么常用)<br>Alt+Shift+Z 重构的后悔药(Undo)</p>\n<h1 id=\"编辑\"><a href=\"#编辑\" class=\"headerlink\" title=\"编辑\"></a>编辑</h1><p>作用域 功能 快捷键<br>全局 查找并替换 Ctrl+F<br>文本编辑器 查找上一个 Ctrl+Shift+K<br>文本编辑器 查找下一个 Ctrl+K<br>全局 撤销 Ctrl+Z<br>全局 复制 Ctrl+C<br>全局 恢复上一个选择 Alt+Shift+↓<br>全局 剪切 Ctrl+X<br>全局 快速修正 Ctrl1+1<br>全局 内容辅助 Alt+/<br>全局 全部选中 Ctrl+A<br>全局 删除 Delete<br>全局 上下文信息 Alt+？<br>Alt+Shift+?<br>Ctrl+Shift+Space<br>Java编辑器 显示工具提示描述 F2<br>Java编辑器 选择封装元素 Alt+Shift+↑<br>Java编辑器 选择上一个元素 Alt+Shift+←<br>Java编辑器 选择下一个元素 Alt+Shift+→<br>文本编辑器 增量查找 Ctrl+J<br>文本编辑器 增量逆向查找 Ctrl+Shift+J<br>全局 粘贴 Ctrl+V<br>全局 重做 Ctrl+Y</p>\n<h1 id=\"查看\"><a href=\"#查看\" class=\"headerlink\" title=\"查看\"></a>查看</h1><p>作用域 功能 快捷键<br>全局 放大 Ctrl+=<br>全局 缩小 Ctrl+-</p>\n<h1 id=\"窗口\"><a href=\"#窗口\" class=\"headerlink\" title=\"窗口\"></a>窗口</h1><p>作用域 功能 快捷键<br>全局 激活编辑器 F12<br>全局 切换编辑器 Ctrl+Shift+W<br>全局 上一个编辑器 Ctrl+Shift+F6<br>全局 上一个视图 Ctrl+Shift+F7<br>全局 上一个透视图 Ctrl+Shift+F8<br>全局 下一个编辑器 Ctrl+F6<br>全局 下一个视图 Ctrl+F7<br>全局 下一个透视图 Ctrl+F8<br>文本编辑器 显示标尺上下文菜单 Ctrl+W<br>全局 显示视图菜单 Ctrl+F10<br>全局 显示系统菜单 Alt+-</p>\n<h1 id=\"导航\"><a href=\"#导航\" class=\"headerlink\" title=\"导航\"></a>导航</h1><p>作用域 功能 快捷键<br>Java编辑器 打开结构 Ctrl+F3<br>全局 打开类型 Ctrl+Shift+T<br>全局 打开类型层次结构 F4<br>全局 打开声明 F3<br>全局 打开外部javadoc Shift+F2<br>全局 打开资源 Ctrl+Shift+R<br>全局 后退历史记录 Alt+←<br>全局 前进历史记录 Alt+→<br>全局 上一个 Ctrl+,<br>全局 下一个 Ctrl+.<br>Java编辑器 显示大纲 Ctrl+O<br>全局 在层次结构中打开类型 Ctrl+Shift+H<br>全局 转至匹配的括号 Ctrl+Shift+P<br>全局 转至上一个编辑位置 Ctrl+Q<br>Java编辑器 转至上一个成员 Ctrl+Shift+↑<br>Java编辑器 转至下一个成员 Ctrl+Shift+↓<br>文本编辑器 转至行 Ctrl+L</p>\n<h1 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h1><p>作用域 功能 快捷键<br>全局 出现在文件中 Ctrl+Shift+U<br>全局 打开搜索对话框 Ctrl+H<br>全局 工作区中的声明 Ctrl+G<br>全局 工作区中的引用 Ctrl+Shift+G</p>\n<h1 id=\"文本编辑\"><a href=\"#文本编辑\" class=\"headerlink\" title=\"文本编辑\"></a>文本编辑</h1><p>作用域 功能 快捷键<br>文本编辑器 改写切换 Insert<br>文本编辑器 上滚行 Ctrl+↑<br>文本编辑器 下滚行 Ctrl+↓</p>\n<h1 id=\"文件\"><a href=\"#文件\" class=\"headerlink\" title=\"文件\"></a>文件</h1><p>作用域 功能 快捷键<br>全局 保存 Ctrl+X<br>Ctrl+S<br>全局 打印 Ctrl+P<br>全局 关闭 Ctrl+F4<br>全局 全部保存 Ctrl+Shift+S<br>全局 全部关闭 Ctrl+Shift+F4<br>全局 属性 Alt+Enter<br>全局 新建 Ctrl+N</p>\n<h1 id=\"项目\"><a href=\"#项目\" class=\"headerlink\" title=\"项目\"></a>项目</h1><p>作用域 功能 快捷键<br>全局 全部构建 Ctrl+B</p>\n<h1 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h1><p>作用域 功能 快捷键<br>Java编辑器 格式化 Ctrl+Shift+F<br>Java编辑器 取消注释 Ctrl+\\<br>Java编辑器 注释 Ctrl+/<br>Java编辑器 添加导入 Ctrl+Shift+M<br>Java编辑器 组织导入 Ctrl+Shift+O<br>Java编辑器 使用try/catch块来包围 未设置，太常用了，所以在这里列出,建议自己设置。<br>也可以使用Ctrl+1自动修正。</p>\n<h1 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h1><p>作用域 功能 快捷键<br>全局 单步返回 F7<br>全局 单步跳过 F6<br>全局 单步跳入 F5<br>全局 单步跳入选择 Ctrl+F5<br>全局 调试上次启动 F11<br>全局 继续 F8<br>全局 使用过滤器单步执行 Shift+F5<br>全局 添加/去除断点 Ctrl+Shift+B<br>全局 显示 Ctrl+D<br>全局 运行上次启动 Ctrl+F11<br>全局 运行至行 Ctrl+R<br>全局 执行 Ctrl+U</p>\n<h1 id=\"重构\"><a href=\"#重构\" class=\"headerlink\" title=\"重构\"></a>重构</h1><p>作用域 功能 快捷键<br>全局 撤销重构 Alt+Shift+Z<br>全局 抽取方法 Alt+Shift+M<br>全局 抽取局部变量 Alt+Shift+L<br>全局 内联 Alt+Shift+I<br>全局 移动 Alt+Shift+V<br>全局 重命名 Alt+Shift+R<br>全局 重做 Alt+Shift+Y</p>"},{"title":"javascript","date":"2017-04-11T03:10:07.000Z","_content":">看了javascript高级程序设计后对js的一些归纳总结，以及一些面试题的代码\n\n# 概念\n\n - js的对象均继承于boject\n - call() 调用一个对象的一个方法，以另一个对象替换当前对象(第二参数任意)\n - apply() 应用某一对象的一个方法，用另一个对象替换当前对象(第二参数必须为数组或argument)\n - callee,caller(递归)\n - === 全等 与==的区别在于操作数未经任何转换时就相等(==在对比的时候做了隐式转换)。\n - prototype(原型) 指向一个对象(指针)\n - hasOwnProperty() 确定用的是实例还是原型对象\n - push() 向数组的末尾添加一个或多个元素，并返回新的长度\n - unshift() 向数组的开头添加一个或更多元素，并返回新的长度。\n - pop() 删除并返回数组的最后一个元素\n - shift() 删除并返回数组的第一个元素\n - 构造函数是一种可初始化其类的实例的成员函数。 构造函数具有与类相同的名称，没有返回值。 构造函数可以具有任意数量的参数，类可以具有任意数量的重载构造函数。\n - 闭包就是能够读取其他函数内部变量的函数\n<!-- more -->\n# 笔记\n\n## slice() 方法\n - 可提取字符串的某个部分，并以新的字符串返回被提取的部分。\n - 从 start 开始（包括 start）到 end 结束（不包括 end）为止的所有字符\n\n``` javascript\n    stringObject.slice(start,end)\n```\n\n## sort() 方法\n用于对数组的元素进行排序\n如果想按照其他标准进行排序，就需要提供比较函数，该函数要比较两个值，然后返回一个用于说明这两个值的相对顺序的数字。\n比较函数应该具有两个参数 a 和 b，其返回值如下： \n - 若 a 小于 b，在排序后的数组中a应该出现在b之前，则返回一个小于0的值。那么 a 会被排列到 b 之前\n - 若 a 等于 b，则返回 0。 \n - 若 a 大于 b，则返回一个大于 0 的值。b 会被排列到 a 之前\n[参考资料](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/sort)\n``` javascript\n    var arr=[1,3,4,52010,3001,20,123]\n        arr.sort(function(a,b){\n            if(a < b){return -1;}// a 会被排列到 b 之前\n            else if(a > b){return 1;}// b 会被排列到 a 之前\n            else if(a == b){return 0;}//此时不排序\n        })\n\n        data.sort(function(a,b){\n            return a[1] - b[1];//升序排列\n        })\n```\n\n## jq\n### siblings()方法\n\n``` javascript\n    $('#navli').click(function(){ $(this).addClass('active').siblings().removeClass('active'); });//当前元素添加active样式，同辈元素删除active样式\n```\n# SetTimeout与setInterval区别\n - setTimeout   在执行时,是在载入后延迟指定时间后,去执行一次表达式,仅执行一次\n - setInterval 在执行时,它从载入后,每隔指定的时间就执行一次表达式\n\nsetTimeout (表达式,延时时间)\nsetInterval(表达式,交互时间)\n延时时间/交互时间是以豪秒为单位的(1000ms=1s)\n``` javascript\n    function run(){\n        // 其他代码\n        setTimeout(function(){\n            run();\n        }, 10000);\n    }\n    run();\n```\n以上面的代码来说, 虽然设置的是10s执行一次, 但是实际时间却是需要`// 其他代码的执行时间`来确定\n即setTimeout的间隔时间是, `// 其他代码执行时间` + 10s\n\n``` javascript\n    setInterval(function(){\n        run();\n    }, 10000);\n```\n而setInterval, 不会有上面的问题, 但是如果run()的执行时间, 操作大于10s, 那么甚至可能跳过任务\n[参考资料](https://segmentfault.com/q/1010000005989491)\n\n***\n# 有关JS的面试题\n\n## 删除数组内重复内容\n\n``` javascript\n    var arr=[7,1,2,3,3,4,\"abc\",4,5,5,6,1,9,3,25,4,\"abc\"];\n\n    function deletRepeat(){\n        var renArray=[];//空数组用来存储删除重复内容后的数组\n        var obj={};//创建一个空对象\n        var index = 0;\n        for(var i=0;i<arr.length;i++){\n            if(obj[arr[i]]==undefined){//当对象中没有对应的内容时返回undefined\n                renArray[index]=arr[i];\n                index++;\n                obj[arr[i]]=1;//为当前对象添加一个值为1\n            }\n            else if(obj[arr[i]]==1){\n                continue;\n            }\n        }\n        return renArray;\n    }\n    alert(deletRepeat(arr));\n```\n\n## 数组的随机排序\n``` javascript \n    var arr = [1,2,3,4,5,6,7,8,9,10]; \n\n    //方法一：\n    function randSort1(arr){\n        for(var i = 0,len = arr.length;i < len; i++ ){\n            var rand = parseInt(Math.random()*len);\n            var temp = arr[rand];\n            arr[rand] = arr[i];\n            arr[i] = temp;\n            }\n        return arr;\n        }\n        console.log(randSort1(arr));\n    //方法二:\n    function randSort2(arr){\n        var mixedArray = [];\n        while(arr.length > 0){\n            var randomIndex = parseInt(Math.random()*arr.length);\n            mixedArray.push(arr[randomIndex]);\n            arr.splice(randomIndex, 1);\n        }\n        return mixedArray;\n    }\n    console.log(randSort2(arr));\n    //方法三:  \n        arr.sort(function(){\n            return Math.random() - 0.5;\n        })\n        console.log(arr);\n```\n\n# 一个有意思的题目：\n``` javascript\n    function Foo() {\n        getName = function () { alert (1); };\n        return this;\n    }\n    Foo.getName = function () { alert (2);};\n    Foo.prototype.getName = function () { alert (3);};\n    var getName = function () { alert (4);};\n    function getName() { alert (5);}\n\n    //请写出以下输出结果：\n    Foo.getName();//2\n    getName();//4\n    Foo().getName();//1\n    getName();//1\n    new Foo.getName();//2\n    new Foo().getName();//3\n    new new Foo().getName();//3\n```\n[参考资料](http://www.cnblogs.com/xxcanghai/p/5189353.html)","source":"_posts/javascript.md","raw":"---\ntitle: javascript\ndate: 2017-04-11 11:10:07\ncategories: FE\ntags: js\n---\n>看了javascript高级程序设计后对js的一些归纳总结，以及一些面试题的代码\n\n# 概念\n\n - js的对象均继承于boject\n - call() 调用一个对象的一个方法，以另一个对象替换当前对象(第二参数任意)\n - apply() 应用某一对象的一个方法，用另一个对象替换当前对象(第二参数必须为数组或argument)\n - callee,caller(递归)\n - === 全等 与==的区别在于操作数未经任何转换时就相等(==在对比的时候做了隐式转换)。\n - prototype(原型) 指向一个对象(指针)\n - hasOwnProperty() 确定用的是实例还是原型对象\n - push() 向数组的末尾添加一个或多个元素，并返回新的长度\n - unshift() 向数组的开头添加一个或更多元素，并返回新的长度。\n - pop() 删除并返回数组的最后一个元素\n - shift() 删除并返回数组的第一个元素\n - 构造函数是一种可初始化其类的实例的成员函数。 构造函数具有与类相同的名称，没有返回值。 构造函数可以具有任意数量的参数，类可以具有任意数量的重载构造函数。\n - 闭包就是能够读取其他函数内部变量的函数\n<!-- more -->\n# 笔记\n\n## slice() 方法\n - 可提取字符串的某个部分，并以新的字符串返回被提取的部分。\n - 从 start 开始（包括 start）到 end 结束（不包括 end）为止的所有字符\n\n``` javascript\n    stringObject.slice(start,end)\n```\n\n## sort() 方法\n用于对数组的元素进行排序\n如果想按照其他标准进行排序，就需要提供比较函数，该函数要比较两个值，然后返回一个用于说明这两个值的相对顺序的数字。\n比较函数应该具有两个参数 a 和 b，其返回值如下： \n - 若 a 小于 b，在排序后的数组中a应该出现在b之前，则返回一个小于0的值。那么 a 会被排列到 b 之前\n - 若 a 等于 b，则返回 0。 \n - 若 a 大于 b，则返回一个大于 0 的值。b 会被排列到 a 之前\n[参考资料](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/sort)\n``` javascript\n    var arr=[1,3,4,52010,3001,20,123]\n        arr.sort(function(a,b){\n            if(a < b){return -1;}// a 会被排列到 b 之前\n            else if(a > b){return 1;}// b 会被排列到 a 之前\n            else if(a == b){return 0;}//此时不排序\n        })\n\n        data.sort(function(a,b){\n            return a[1] - b[1];//升序排列\n        })\n```\n\n## jq\n### siblings()方法\n\n``` javascript\n    $('#navli').click(function(){ $(this).addClass('active').siblings().removeClass('active'); });//当前元素添加active样式，同辈元素删除active样式\n```\n# SetTimeout与setInterval区别\n - setTimeout   在执行时,是在载入后延迟指定时间后,去执行一次表达式,仅执行一次\n - setInterval 在执行时,它从载入后,每隔指定的时间就执行一次表达式\n\nsetTimeout (表达式,延时时间)\nsetInterval(表达式,交互时间)\n延时时间/交互时间是以豪秒为单位的(1000ms=1s)\n``` javascript\n    function run(){\n        // 其他代码\n        setTimeout(function(){\n            run();\n        }, 10000);\n    }\n    run();\n```\n以上面的代码来说, 虽然设置的是10s执行一次, 但是实际时间却是需要`// 其他代码的执行时间`来确定\n即setTimeout的间隔时间是, `// 其他代码执行时间` + 10s\n\n``` javascript\n    setInterval(function(){\n        run();\n    }, 10000);\n```\n而setInterval, 不会有上面的问题, 但是如果run()的执行时间, 操作大于10s, 那么甚至可能跳过任务\n[参考资料](https://segmentfault.com/q/1010000005989491)\n\n***\n# 有关JS的面试题\n\n## 删除数组内重复内容\n\n``` javascript\n    var arr=[7,1,2,3,3,4,\"abc\",4,5,5,6,1,9,3,25,4,\"abc\"];\n\n    function deletRepeat(){\n        var renArray=[];//空数组用来存储删除重复内容后的数组\n        var obj={};//创建一个空对象\n        var index = 0;\n        for(var i=0;i<arr.length;i++){\n            if(obj[arr[i]]==undefined){//当对象中没有对应的内容时返回undefined\n                renArray[index]=arr[i];\n                index++;\n                obj[arr[i]]=1;//为当前对象添加一个值为1\n            }\n            else if(obj[arr[i]]==1){\n                continue;\n            }\n        }\n        return renArray;\n    }\n    alert(deletRepeat(arr));\n```\n\n## 数组的随机排序\n``` javascript \n    var arr = [1,2,3,4,5,6,7,8,9,10]; \n\n    //方法一：\n    function randSort1(arr){\n        for(var i = 0,len = arr.length;i < len; i++ ){\n            var rand = parseInt(Math.random()*len);\n            var temp = arr[rand];\n            arr[rand] = arr[i];\n            arr[i] = temp;\n            }\n        return arr;\n        }\n        console.log(randSort1(arr));\n    //方法二:\n    function randSort2(arr){\n        var mixedArray = [];\n        while(arr.length > 0){\n            var randomIndex = parseInt(Math.random()*arr.length);\n            mixedArray.push(arr[randomIndex]);\n            arr.splice(randomIndex, 1);\n        }\n        return mixedArray;\n    }\n    console.log(randSort2(arr));\n    //方法三:  \n        arr.sort(function(){\n            return Math.random() - 0.5;\n        })\n        console.log(arr);\n```\n\n# 一个有意思的题目：\n``` javascript\n    function Foo() {\n        getName = function () { alert (1); };\n        return this;\n    }\n    Foo.getName = function () { alert (2);};\n    Foo.prototype.getName = function () { alert (3);};\n    var getName = function () { alert (4);};\n    function getName() { alert (5);}\n\n    //请写出以下输出结果：\n    Foo.getName();//2\n    getName();//4\n    Foo().getName();//1\n    getName();//1\n    new Foo.getName();//2\n    new Foo().getName();//3\n    new new Foo().getName();//3\n```\n[参考资料](http://www.cnblogs.com/xxcanghai/p/5189353.html)","slug":"javascript","published":1,"updated":"2017-09-06T09:24:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1jy000vcdonf0lvqdgk","content":"<blockquote>\n<p>看了javascript高级程序设计后对js的一些归纳总结，以及一些面试题的代码</p>\n</blockquote>\n<h1 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h1><ul>\n<li>js的对象均继承于boject</li>\n<li>call() 调用一个对象的一个方法，以另一个对象替换当前对象(第二参数任意)</li>\n<li>apply() 应用某一对象的一个方法，用另一个对象替换当前对象(第二参数必须为数组或argument)</li>\n<li>callee,caller(递归)</li>\n<li>=== 全等 与==的区别在于操作数未经任何转换时就相等(==在对比的时候做了隐式转换)。</li>\n<li>prototype(原型) 指向一个对象(指针)</li>\n<li>hasOwnProperty() 确定用的是实例还是原型对象</li>\n<li>push() 向数组的末尾添加一个或多个元素，并返回新的长度</li>\n<li>unshift() 向数组的开头添加一个或更多元素，并返回新的长度。</li>\n<li>pop() 删除并返回数组的最后一个元素</li>\n<li>shift() 删除并返回数组的第一个元素</li>\n<li>构造函数是一种可初始化其类的实例的成员函数。 构造函数具有与类相同的名称，没有返回值。 构造函数可以具有任意数量的参数，类可以具有任意数量的重载构造函数。</li>\n<li>闭包就是能够读取其他函数内部变量的函数<a id=\"more\"></a>\n<h1 id=\"笔记\"><a href=\"#笔记\" class=\"headerlink\" title=\"笔记\"></a>笔记</h1></li>\n</ul>\n<h2 id=\"slice-方法\"><a href=\"#slice-方法\" class=\"headerlink\" title=\"slice() 方法\"></a>slice() 方法</h2><ul>\n<li>可提取字符串的某个部分，并以新的字符串返回被提取的部分。</li>\n<li>从 start 开始（包括 start）到 end 结束（不包括 end）为止的所有字符</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">stringObject.slice(start,end)</div></pre></td></tr></table></figure>\n<h2 id=\"sort-方法\"><a href=\"#sort-方法\" class=\"headerlink\" title=\"sort() 方法\"></a>sort() 方法</h2><p>用于对数组的元素进行排序<br>如果想按照其他标准进行排序，就需要提供比较函数，该函数要比较两个值，然后返回一个用于说明这两个值的相对顺序的数字。<br>比较函数应该具有两个参数 a 和 b，其返回值如下： </p>\n<ul>\n<li>若 a 小于 b，在排序后的数组中a应该出现在b之前，则返回一个小于0的值。那么 a 会被排列到 b 之前</li>\n<li>若 a 等于 b，则返回 0。 </li>\n<li>若 a 大于 b，则返回一个大于 0 的值。b 会被排列到 a 之前<br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\" target=\"_blank\" rel=\"external\">参考资料</a><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">52010</span>,<span class=\"number\">3001</span>,<span class=\"number\">20</span>,<span class=\"number\">123</span>]</div><div class=\"line\">    arr.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(a &lt; b)&#123;<span class=\"keyword\">return</span> <span class=\"number\">-1</span>;&#125;<span class=\"comment\">// a 会被排列到 b 之前</span></div><div class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a &gt; b)&#123;<span class=\"keyword\">return</span> <span class=\"number\">1</span>;&#125;<span class=\"comment\">// b 会被排列到 a 之前</span></div><div class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a == b)&#123;<span class=\"keyword\">return</span> <span class=\"number\">0</span>;&#125;<span class=\"comment\">//此时不排序</span></div><div class=\"line\">    &#125;)</div><div class=\"line\"></div><div class=\"line\">    data.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> a[<span class=\"number\">1</span>] - b[<span class=\"number\">1</span>];<span class=\"comment\">//升序排列</span></div><div class=\"line\">    &#125;)</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"jq\"><a href=\"#jq\" class=\"headerlink\" title=\"jq\"></a>jq</h2><h3 id=\"siblings-方法\"><a href=\"#siblings-方法\" class=\"headerlink\" title=\"siblings()方法\"></a>siblings()方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">'#navli'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123; $(<span class=\"keyword\">this</span>).addClass(<span class=\"string\">'active'</span>).siblings().removeClass(<span class=\"string\">'active'</span>); &#125;);<span class=\"comment\">//当前元素添加active样式，同辈元素删除active样式</span></div></pre></td></tr></table></figure>\n<h1 id=\"SetTimeout与setInterval区别\"><a href=\"#SetTimeout与setInterval区别\" class=\"headerlink\" title=\"SetTimeout与setInterval区别\"></a>SetTimeout与setInterval区别</h1><ul>\n<li>setTimeout   在执行时,是在载入后延迟指定时间后,去执行一次表达式,仅执行一次</li>\n<li>setInterval 在执行时,它从载入后,每隔指定的时间就执行一次表达式</li>\n</ul>\n<p>setTimeout (表达式,延时时间)<br>setInterval(表达式,交互时间)<br>延时时间/交互时间是以豪秒为单位的(1000ms=1s)<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">run</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 其他代码</span></div><div class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        run();</div><div class=\"line\">    &#125;, <span class=\"number\">10000</span>);</div><div class=\"line\">&#125;</div><div class=\"line\">run();</div></pre></td></tr></table></figure></p>\n<p>以上面的代码来说, 虽然设置的是10s执行一次, 但是实际时间却是需要<code>// 其他代码的执行时间</code>来确定<br>即setTimeout的间隔时间是, <code>// 其他代码执行时间</code> + 10s</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    run();</div><div class=\"line\">&#125;, <span class=\"number\">10000</span>);</div></pre></td></tr></table></figure>\n<p>而setInterval, 不会有上面的问题, 但是如果run()的执行时间, 操作大于10s, 那么甚至可能跳过任务<br><a href=\"https://segmentfault.com/q/1010000005989491\" target=\"_blank\" rel=\"external\">参考资料</a></p>\n<hr>\n<h1 id=\"有关JS的面试题\"><a href=\"#有关JS的面试题\" class=\"headerlink\" title=\"有关JS的面试题\"></a>有关JS的面试题</h1><h2 id=\"删除数组内重复内容\"><a href=\"#删除数组内重复内容\" class=\"headerlink\" title=\"删除数组内重复内容\"></a>删除数组内重复内容</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">7</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"string\">\"abc\"</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>,<span class=\"number\">3</span>,<span class=\"number\">25</span>,<span class=\"number\">4</span>,<span class=\"string\">\"abc\"</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deletRepeat</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> renArray=[];<span class=\"comment\">//空数组用来存储删除重复内容后的数组</span></div><div class=\"line\">    <span class=\"keyword\">var</span> obj=&#123;&#125;;<span class=\"comment\">//创建一个空对象</span></div><div class=\"line\">    <span class=\"keyword\">var</span> index = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;arr.length;i++)&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(obj[arr[i]]==<span class=\"literal\">undefined</span>)&#123;<span class=\"comment\">//当对象中没有对应的内容时返回undefined</span></div><div class=\"line\">            renArray[index]=arr[i];</div><div class=\"line\">            index++;</div><div class=\"line\">            obj[arr[i]]=<span class=\"number\">1</span>;<span class=\"comment\">//为当前对象添加一个值为1</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(obj[arr[i]]==<span class=\"number\">1</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">continue</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> renArray;</div><div class=\"line\">&#125;</div><div class=\"line\">alert(deletRepeat(arr));</div></pre></td></tr></table></figure>\n<h2 id=\"数组的随机排序\"><a href=\"#数组的随机排序\" class=\"headerlink\" title=\"数组的随机排序\"></a>数组的随机排序</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>]; </div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//方法一：</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randSort1</span>(<span class=\"params\">arr</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>,len = arr.length;i &lt; len; i++ )&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> rand = <span class=\"built_in\">parseInt</span>(<span class=\"built_in\">Math</span>.random()*len);</div><div class=\"line\">        <span class=\"keyword\">var</span> temp = arr[rand];</div><div class=\"line\">        arr[rand] = arr[i];</div><div class=\"line\">        arr[i] = temp;</div><div class=\"line\">        &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> arr;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(randSort1(arr));</div><div class=\"line\"><span class=\"comment\">//方法二:</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randSort2</span>(<span class=\"params\">arr</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> mixedArray = [];</div><div class=\"line\">    <span class=\"keyword\">while</span>(arr.length &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> randomIndex = <span class=\"built_in\">parseInt</span>(<span class=\"built_in\">Math</span>.random()*arr.length);</div><div class=\"line\">        mixedArray.push(arr[randomIndex]);</div><div class=\"line\">        arr.splice(randomIndex, <span class=\"number\">1</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> mixedArray;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(randSort2(arr));</div><div class=\"line\"><span class=\"comment\">//方法三:  </span></div><div class=\"line\">    arr.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.random() - <span class=\"number\">0.5</span>;</div><div class=\"line\">    &#125;)</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(arr);</div></pre></td></tr></table></figure>\n<h1 id=\"一个有意思的题目：\"><a href=\"#一个有意思的题目：\" class=\"headerlink\" title=\"一个有意思的题目：\"></a>一个有意思的题目：</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Foo</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; alert (<span class=\"number\">1</span>); &#125;;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">Foo.getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; alert (<span class=\"number\">2</span>);&#125;;</div><div class=\"line\">Foo.prototype.getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; alert (<span class=\"number\">3</span>);&#125;;</div><div class=\"line\"><span class=\"keyword\">var</span> getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; alert (<span class=\"number\">4</span>);&#125;;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>) </span>&#123; alert (<span class=\"number\">5</span>);&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//请写出以下输出结果：</span></div><div class=\"line\">Foo.getName();<span class=\"comment\">//2</span></div><div class=\"line\">getName();<span class=\"comment\">//4</span></div><div class=\"line\">Foo().getName();<span class=\"comment\">//1</span></div><div class=\"line\">getName();<span class=\"comment\">//1</span></div><div class=\"line\"><span class=\"keyword\">new</span> Foo.getName();<span class=\"comment\">//2</span></div><div class=\"line\"><span class=\"keyword\">new</span> Foo().getName();<span class=\"comment\">//3</span></div><div class=\"line\"><span class=\"keyword\">new</span> <span class=\"keyword\">new</span> Foo().getName();<span class=\"comment\">//3</span></div></pre></td></tr></table></figure>\n<p><a href=\"http://www.cnblogs.com/xxcanghai/p/5189353.html\" target=\"_blank\" rel=\"external\">参考资料</a></p>\n","excerpt":"<blockquote>\n<p>看了javascript高级程序设计后对js的一些归纳总结，以及一些面试题的代码</p>\n</blockquote>\n<h1 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h1><ul>\n<li>js的对象均继承于boject</li>\n<li>call() 调用一个对象的一个方法，以另一个对象替换当前对象(第二参数任意)</li>\n<li>apply() 应用某一对象的一个方法，用另一个对象替换当前对象(第二参数必须为数组或argument)</li>\n<li>callee,caller(递归)</li>\n<li>=== 全等 与==的区别在于操作数未经任何转换时就相等(==在对比的时候做了隐式转换)。</li>\n<li>prototype(原型) 指向一个对象(指针)</li>\n<li>hasOwnProperty() 确定用的是实例还是原型对象</li>\n<li>push() 向数组的末尾添加一个或多个元素，并返回新的长度</li>\n<li>unshift() 向数组的开头添加一个或更多元素，并返回新的长度。</li>\n<li>pop() 删除并返回数组的最后一个元素</li>\n<li>shift() 删除并返回数组的第一个元素</li>\n<li>构造函数是一种可初始化其类的实例的成员函数。 构造函数具有与类相同的名称，没有返回值。 构造函数可以具有任意数量的参数，类可以具有任意数量的重载构造函数。</li>\n<li>闭包就是能够读取其他函数内部变量的函数","more":"<h1 id=\"笔记\"><a href=\"#笔记\" class=\"headerlink\" title=\"笔记\"></a>笔记</h1></li>\n</ul>\n<h2 id=\"slice-方法\"><a href=\"#slice-方法\" class=\"headerlink\" title=\"slice() 方法\"></a>slice() 方法</h2><ul>\n<li>可提取字符串的某个部分，并以新的字符串返回被提取的部分。</li>\n<li>从 start 开始（包括 start）到 end 结束（不包括 end）为止的所有字符</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">stringObject.slice(start,end)</div></pre></td></tr></table></figure>\n<h2 id=\"sort-方法\"><a href=\"#sort-方法\" class=\"headerlink\" title=\"sort() 方法\"></a>sort() 方法</h2><p>用于对数组的元素进行排序<br>如果想按照其他标准进行排序，就需要提供比较函数，该函数要比较两个值，然后返回一个用于说明这两个值的相对顺序的数字。<br>比较函数应该具有两个参数 a 和 b，其返回值如下： </p>\n<ul>\n<li>若 a 小于 b，在排序后的数组中a应该出现在b之前，则返回一个小于0的值。那么 a 会被排列到 b 之前</li>\n<li>若 a 等于 b，则返回 0。 </li>\n<li>若 a 大于 b，则返回一个大于 0 的值。b 会被排列到 a 之前<br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\">参考资料</a><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">52010</span>,<span class=\"number\">3001</span>,<span class=\"number\">20</span>,<span class=\"number\">123</span>]</div><div class=\"line\">    arr.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(a &lt; b)&#123;<span class=\"keyword\">return</span> <span class=\"number\">-1</span>;&#125;<span class=\"comment\">// a 会被排列到 b 之前</span></div><div class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a &gt; b)&#123;<span class=\"keyword\">return</span> <span class=\"number\">1</span>;&#125;<span class=\"comment\">// b 会被排列到 a 之前</span></div><div class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a == b)&#123;<span class=\"keyword\">return</span> <span class=\"number\">0</span>;&#125;<span class=\"comment\">//此时不排序</span></div><div class=\"line\">    &#125;)</div><div class=\"line\"></div><div class=\"line\">    data.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> a[<span class=\"number\">1</span>] - b[<span class=\"number\">1</span>];<span class=\"comment\">//升序排列</span></div><div class=\"line\">    &#125;)</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"jq\"><a href=\"#jq\" class=\"headerlink\" title=\"jq\"></a>jq</h2><h3 id=\"siblings-方法\"><a href=\"#siblings-方法\" class=\"headerlink\" title=\"siblings()方法\"></a>siblings()方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(<span class=\"string\">'#navli'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123; $(<span class=\"keyword\">this</span>).addClass(<span class=\"string\">'active'</span>).siblings().removeClass(<span class=\"string\">'active'</span>); &#125;);<span class=\"comment\">//当前元素添加active样式，同辈元素删除active样式</span></div></pre></td></tr></table></figure>\n<h1 id=\"SetTimeout与setInterval区别\"><a href=\"#SetTimeout与setInterval区别\" class=\"headerlink\" title=\"SetTimeout与setInterval区别\"></a>SetTimeout与setInterval区别</h1><ul>\n<li>setTimeout   在执行时,是在载入后延迟指定时间后,去执行一次表达式,仅执行一次</li>\n<li>setInterval 在执行时,它从载入后,每隔指定的时间就执行一次表达式</li>\n</ul>\n<p>setTimeout (表达式,延时时间)<br>setInterval(表达式,交互时间)<br>延时时间/交互时间是以豪秒为单位的(1000ms=1s)<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">run</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 其他代码</span></div><div class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        run();</div><div class=\"line\">    &#125;, <span class=\"number\">10000</span>);</div><div class=\"line\">&#125;</div><div class=\"line\">run();</div></pre></td></tr></table></figure></p>\n<p>以上面的代码来说, 虽然设置的是10s执行一次, 但是实际时间却是需要<code>// 其他代码的执行时间</code>来确定<br>即setTimeout的间隔时间是, <code>// 其他代码执行时间</code> + 10s</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    run();</div><div class=\"line\">&#125;, <span class=\"number\">10000</span>);</div></pre></td></tr></table></figure>\n<p>而setInterval, 不会有上面的问题, 但是如果run()的执行时间, 操作大于10s, 那么甚至可能跳过任务<br><a href=\"https://segmentfault.com/q/1010000005989491\">参考资料</a></p>\n<hr>\n<h1 id=\"有关JS的面试题\"><a href=\"#有关JS的面试题\" class=\"headerlink\" title=\"有关JS的面试题\"></a>有关JS的面试题</h1><h2 id=\"删除数组内重复内容\"><a href=\"#删除数组内重复内容\" class=\"headerlink\" title=\"删除数组内重复内容\"></a>删除数组内重复内容</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr=[<span class=\"number\">7</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"string\">\"abc\"</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>,<span class=\"number\">3</span>,<span class=\"number\">25</span>,<span class=\"number\">4</span>,<span class=\"string\">\"abc\"</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deletRepeat</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> renArray=[];<span class=\"comment\">//空数组用来存储删除重复内容后的数组</span></div><div class=\"line\">    <span class=\"keyword\">var</span> obj=&#123;&#125;;<span class=\"comment\">//创建一个空对象</span></div><div class=\"line\">    <span class=\"keyword\">var</span> index = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;arr.length;i++)&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(obj[arr[i]]==<span class=\"literal\">undefined</span>)&#123;<span class=\"comment\">//当对象中没有对应的内容时返回undefined</span></div><div class=\"line\">            renArray[index]=arr[i];</div><div class=\"line\">            index++;</div><div class=\"line\">            obj[arr[i]]=<span class=\"number\">1</span>;<span class=\"comment\">//为当前对象添加一个值为1</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(obj[arr[i]]==<span class=\"number\">1</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">continue</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> renArray;</div><div class=\"line\">&#125;</div><div class=\"line\">alert(deletRepeat(arr));</div></pre></td></tr></table></figure>\n<h2 id=\"数组的随机排序\"><a href=\"#数组的随机排序\" class=\"headerlink\" title=\"数组的随机排序\"></a>数组的随机排序</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>]; </div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//方法一：</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randSort1</span>(<span class=\"params\">arr</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>,len = arr.length;i &lt; len; i++ )&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> rand = <span class=\"built_in\">parseInt</span>(<span class=\"built_in\">Math</span>.random()*len);</div><div class=\"line\">        <span class=\"keyword\">var</span> temp = arr[rand];</div><div class=\"line\">        arr[rand] = arr[i];</div><div class=\"line\">        arr[i] = temp;</div><div class=\"line\">        &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> arr;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(randSort1(arr));</div><div class=\"line\"><span class=\"comment\">//方法二:</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">randSort2</span>(<span class=\"params\">arr</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> mixedArray = [];</div><div class=\"line\">    <span class=\"keyword\">while</span>(arr.length &gt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> randomIndex = <span class=\"built_in\">parseInt</span>(<span class=\"built_in\">Math</span>.random()*arr.length);</div><div class=\"line\">        mixedArray.push(arr[randomIndex]);</div><div class=\"line\">        arr.splice(randomIndex, <span class=\"number\">1</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> mixedArray;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(randSort2(arr));</div><div class=\"line\"><span class=\"comment\">//方法三:  </span></div><div class=\"line\">    arr.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.random() - <span class=\"number\">0.5</span>;</div><div class=\"line\">    &#125;)</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(arr);</div></pre></td></tr></table></figure>\n<h1 id=\"一个有意思的题目：\"><a href=\"#一个有意思的题目：\" class=\"headerlink\" title=\"一个有意思的题目：\"></a>一个有意思的题目：</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Foo</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; alert (<span class=\"number\">1</span>); &#125;;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">Foo.getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; alert (<span class=\"number\">2</span>);&#125;;</div><div class=\"line\">Foo.prototype.getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; alert (<span class=\"number\">3</span>);&#125;;</div><div class=\"line\"><span class=\"keyword\">var</span> getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; alert (<span class=\"number\">4</span>);&#125;;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>) </span>&#123; alert (<span class=\"number\">5</span>);&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//请写出以下输出结果：</span></div><div class=\"line\">Foo.getName();<span class=\"comment\">//2</span></div><div class=\"line\">getName();<span class=\"comment\">//4</span></div><div class=\"line\">Foo().getName();<span class=\"comment\">//1</span></div><div class=\"line\">getName();<span class=\"comment\">//1</span></div><div class=\"line\"><span class=\"keyword\">new</span> Foo.getName();<span class=\"comment\">//2</span></div><div class=\"line\"><span class=\"keyword\">new</span> Foo().getName();<span class=\"comment\">//3</span></div><div class=\"line\"><span class=\"keyword\">new</span> <span class=\"keyword\">new</span> Foo().getName();<span class=\"comment\">//3</span></div></pre></td></tr></table></figure>\n<p><a href=\"http://www.cnblogs.com/xxcanghai/p/5189353.html\">参考资料</a></p>"},{"title":"本地开发公众号(测试号)","date":"2017-10-23T03:48:08.000Z","keywords":"公众号 微信","_content":">微信开发全过程(node)\n\n# 本地进行微信公众号的开发和调试\n\n最开始是放在个人服务器上的。但是每次测试时部署麻烦，后来尝试使用[natapp.cn](https://natapp.cn)通过内网穿透实现本地测试。\n\n注册后，可以尝试先使用免费的。[网站自带教程点击这里](https://natapp.cn/article/natapp_newbie)\n\n由于我是mac电脑 使用natapp需要先授权`chmod a+x natapp`然后运行`./natapp`(推荐使用`config.ini`方式，配置好`authtoken`，放在同级目录下即可)\n\n链接时遇到一直链接不上服务器的问题，仔细看了下教程，应该是DNS问题，修改本地DNS为阿里云公共DNS：`223.5.5.5` `223.6.6.6`后，成功链接。\n\n# 账号链接(测试号)\n\n## 微信接口配置信息\n\nURL：填写服务器地址(需有appid信息相符才能验证成功)\nToken：任意填写(后面的配置需与填写的一致)\n\n## 创建项目\n开发语言：node.js\n开发框架：express，express教程参考[官网](http://expressjs.com/)\n插件：[wechat](https://github.com/node-webot/wechat)、[wechat-api](https://github.com/node-webot/wechat-api)\n\n## 建立接口链接\n### 创建路由\n<!--  more  -->\n由于是在express基础上编程，首先在routes文件夹下添加wechat.js路由文件\n``` javascript\nvar express = require('express');\nvar router = express.Router();\nvar wechat = require('wechat');//<---引入wechat插件\n\nvar config = {\n  token : 'you token',\n  appid : 'you appid',\n  appsecret :'you appsecret',\n  encodingAESKey : ''\n};\n\nrouter.use(express.query());\n\nrouter.use('/', wechat(config, function(req, res, next) {\n    console.log(req.weixin);\n    var message = req.weixin;\n    //文本\n    if (message.Content === '1') {\n\n        res.reply('hehe');\n    }\n\n}));\n\nmodule.exports = router;\n```\n### app.js修改\n``` javascript\nvar express = require('express');\nvar path = require('path');\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\n\nvar index = require('./routes/index');\nvar users = require('./routes/users');\nvar wechat = require('./routes/wechat');// <-- 增加wechat地址\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\n\n// uncomment after placing your favicon in /public\n// app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', index);\napp.use('/users', users);\n// 调用微信接口\napp.use('/wechat', wechat);// <-- 调用微信接口\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n```\n改造完成后运行程序，建立连接。配置完成。\n\n# 菜单创建(wechar-api使用)\n## 根目录下创建config.json文件\n存储基本数据<span style=\"color: red;\">（注：注释内容务必删除，json不支持注释功能）</span>\n``` json\n{\n    \"token\":\"youtoken\",\n    \"appID\": \"youappID\",\n    \"appSecret\": \"youappSecret\",\n    \"encodingAESKey\": \"\",\n      \"menu\": {// 菜单内容，微信详细数据参考管方文档 \n        \"button\": [\n            {\n                \"type\": \"click\",\n                \"name\": \"1\",\n                \"key\": \"V1001_TODAY_MUSIC\"\n            },\n            {\n              \"name\":\"2\",\n              \"sub_button\": [\n                  {\n                    \"type\": \"click\",\n                    \"name\": \"2.1\",\n                    \"key\": \"V1001_TODAY_SHARE\"\n                  },\n                  {\n                    \"type\": \"click\",\n                    \"name\": \"2.2\",\n                    \"key\": \"V1001_STU_SHARE\"\n                  }\n              ]\n            },\n            {\n                \"type\": \"click\",\n                \"name\": \"3\",\n                \"key\": \"V1001_MY_STUDAY\"\n            }\n        ]\n    }\n}\n```\n\n## 改造wechat.js\n``` javascript\nvar express = require('express');  \nvar router = express.Router();\n// 引入微信插件\nvar wechat = require('wechat');\nvar WechatAPI = require('wechat-api');//<--调用wechat-api\n// 引入config\nvar configApi = require('../config.json');//<--调用config\n  \nvar config = configApi;\n  \nrouter.use(express.query());\n// use wechat-api\nvar api = new WechatAPI(config.appID, config.appSecret);//<--创建api实例\n\nvar menu = configApi.menu;//<--提取config中的菜单内容\n  \nrouter.use('/', wechat(config, function(req, res, next) {  \n  console.log(req.weixin);  \n  var message = req.weixin;  \n  //文本  \n  if (message.Content === '1') {  \n\n      res.reply('hehe');  \n  }\n  // 第一次关注发送欢迎信息\n  if(message.MsgType === 'event' && message.Event === 'subscribe') {\n\n    res.reply('Hello world');\n  }\n}));\n// 创建微信菜单\napi.createMenu(menu, function(err, result){\n     console.log(result);\n     console.log(err);\n    });\nmodule.exports = router;\n```\n\n## 项目目录\n![项目目录](https://user-images.githubusercontent.com/7655291/32205958-4ff84272-bdc0-11e7-97d9-fcb2c23dccba.jpg)\n\n","source":"_posts/natapp.md","raw":"---\ntitle: 本地开发公众号(测试号)\ndate: 2017-10-23 11:48:08\ntags: 微信开发\ncategories: wechat\nkeywords: 公众号 微信\n---\n>微信开发全过程(node)\n\n# 本地进行微信公众号的开发和调试\n\n最开始是放在个人服务器上的。但是每次测试时部署麻烦，后来尝试使用[natapp.cn](https://natapp.cn)通过内网穿透实现本地测试。\n\n注册后，可以尝试先使用免费的。[网站自带教程点击这里](https://natapp.cn/article/natapp_newbie)\n\n由于我是mac电脑 使用natapp需要先授权`chmod a+x natapp`然后运行`./natapp`(推荐使用`config.ini`方式，配置好`authtoken`，放在同级目录下即可)\n\n链接时遇到一直链接不上服务器的问题，仔细看了下教程，应该是DNS问题，修改本地DNS为阿里云公共DNS：`223.5.5.5` `223.6.6.6`后，成功链接。\n\n# 账号链接(测试号)\n\n## 微信接口配置信息\n\nURL：填写服务器地址(需有appid信息相符才能验证成功)\nToken：任意填写(后面的配置需与填写的一致)\n\n## 创建项目\n开发语言：node.js\n开发框架：express，express教程参考[官网](http://expressjs.com/)\n插件：[wechat](https://github.com/node-webot/wechat)、[wechat-api](https://github.com/node-webot/wechat-api)\n\n## 建立接口链接\n### 创建路由\n<!--  more  -->\n由于是在express基础上编程，首先在routes文件夹下添加wechat.js路由文件\n``` javascript\nvar express = require('express');\nvar router = express.Router();\nvar wechat = require('wechat');//<---引入wechat插件\n\nvar config = {\n  token : 'you token',\n  appid : 'you appid',\n  appsecret :'you appsecret',\n  encodingAESKey : ''\n};\n\nrouter.use(express.query());\n\nrouter.use('/', wechat(config, function(req, res, next) {\n    console.log(req.weixin);\n    var message = req.weixin;\n    //文本\n    if (message.Content === '1') {\n\n        res.reply('hehe');\n    }\n\n}));\n\nmodule.exports = router;\n```\n### app.js修改\n``` javascript\nvar express = require('express');\nvar path = require('path');\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\n\nvar index = require('./routes/index');\nvar users = require('./routes/users');\nvar wechat = require('./routes/wechat');// <-- 增加wechat地址\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\n\n// uncomment after placing your favicon in /public\n// app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', index);\napp.use('/users', users);\n// 调用微信接口\napp.use('/wechat', wechat);// <-- 调用微信接口\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n```\n改造完成后运行程序，建立连接。配置完成。\n\n# 菜单创建(wechar-api使用)\n## 根目录下创建config.json文件\n存储基本数据<span style=\"color: red;\">（注：注释内容务必删除，json不支持注释功能）</span>\n``` json\n{\n    \"token\":\"youtoken\",\n    \"appID\": \"youappID\",\n    \"appSecret\": \"youappSecret\",\n    \"encodingAESKey\": \"\",\n      \"menu\": {// 菜单内容，微信详细数据参考管方文档 \n        \"button\": [\n            {\n                \"type\": \"click\",\n                \"name\": \"1\",\n                \"key\": \"V1001_TODAY_MUSIC\"\n            },\n            {\n              \"name\":\"2\",\n              \"sub_button\": [\n                  {\n                    \"type\": \"click\",\n                    \"name\": \"2.1\",\n                    \"key\": \"V1001_TODAY_SHARE\"\n                  },\n                  {\n                    \"type\": \"click\",\n                    \"name\": \"2.2\",\n                    \"key\": \"V1001_STU_SHARE\"\n                  }\n              ]\n            },\n            {\n                \"type\": \"click\",\n                \"name\": \"3\",\n                \"key\": \"V1001_MY_STUDAY\"\n            }\n        ]\n    }\n}\n```\n\n## 改造wechat.js\n``` javascript\nvar express = require('express');  \nvar router = express.Router();\n// 引入微信插件\nvar wechat = require('wechat');\nvar WechatAPI = require('wechat-api');//<--调用wechat-api\n// 引入config\nvar configApi = require('../config.json');//<--调用config\n  \nvar config = configApi;\n  \nrouter.use(express.query());\n// use wechat-api\nvar api = new WechatAPI(config.appID, config.appSecret);//<--创建api实例\n\nvar menu = configApi.menu;//<--提取config中的菜单内容\n  \nrouter.use('/', wechat(config, function(req, res, next) {  \n  console.log(req.weixin);  \n  var message = req.weixin;  \n  //文本  \n  if (message.Content === '1') {  \n\n      res.reply('hehe');  \n  }\n  // 第一次关注发送欢迎信息\n  if(message.MsgType === 'event' && message.Event === 'subscribe') {\n\n    res.reply('Hello world');\n  }\n}));\n// 创建微信菜单\napi.createMenu(menu, function(err, result){\n     console.log(result);\n     console.log(err);\n    });\nmodule.exports = router;\n```\n\n## 项目目录\n![项目目录](https://user-images.githubusercontent.com/7655291/32205958-4ff84272-bdc0-11e7-97d9-fcb2c23dccba.jpg)\n\n","slug":"natapp","published":1,"updated":"2017-10-31T03:21:57.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1jz000ycdonjxoznuil","content":"<blockquote>\n<p>微信开发全过程(node)</p>\n</blockquote>\n<h1 id=\"本地进行微信公众号的开发和调试\"><a href=\"#本地进行微信公众号的开发和调试\" class=\"headerlink\" title=\"本地进行微信公众号的开发和调试\"></a>本地进行微信公众号的开发和调试</h1><p>最开始是放在个人服务器上的。但是每次测试时部署麻烦，后来尝试使用<a href=\"https://natapp.cn\" target=\"_blank\" rel=\"external\">natapp.cn</a>通过内网穿透实现本地测试。</p>\n<p>注册后，可以尝试先使用免费的。<a href=\"https://natapp.cn/article/natapp_newbie\" target=\"_blank\" rel=\"external\">网站自带教程点击这里</a></p>\n<p>由于我是mac电脑 使用natapp需要先授权<code>chmod a+x natapp</code>然后运行<code>./natapp</code>(推荐使用<code>config.ini</code>方式，配置好<code>authtoken</code>，放在同级目录下即可)</p>\n<p>链接时遇到一直链接不上服务器的问题，仔细看了下教程，应该是DNS问题，修改本地DNS为阿里云公共DNS：<code>223.5.5.5</code> <code>223.6.6.6</code>后，成功链接。</p>\n<h1 id=\"账号链接-测试号\"><a href=\"#账号链接-测试号\" class=\"headerlink\" title=\"账号链接(测试号)\"></a>账号链接(测试号)</h1><h2 id=\"微信接口配置信息\"><a href=\"#微信接口配置信息\" class=\"headerlink\" title=\"微信接口配置信息\"></a>微信接口配置信息</h2><p>URL：填写服务器地址(需有appid信息相符才能验证成功)<br>Token：任意填写(后面的配置需与填写的一致)</p>\n<h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><p>开发语言：node.js<br>开发框架：express，express教程参考<a href=\"http://expressjs.com/\" target=\"_blank\" rel=\"external\">官网</a><br>插件：<a href=\"https://github.com/node-webot/wechat\" target=\"_blank\" rel=\"external\">wechat</a>、<a href=\"https://github.com/node-webot/wechat-api\" target=\"_blank\" rel=\"external\">wechat-api</a></p>\n<h2 id=\"建立接口链接\"><a href=\"#建立接口链接\" class=\"headerlink\" title=\"建立接口链接\"></a>建立接口链接</h2><h3 id=\"创建路由\"><a href=\"#创建路由\" class=\"headerlink\" title=\"创建路由\"></a>创建路由</h3><a id=\"more\"></a>\n<p>由于是在express基础上编程，首先在routes文件夹下添加wechat.js路由文件<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> router = express.Router();</div><div class=\"line\"><span class=\"keyword\">var</span> wechat = <span class=\"built_in\">require</span>(<span class=\"string\">'wechat'</span>);<span class=\"comment\">//&lt;---引入wechat插件</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> config = &#123;</div><div class=\"line\">  <span class=\"attr\">token</span> : <span class=\"string\">'you token'</span>,</div><div class=\"line\">  <span class=\"attr\">appid</span> : <span class=\"string\">'you appid'</span>,</div><div class=\"line\">  <span class=\"attr\">appsecret</span> :<span class=\"string\">'you appsecret'</span>,</div><div class=\"line\">  <span class=\"attr\">encodingAESKey</span> : <span class=\"string\">''</span></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">router.use(express.query());</div><div class=\"line\"></div><div class=\"line\">router.use(<span class=\"string\">'/'</span>, wechat(config, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(req.weixin);</div><div class=\"line\">    <span class=\"keyword\">var</span> message = req.weixin;</div><div class=\"line\">    <span class=\"comment\">//文本</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (message.Content === <span class=\"string\">'1'</span>) &#123;</div><div class=\"line\"></div><div class=\"line\">        res.reply(<span class=\"string\">'hehe'</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;));</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = router;</div></pre></td></tr></table></figure></p>\n<h3 id=\"app-js修改\"><a href=\"#app-js修改\" class=\"headerlink\" title=\"app.js修改\"></a>app.js修改</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> favicon = <span class=\"built_in\">require</span>(<span class=\"string\">'serve-favicon'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> logger = <span class=\"built_in\">require</span>(<span class=\"string\">'morgan'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> cookieParser = <span class=\"built_in\">require</span>(<span class=\"string\">'cookie-parser'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> bodyParser = <span class=\"built_in\">require</span>(<span class=\"string\">'body-parser'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> index = <span class=\"built_in\">require</span>(<span class=\"string\">'./routes/index'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> users = <span class=\"built_in\">require</span>(<span class=\"string\">'./routes/users'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> wechat = <span class=\"built_in\">require</span>(<span class=\"string\">'./routes/wechat'</span>);<span class=\"comment\">// &lt;-- 增加wechat地址</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> app = express();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// view engine setup</span></div><div class=\"line\">app.set(<span class=\"string\">'views'</span>, path.join(__dirname, <span class=\"string\">'views'</span>));</div><div class=\"line\">app.set(<span class=\"string\">'view engine'</span>, <span class=\"string\">'ejs'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// uncomment after placing your favicon in /public</span></div><div class=\"line\"><span class=\"comment\">// app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));</span></div><div class=\"line\">app.use(logger(<span class=\"string\">'dev'</span>));</div><div class=\"line\">app.use(bodyParser.json());</div><div class=\"line\">app.use(bodyParser.urlencoded(&#123; <span class=\"attr\">extended</span>: <span class=\"literal\">false</span> &#125;));</div><div class=\"line\">app.use(cookieParser());</div><div class=\"line\">app.use(express.static(path.join(__dirname, <span class=\"string\">'public'</span>)));</div><div class=\"line\"></div><div class=\"line\">app.use(<span class=\"string\">'/'</span>, index);</div><div class=\"line\">app.use(<span class=\"string\">'/users'</span>, users);</div><div class=\"line\"><span class=\"comment\">// 调用微信接口</span></div><div class=\"line\">app.use(<span class=\"string\">'/wechat'</span>, wechat);<span class=\"comment\">// &lt;-- 调用微信接口</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// catch 404 and forward to error handler</span></div><div class=\"line\">app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> err = <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Not Found'</span>);</div><div class=\"line\">  err.status = <span class=\"number\">404</span>;</div><div class=\"line\">  next(err);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// error handler</span></div><div class=\"line\">app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// set locals, only providing error in development</span></div><div class=\"line\">  res.locals.message = err.message;</div><div class=\"line\">  res.locals.error = req.app.get(<span class=\"string\">'env'</span>) === <span class=\"string\">'development'</span> ? err : &#123;&#125;;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// render the error page</span></div><div class=\"line\">  res.status(err.status || <span class=\"number\">500</span>);</div><div class=\"line\">  res.render(<span class=\"string\">'error'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = app;</div></pre></td></tr></table></figure>\n<p>改造完成后运行程序，建立连接。配置完成。</p>\n<h1 id=\"菜单创建-wechar-api使用\"><a href=\"#菜单创建-wechar-api使用\" class=\"headerlink\" title=\"菜单创建(wechar-api使用)\"></a>菜单创建(wechar-api使用)</h1><h2 id=\"根目录下创建config-json文件\"><a href=\"#根目录下创建config-json文件\" class=\"headerlink\" title=\"根目录下创建config.json文件\"></a>根目录下创建config.json文件</h2><p>存储基本数据<span style=\"color: red;\">（注：注释内容务必删除，json不支持注释功能）</span><br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    \"token\":\"youtoken\",</div><div class=\"line\">    \"appID\": \"youappID\",</div><div class=\"line\">    \"appSecret\": \"youappSecret\",</div><div class=\"line\">    \"encodingAESKey\": \"\",</div><div class=\"line\">      \"menu\": &#123;// 菜单内容，微信详细数据参考管方文档 </div><div class=\"line\">        \"button\": [</div><div class=\"line\">            &#123;</div><div class=\"line\">                \"type\": \"click\",</div><div class=\"line\">                \"name\": \"1\",</div><div class=\"line\">                \"key\": \"V1001_TODAY_MUSIC\"</div><div class=\"line\">            &#125;,</div><div class=\"line\">            &#123;</div><div class=\"line\">              \"name\":\"2\",</div><div class=\"line\">              \"sub_button\": [</div><div class=\"line\">                  &#123;</div><div class=\"line\">                    \"type\": \"click\",</div><div class=\"line\">                    \"name\": \"2.1\",</div><div class=\"line\">                    \"key\": \"V1001_TODAY_SHARE\"</div><div class=\"line\">                  &#125;,</div><div class=\"line\">                  &#123;</div><div class=\"line\">                    \"type\": \"click\",</div><div class=\"line\">                    \"name\": \"2.2\",</div><div class=\"line\">                    \"key\": \"V1001_STU_SHARE\"</div><div class=\"line\">                  &#125;</div><div class=\"line\">              ]</div><div class=\"line\">            &#125;,</div><div class=\"line\">            &#123;</div><div class=\"line\">                \"type\": \"click\",</div><div class=\"line\">                \"name\": \"3\",</div><div class=\"line\">                \"key\": \"V1001_MY_STUDAY\"</div><div class=\"line\">            &#125;</div><div class=\"line\">        ]</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"改造wechat-js\"><a href=\"#改造wechat-js\" class=\"headerlink\" title=\"改造wechat.js\"></a>改造wechat.js</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);  </div><div class=\"line\"><span class=\"keyword\">var</span> router = express.Router();</div><div class=\"line\"><span class=\"comment\">// 引入微信插件</span></div><div class=\"line\"><span class=\"keyword\">var</span> wechat = <span class=\"built_in\">require</span>(<span class=\"string\">'wechat'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> WechatAPI = <span class=\"built_in\">require</span>(<span class=\"string\">'wechat-api'</span>);<span class=\"comment\">//&lt;--调用wechat-api</span></div><div class=\"line\"><span class=\"comment\">// 引入config</span></div><div class=\"line\"><span class=\"keyword\">var</span> configApi = <span class=\"built_in\">require</span>(<span class=\"string\">'../config.json'</span>);<span class=\"comment\">//&lt;--调用config</span></div><div class=\"line\">  </div><div class=\"line\"><span class=\"keyword\">var</span> config = configApi;</div><div class=\"line\">  </div><div class=\"line\">router.use(express.query());</div><div class=\"line\"><span class=\"comment\">// use wechat-api</span></div><div class=\"line\"><span class=\"keyword\">var</span> api = <span class=\"keyword\">new</span> WechatAPI(config.appID, config.appSecret);<span class=\"comment\">//&lt;--创建api实例</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> menu = configApi.menu;<span class=\"comment\">//&lt;--提取config中的菜单内容</span></div><div class=\"line\">  </div><div class=\"line\">router.use(<span class=\"string\">'/'</span>, wechat(config, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;  </div><div class=\"line\">  <span class=\"built_in\">console</span>.log(req.weixin);  </div><div class=\"line\">  <span class=\"keyword\">var</span> message = req.weixin;  </div><div class=\"line\">  <span class=\"comment\">//文本  </span></div><div class=\"line\">  <span class=\"keyword\">if</span> (message.Content === <span class=\"string\">'1'</span>) &#123;  </div><div class=\"line\"></div><div class=\"line\">      res.reply(<span class=\"string\">'hehe'</span>);  </div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"comment\">// 第一次关注发送欢迎信息</span></div><div class=\"line\">  <span class=\"keyword\">if</span>(message.MsgType === <span class=\"string\">'event'</span> &amp;&amp; message.Event === <span class=\"string\">'subscribe'</span>) &#123;</div><div class=\"line\"></div><div class=\"line\">    res.reply(<span class=\"string\">'Hello world'</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;));</div><div class=\"line\"><span class=\"comment\">// 创建微信菜单</span></div><div class=\"line\">api.createMenu(menu, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, result</span>)</span>&#123;</div><div class=\"line\">     <span class=\"built_in\">console</span>.log(result);</div><div class=\"line\">     <span class=\"built_in\">console</span>.log(err);</div><div class=\"line\">    &#125;);</div><div class=\"line\"><span class=\"built_in\">module</span>.exports = router;</div></pre></td></tr></table></figure>\n<h2 id=\"项目目录\"><a href=\"#项目目录\" class=\"headerlink\" title=\"项目目录\"></a>项目目录</h2><p><img src=\"https://user-images.githubusercontent.com/7655291/32205958-4ff84272-bdc0-11e7-97d9-fcb2c23dccba.jpg\" alt=\"项目目录\"></p>\n","excerpt":"<blockquote>\n<p>微信开发全过程(node)</p>\n</blockquote>\n<h1 id=\"本地进行微信公众号的开发和调试\"><a href=\"#本地进行微信公众号的开发和调试\" class=\"headerlink\" title=\"本地进行微信公众号的开发和调试\"></a>本地进行微信公众号的开发和调试</h1><p>最开始是放在个人服务器上的。但是每次测试时部署麻烦，后来尝试使用<a href=\"https://natapp.cn\">natapp.cn</a>通过内网穿透实现本地测试。</p>\n<p>注册后，可以尝试先使用免费的。<a href=\"https://natapp.cn/article/natapp_newbie\">网站自带教程点击这里</a></p>\n<p>由于我是mac电脑 使用natapp需要先授权<code>chmod a+x natapp</code>然后运行<code>./natapp</code>(推荐使用<code>config.ini</code>方式，配置好<code>authtoken</code>，放在同级目录下即可)</p>\n<p>链接时遇到一直链接不上服务器的问题，仔细看了下教程，应该是DNS问题，修改本地DNS为阿里云公共DNS：<code>223.5.5.5</code> <code>223.6.6.6</code>后，成功链接。</p>\n<h1 id=\"账号链接-测试号\"><a href=\"#账号链接-测试号\" class=\"headerlink\" title=\"账号链接(测试号)\"></a>账号链接(测试号)</h1><h2 id=\"微信接口配置信息\"><a href=\"#微信接口配置信息\" class=\"headerlink\" title=\"微信接口配置信息\"></a>微信接口配置信息</h2><p>URL：填写服务器地址(需有appid信息相符才能验证成功)<br>Token：任意填写(后面的配置需与填写的一致)</p>\n<h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><p>开发语言：node.js<br>开发框架：express，express教程参考<a href=\"http://expressjs.com/\">官网</a><br>插件：<a href=\"https://github.com/node-webot/wechat\">wechat</a>、<a href=\"https://github.com/node-webot/wechat-api\">wechat-api</a></p>\n<h2 id=\"建立接口链接\"><a href=\"#建立接口链接\" class=\"headerlink\" title=\"建立接口链接\"></a>建立接口链接</h2><h3 id=\"创建路由\"><a href=\"#创建路由\" class=\"headerlink\" title=\"创建路由\"></a>创建路由</h3>","more":"<p>由于是在express基础上编程，首先在routes文件夹下添加wechat.js路由文件<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> router = express.Router();</div><div class=\"line\"><span class=\"keyword\">var</span> wechat = <span class=\"built_in\">require</span>(<span class=\"string\">'wechat'</span>);<span class=\"comment\">//&lt;---引入wechat插件</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> config = &#123;</div><div class=\"line\">  <span class=\"attr\">token</span> : <span class=\"string\">'you token'</span>,</div><div class=\"line\">  <span class=\"attr\">appid</span> : <span class=\"string\">'you appid'</span>,</div><div class=\"line\">  <span class=\"attr\">appsecret</span> :<span class=\"string\">'you appsecret'</span>,</div><div class=\"line\">  <span class=\"attr\">encodingAESKey</span> : <span class=\"string\">''</span></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">router.use(express.query());</div><div class=\"line\"></div><div class=\"line\">router.use(<span class=\"string\">'/'</span>, wechat(config, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(req.weixin);</div><div class=\"line\">    <span class=\"keyword\">var</span> message = req.weixin;</div><div class=\"line\">    <span class=\"comment\">//文本</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (message.Content === <span class=\"string\">'1'</span>) &#123;</div><div class=\"line\"></div><div class=\"line\">        res.reply(<span class=\"string\">'hehe'</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;));</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = router;</div></pre></td></tr></table></figure></p>\n<h3 id=\"app-js修改\"><a href=\"#app-js修改\" class=\"headerlink\" title=\"app.js修改\"></a>app.js修改</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> favicon = <span class=\"built_in\">require</span>(<span class=\"string\">'serve-favicon'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> logger = <span class=\"built_in\">require</span>(<span class=\"string\">'morgan'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> cookieParser = <span class=\"built_in\">require</span>(<span class=\"string\">'cookie-parser'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> bodyParser = <span class=\"built_in\">require</span>(<span class=\"string\">'body-parser'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> index = <span class=\"built_in\">require</span>(<span class=\"string\">'./routes/index'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> users = <span class=\"built_in\">require</span>(<span class=\"string\">'./routes/users'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> wechat = <span class=\"built_in\">require</span>(<span class=\"string\">'./routes/wechat'</span>);<span class=\"comment\">// &lt;-- 增加wechat地址</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> app = express();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// view engine setup</span></div><div class=\"line\">app.set(<span class=\"string\">'views'</span>, path.join(__dirname, <span class=\"string\">'views'</span>));</div><div class=\"line\">app.set(<span class=\"string\">'view engine'</span>, <span class=\"string\">'ejs'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// uncomment after placing your favicon in /public</span></div><div class=\"line\"><span class=\"comment\">// app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));</span></div><div class=\"line\">app.use(logger(<span class=\"string\">'dev'</span>));</div><div class=\"line\">app.use(bodyParser.json());</div><div class=\"line\">app.use(bodyParser.urlencoded(&#123; <span class=\"attr\">extended</span>: <span class=\"literal\">false</span> &#125;));</div><div class=\"line\">app.use(cookieParser());</div><div class=\"line\">app.use(express.static(path.join(__dirname, <span class=\"string\">'public'</span>)));</div><div class=\"line\"></div><div class=\"line\">app.use(<span class=\"string\">'/'</span>, index);</div><div class=\"line\">app.use(<span class=\"string\">'/users'</span>, users);</div><div class=\"line\"><span class=\"comment\">// 调用微信接口</span></div><div class=\"line\">app.use(<span class=\"string\">'/wechat'</span>, wechat);<span class=\"comment\">// &lt;-- 调用微信接口</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// catch 404 and forward to error handler</span></div><div class=\"line\">app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> err = <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Not Found'</span>);</div><div class=\"line\">  err.status = <span class=\"number\">404</span>;</div><div class=\"line\">  next(err);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// error handler</span></div><div class=\"line\">app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, req, res, next</span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// set locals, only providing error in development</span></div><div class=\"line\">  res.locals.message = err.message;</div><div class=\"line\">  res.locals.error = req.app.get(<span class=\"string\">'env'</span>) === <span class=\"string\">'development'</span> ? err : &#123;&#125;;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// render the error page</span></div><div class=\"line\">  res.status(err.status || <span class=\"number\">500</span>);</div><div class=\"line\">  res.render(<span class=\"string\">'error'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = app;</div></pre></td></tr></table></figure>\n<p>改造完成后运行程序，建立连接。配置完成。</p>\n<h1 id=\"菜单创建-wechar-api使用\"><a href=\"#菜单创建-wechar-api使用\" class=\"headerlink\" title=\"菜单创建(wechar-api使用)\"></a>菜单创建(wechar-api使用)</h1><h2 id=\"根目录下创建config-json文件\"><a href=\"#根目录下创建config-json文件\" class=\"headerlink\" title=\"根目录下创建config.json文件\"></a>根目录下创建config.json文件</h2><p>存储基本数据<span style=\"color: red;\">（注：注释内容务必删除，json不支持注释功能）</span><br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    \"token\":\"youtoken\",</div><div class=\"line\">    \"appID\": \"youappID\",</div><div class=\"line\">    \"appSecret\": \"youappSecret\",</div><div class=\"line\">    \"encodingAESKey\": \"\",</div><div class=\"line\">      \"menu\": &#123;// 菜单内容，微信详细数据参考管方文档 </div><div class=\"line\">        \"button\": [</div><div class=\"line\">            &#123;</div><div class=\"line\">                \"type\": \"click\",</div><div class=\"line\">                \"name\": \"1\",</div><div class=\"line\">                \"key\": \"V1001_TODAY_MUSIC\"</div><div class=\"line\">            &#125;,</div><div class=\"line\">            &#123;</div><div class=\"line\">              \"name\":\"2\",</div><div class=\"line\">              \"sub_button\": [</div><div class=\"line\">                  &#123;</div><div class=\"line\">                    \"type\": \"click\",</div><div class=\"line\">                    \"name\": \"2.1\",</div><div class=\"line\">                    \"key\": \"V1001_TODAY_SHARE\"</div><div class=\"line\">                  &#125;,</div><div class=\"line\">                  &#123;</div><div class=\"line\">                    \"type\": \"click\",</div><div class=\"line\">                    \"name\": \"2.2\",</div><div class=\"line\">                    \"key\": \"V1001_STU_SHARE\"</div><div class=\"line\">                  &#125;</div><div class=\"line\">              ]</div><div class=\"line\">            &#125;,</div><div class=\"line\">            &#123;</div><div class=\"line\">                \"type\": \"click\",</div><div class=\"line\">                \"name\": \"3\",</div><div class=\"line\">                \"key\": \"V1001_MY_STUDAY\"</div><div class=\"line\">            &#125;</div><div class=\"line\">        ]</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"改造wechat-js\"><a href=\"#改造wechat-js\" class=\"headerlink\" title=\"改造wechat.js\"></a>改造wechat.js</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);  </div><div class=\"line\"><span class=\"keyword\">var</span> router = express.Router();</div><div class=\"line\"><span class=\"comment\">// 引入微信插件</span></div><div class=\"line\"><span class=\"keyword\">var</span> wechat = <span class=\"built_in\">require</span>(<span class=\"string\">'wechat'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> WechatAPI = <span class=\"built_in\">require</span>(<span class=\"string\">'wechat-api'</span>);<span class=\"comment\">//&lt;--调用wechat-api</span></div><div class=\"line\"><span class=\"comment\">// 引入config</span></div><div class=\"line\"><span class=\"keyword\">var</span> configApi = <span class=\"built_in\">require</span>(<span class=\"string\">'../config.json'</span>);<span class=\"comment\">//&lt;--调用config</span></div><div class=\"line\">  </div><div class=\"line\"><span class=\"keyword\">var</span> config = configApi;</div><div class=\"line\">  </div><div class=\"line\">router.use(express.query());</div><div class=\"line\"><span class=\"comment\">// use wechat-api</span></div><div class=\"line\"><span class=\"keyword\">var</span> api = <span class=\"keyword\">new</span> WechatAPI(config.appID, config.appSecret);<span class=\"comment\">//&lt;--创建api实例</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> menu = configApi.menu;<span class=\"comment\">//&lt;--提取config中的菜单内容</span></div><div class=\"line\">  </div><div class=\"line\">router.use(<span class=\"string\">'/'</span>, wechat(config, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;  </div><div class=\"line\">  <span class=\"built_in\">console</span>.log(req.weixin);  </div><div class=\"line\">  <span class=\"keyword\">var</span> message = req.weixin;  </div><div class=\"line\">  <span class=\"comment\">//文本  </span></div><div class=\"line\">  <span class=\"keyword\">if</span> (message.Content === <span class=\"string\">'1'</span>) &#123;  </div><div class=\"line\"></div><div class=\"line\">      res.reply(<span class=\"string\">'hehe'</span>);  </div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"comment\">// 第一次关注发送欢迎信息</span></div><div class=\"line\">  <span class=\"keyword\">if</span>(message.MsgType === <span class=\"string\">'event'</span> &amp;&amp; message.Event === <span class=\"string\">'subscribe'</span>) &#123;</div><div class=\"line\"></div><div class=\"line\">    res.reply(<span class=\"string\">'Hello world'</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;));</div><div class=\"line\"><span class=\"comment\">// 创建微信菜单</span></div><div class=\"line\">api.createMenu(menu, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, result</span>)</span>&#123;</div><div class=\"line\">     <span class=\"built_in\">console</span>.log(result);</div><div class=\"line\">     <span class=\"built_in\">console</span>.log(err);</div><div class=\"line\">    &#125;);</div><div class=\"line\"><span class=\"built_in\">module</span>.exports = router;</div></pre></td></tr></table></figure>\n<h2 id=\"项目目录\"><a href=\"#项目目录\" class=\"headerlink\" title=\"项目目录\"></a>项目目录</h2><p><img src=\"https://user-images.githubusercontent.com/7655291/32205958-4ff84272-bdc0-11e7-97d9-fcb2c23dccba.jpg\" alt=\"项目目录\"></p>"},{"title":"nginx安装","date":"2018-01-06T09:51:49.000Z","keywords":"nginx liunx","_content":">安装nginx\n\n\n# 安装开发环境\n> Ububtu16.4安装方法：\n\n安装g++只需要一条命令就可以了：\n``` bash\n$ sudo apt-get install build-essential #除了g++外，这条命令还会安装libc6-dev，make等好东东，很方便\n```\n> CentOS7安装方法：\n\n`yum install gcc-c++`\n\n## pcre zlib ssl安装\n一般我们都需要先装pcre, zlib，前者为了重写rewrite，后者为了gzip压缩。\n\n1.选定目录\n`cd /usr/local/src`以下下载文件均放置在次文件夹下 请使用sudo权限\n### pcre\n\n[下载地址:ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/](ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/)\n\n> Ububtu16.4安装方法：\n\n``` bash\nwget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.41.tar.gz\ntar -zxvf pcre-8.41.tar.gz\ncd pcre-8.34\n./configure\nmake\nmake install\n```\n<!--  more  -->\n> CentOS7安装方法：\n\n`yum install -y pcre pcre-devel`\n\n### zlib\n[下载地址:http://zlib.net/](http://zlib.net/)\n> Ububtu16.4安装方法：\n\n``` bash\nwget http://zlib.net/zlib-1.2.11.tar.gz\ntar -zxvf zlib-1.2.11.tar.gz\ncd zlib-1.2.11\n./configure\nmake\nmake install\n```\n\n > CentOS7安装方法：\n\n `yum install -y zlib zlib-devel`\n\n### ssl (不要make 否则有坑)\n[下载地址:https://www.openssl.org/source/](https://www.openssl.org/source/)\n\n> Ububtu16.4安装方法：\n\n``` bash\nwget https://www.openssl.org/source/openssl-1.0.2n.tar.gz\ntar -zxvf openssl-1.0.2n.tar.gz\n\napt-get install openssl\napt-get install libssl-dev\n```\n\n> CentOS7安装方法：\n\n`yum install -y openssl openssl-devel`\n\n### nginx安装(我是直接安装的)\n[下载地址:http://nginx.org/en/download.html](http://nginx.org/en/download.html)\n> Ububtu16.4安装方法：\n\n``` bash\nwget http://nginx.org/download/nginx-1.12.2.tar.gz\ntar -zxvf nginx-1.12.2.tar.gz\ncd nginx-1.12.2\n./configure\nmake\nmake install\n```\n> CentOS7安装方法：\n\n``` bash\nwget -c http://nginx.org/download/nginx-1.12.2.tar.gz\ntar -zxvf nginx-1.12.2.tar.gz\ncd nginx-1.12.2\n./configure\nmake\nmake install\n```\n\n### 安装成功\n进入/usr/local/nginx目录\n``` bash\nclient_body_temp  fastcgi_temp  logs        sbin       uwsgi_temp\nconf              html          proxy_temp  scgi_temp\n```\n\n### 启动\n进入/sbin `请使用sudo权限`\n启动：`./nginx`\n停止：`./nginx -s stop`\n重启：`./nginx -s reload`\n\n### VUE NGINX 服务器配置\n``` bash\n    server {\n        listen       8089;\n        server_name  localhost;\n        root   E:/git/Dofar/dist/;#文件地址\n        index  index.html index.htm;#文件指向页面\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n             try_files $uri $uri/ @router;#前端路由导航\n             index index.html;\n         }\n\n        location @router {\n            rewrite ^.*$ /index.html last;#前端路由导航\n    }\n```\n### 负载均衡策略\n\nnginx可以根据客户端IP进行负载均衡，在upstream里设置ip_hash，就可以针对同一个C类地址段中的客户端选择同一个后端服务器，除非那个后端服务器宕了才会换一个。\n\nnginx的upstream目前支持的5种方式的分配\n\n#### 1、轮询（默认）\n每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。\n>upstream backserver {\nserver 192.168.0.14;\nserver 192.168.0.15;\n}\n\n#### 2、指定权重\n指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。\n>upstream backserver {\nserver 192.168.0.14 weight=10;\nserver 192.168.0.15 weight=10;\n}\n\n#### 3、IP绑定 ip_hash\n每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。\n>upstream backserver {\nip_hash;\nserver 192.168.0.14:88;\nserver 192.168.0.15:80;\n}\n\n#### 4、fair（第三方）\n按后端服务器的响应时间来分配请求，响应时间短的优先分配。\n>upstream backserver {\nserver server1;\nserver server2;\nfair;\n}\n\n#### 5、url_hash（第三方）\n按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。\n>upstream backserver {\nserver squid1:3128;\nserver squid2:3128;\nhash $request_uri;\nhash_method crc32;\n}\n\n在需要使用负载均衡的server中增加\n\n>upstream backserver{\nip_hash;\nserver 127.0.0.1:9090 down; (down 表示单前的server暂时不参与负载)\nserver 127.0.0.1:8080 weight=2; (weight 默认为1.weight越大，负载的权重就越大)\nserver 127.0.0.1:6060;\nserver 127.0.0.1:7070 backup; (其它所有的非backup机器down或者忙的时候，请求backup机器)\n}\nlocation / {\n    proxy_pass http://backserver/ ;\n}\n\nmax_fails ：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream 模块定义的错误\nfail_timeout:max_fails次失败后，暂停的时间\n\n\n# 参考文档\n[Nginx安装](http://www.nginx.cn/install)","source":"_posts/nginx.md","raw":"---\ntitle: nginx安装\ndate: 2018-01-06 17:51:49\ntags: nginx\ncategories:\nkeywords: nginx liunx\n---\n>安装nginx\n\n\n# 安装开发环境\n> Ububtu16.4安装方法：\n\n安装g++只需要一条命令就可以了：\n``` bash\n$ sudo apt-get install build-essential #除了g++外，这条命令还会安装libc6-dev，make等好东东，很方便\n```\n> CentOS7安装方法：\n\n`yum install gcc-c++`\n\n## pcre zlib ssl安装\n一般我们都需要先装pcre, zlib，前者为了重写rewrite，后者为了gzip压缩。\n\n1.选定目录\n`cd /usr/local/src`以下下载文件均放置在次文件夹下 请使用sudo权限\n### pcre\n\n[下载地址:ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/](ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/)\n\n> Ububtu16.4安装方法：\n\n``` bash\nwget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.41.tar.gz\ntar -zxvf pcre-8.41.tar.gz\ncd pcre-8.34\n./configure\nmake\nmake install\n```\n<!--  more  -->\n> CentOS7安装方法：\n\n`yum install -y pcre pcre-devel`\n\n### zlib\n[下载地址:http://zlib.net/](http://zlib.net/)\n> Ububtu16.4安装方法：\n\n``` bash\nwget http://zlib.net/zlib-1.2.11.tar.gz\ntar -zxvf zlib-1.2.11.tar.gz\ncd zlib-1.2.11\n./configure\nmake\nmake install\n```\n\n > CentOS7安装方法：\n\n `yum install -y zlib zlib-devel`\n\n### ssl (不要make 否则有坑)\n[下载地址:https://www.openssl.org/source/](https://www.openssl.org/source/)\n\n> Ububtu16.4安装方法：\n\n``` bash\nwget https://www.openssl.org/source/openssl-1.0.2n.tar.gz\ntar -zxvf openssl-1.0.2n.tar.gz\n\napt-get install openssl\napt-get install libssl-dev\n```\n\n> CentOS7安装方法：\n\n`yum install -y openssl openssl-devel`\n\n### nginx安装(我是直接安装的)\n[下载地址:http://nginx.org/en/download.html](http://nginx.org/en/download.html)\n> Ububtu16.4安装方法：\n\n``` bash\nwget http://nginx.org/download/nginx-1.12.2.tar.gz\ntar -zxvf nginx-1.12.2.tar.gz\ncd nginx-1.12.2\n./configure\nmake\nmake install\n```\n> CentOS7安装方法：\n\n``` bash\nwget -c http://nginx.org/download/nginx-1.12.2.tar.gz\ntar -zxvf nginx-1.12.2.tar.gz\ncd nginx-1.12.2\n./configure\nmake\nmake install\n```\n\n### 安装成功\n进入/usr/local/nginx目录\n``` bash\nclient_body_temp  fastcgi_temp  logs        sbin       uwsgi_temp\nconf              html          proxy_temp  scgi_temp\n```\n\n### 启动\n进入/sbin `请使用sudo权限`\n启动：`./nginx`\n停止：`./nginx -s stop`\n重启：`./nginx -s reload`\n\n### VUE NGINX 服务器配置\n``` bash\n    server {\n        listen       8089;\n        server_name  localhost;\n        root   E:/git/Dofar/dist/;#文件地址\n        index  index.html index.htm;#文件指向页面\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n             try_files $uri $uri/ @router;#前端路由导航\n             index index.html;\n         }\n\n        location @router {\n            rewrite ^.*$ /index.html last;#前端路由导航\n    }\n```\n### 负载均衡策略\n\nnginx可以根据客户端IP进行负载均衡，在upstream里设置ip_hash，就可以针对同一个C类地址段中的客户端选择同一个后端服务器，除非那个后端服务器宕了才会换一个。\n\nnginx的upstream目前支持的5种方式的分配\n\n#### 1、轮询（默认）\n每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。\n>upstream backserver {\nserver 192.168.0.14;\nserver 192.168.0.15;\n}\n\n#### 2、指定权重\n指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。\n>upstream backserver {\nserver 192.168.0.14 weight=10;\nserver 192.168.0.15 weight=10;\n}\n\n#### 3、IP绑定 ip_hash\n每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。\n>upstream backserver {\nip_hash;\nserver 192.168.0.14:88;\nserver 192.168.0.15:80;\n}\n\n#### 4、fair（第三方）\n按后端服务器的响应时间来分配请求，响应时间短的优先分配。\n>upstream backserver {\nserver server1;\nserver server2;\nfair;\n}\n\n#### 5、url_hash（第三方）\n按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。\n>upstream backserver {\nserver squid1:3128;\nserver squid2:3128;\nhash $request_uri;\nhash_method crc32;\n}\n\n在需要使用负载均衡的server中增加\n\n>upstream backserver{\nip_hash;\nserver 127.0.0.1:9090 down; (down 表示单前的server暂时不参与负载)\nserver 127.0.0.1:8080 weight=2; (weight 默认为1.weight越大，负载的权重就越大)\nserver 127.0.0.1:6060;\nserver 127.0.0.1:7070 backup; (其它所有的非backup机器down或者忙的时候，请求backup机器)\n}\nlocation / {\n    proxy_pass http://backserver/ ;\n}\n\nmax_fails ：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream 模块定义的错误\nfail_timeout:max_fails次失败后，暂停的时间\n\n\n# 参考文档\n[Nginx安装](http://www.nginx.cn/install)","slug":"nginx","published":1,"updated":"2018-06-22T06:45:05.452Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1k00011cdonfo7jkli7","content":"<blockquote>\n<p>安装nginx</p>\n</blockquote>\n<h1 id=\"安装开发环境\"><a href=\"#安装开发环境\" class=\"headerlink\" title=\"安装开发环境\"></a>安装开发环境</h1><blockquote>\n<p>Ububtu16.4安装方法：</p>\n</blockquote>\n<p>安装g++只需要一条命令就可以了：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install build-essential <span class=\"comment\">#除了g++外，这条命令还会安装libc6-dev，make等好东东，很方便</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>CentOS7安装方法：</p>\n</blockquote>\n<p><code>yum install gcc-c++</code></p>\n<h2 id=\"pcre-zlib-ssl安装\"><a href=\"#pcre-zlib-ssl安装\" class=\"headerlink\" title=\"pcre zlib ssl安装\"></a>pcre zlib ssl安装</h2><p>一般我们都需要先装pcre, zlib，前者为了重写rewrite，后者为了gzip压缩。</p>\n<p>1.选定目录<br><code>cd /usr/local/src</code>以下下载文件均放置在次文件夹下 请使用sudo权限</p>\n<h3 id=\"pcre\"><a href=\"#pcre\" class=\"headerlink\" title=\"pcre\"></a>pcre</h3><p><a href=\"ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/\" target=\"_blank\" rel=\"external\">下载地址:ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/</a></p>\n<blockquote>\n<p>Ububtu16.4安装方法：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.41.tar.gz</div><div class=\"line\">tar -zxvf pcre-8.41.tar.gz</div><div class=\"line\"><span class=\"built_in\">cd</span> pcre-8.34</div><div class=\"line\">./configure</div><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<blockquote>\n<p>CentOS7安装方法：</p>\n</blockquote>\n<p><code>yum install -y pcre pcre-devel</code></p>\n<h3 id=\"zlib\"><a href=\"#zlib\" class=\"headerlink\" title=\"zlib\"></a>zlib</h3><p><a href=\"http://zlib.net/\" target=\"_blank\" rel=\"external\">下载地址:http://zlib.net/</a></p>\n<blockquote>\n<p>Ububtu16.4安装方法：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://zlib.net/zlib-1.2.11.tar.gz</div><div class=\"line\">tar -zxvf zlib-1.2.11.tar.gz</div><div class=\"line\"><span class=\"built_in\">cd</span> zlib-1.2.11</div><div class=\"line\">./configure</div><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure>\n<blockquote>\n<p>CentOS7安装方法：</p>\n</blockquote>\n<p> <code>yum install -y zlib zlib-devel</code></p>\n<h3 id=\"ssl-不要make-否则有坑\"><a href=\"#ssl-不要make-否则有坑\" class=\"headerlink\" title=\"ssl (不要make 否则有坑)\"></a>ssl (不要make 否则有坑)</h3><p><a href=\"https://www.openssl.org/source/\" target=\"_blank\" rel=\"external\">下载地址:https://www.openssl.org/source/</a></p>\n<blockquote>\n<p>Ububtu16.4安装方法：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget https://www.openssl.org/<span class=\"built_in\">source</span>/openssl-1.0.2n.tar.gz</div><div class=\"line\">tar -zxvf openssl-1.0.2n.tar.gz</div><div class=\"line\"></div><div class=\"line\">apt-get install openssl</div><div class=\"line\">apt-get install libssl-dev</div></pre></td></tr></table></figure>\n<blockquote>\n<p>CentOS7安装方法：</p>\n</blockquote>\n<p><code>yum install -y openssl openssl-devel</code></p>\n<h3 id=\"nginx安装-我是直接安装的\"><a href=\"#nginx安装-我是直接安装的\" class=\"headerlink\" title=\"nginx安装(我是直接安装的)\"></a>nginx安装(我是直接安装的)</h3><p><a href=\"http://nginx.org/en/download.html\" target=\"_blank\" rel=\"external\">下载地址:http://nginx.org/en/download.html</a></p>\n<blockquote>\n<p>Ububtu16.4安装方法：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://nginx.org/download/nginx-1.12.2.tar.gz</div><div class=\"line\">tar -zxvf nginx-1.12.2.tar.gz</div><div class=\"line\"><span class=\"built_in\">cd</span> nginx-1.12.2</div><div class=\"line\">./configure</div><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure>\n<blockquote>\n<p>CentOS7安装方法：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget -c http://nginx.org/download/nginx-1.12.2.tar.gz</div><div class=\"line\">tar -zxvf nginx-1.12.2.tar.gz</div><div class=\"line\"><span class=\"built_in\">cd</span> nginx-1.12.2</div><div class=\"line\">./configure</div><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure>\n<h3 id=\"安装成功\"><a href=\"#安装成功\" class=\"headerlink\" title=\"安装成功\"></a>安装成功</h3><p>进入/usr/local/nginx目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">client_body_temp  fastcgi_temp  logs        sbin       uwsgi_temp</div><div class=\"line\">conf              html          proxy_temp  scgi_temp</div></pre></td></tr></table></figure></p>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><p>进入/sbin <code>请使用sudo权限</code><br>启动：<code>./nginx</code><br>停止：<code>./nginx -s stop</code><br>重启：<code>./nginx -s reload</code></p>\n<h3 id=\"VUE-NGINX-服务器配置\"><a href=\"#VUE-NGINX-服务器配置\" class=\"headerlink\" title=\"VUE NGINX 服务器配置\"></a>VUE NGINX 服务器配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">    listen       8089;</div><div class=\"line\">    server_name  localhost;</div><div class=\"line\">    root   E:/git/Dofar/dist/;<span class=\"comment\">#文件地址</span></div><div class=\"line\">    index  index.html index.htm;<span class=\"comment\">#文件指向页面</span></div><div class=\"line\">    <span class=\"comment\">#charset koi8-r;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">#access_log  logs/host.access.log  main;</span></div><div class=\"line\"></div><div class=\"line\">    location / &#123;</div><div class=\"line\">         try_files <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ @router;<span class=\"comment\">#前端路由导航</span></div><div class=\"line\">         index index.html;</div><div class=\"line\">     &#125;</div><div class=\"line\"></div><div class=\"line\">    location @router &#123;</div><div class=\"line\">        rewrite ^.*$ /index.html last;<span class=\"comment\">#前端路由导航</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"负载均衡策略\"><a href=\"#负载均衡策略\" class=\"headerlink\" title=\"负载均衡策略\"></a>负载均衡策略</h3><p>nginx可以根据客户端IP进行负载均衡，在upstream里设置ip_hash，就可以针对同一个C类地址段中的客户端选择同一个后端服务器，除非那个后端服务器宕了才会换一个。</p>\n<p>nginx的upstream目前支持的5种方式的分配</p>\n<h4 id=\"1、轮询（默认）\"><a href=\"#1、轮询（默认）\" class=\"headerlink\" title=\"1、轮询（默认）\"></a>1、轮询（默认）</h4><p>每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。</p>\n<blockquote>\n<p>upstream backserver {<br>server 192.168.0.14;<br>server 192.168.0.15;<br>}</p>\n</blockquote>\n<h4 id=\"2、指定权重\"><a href=\"#2、指定权重\" class=\"headerlink\" title=\"2、指定权重\"></a>2、指定权重</h4><p>指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。</p>\n<blockquote>\n<p>upstream backserver {<br>server 192.168.0.14 weight=10;<br>server 192.168.0.15 weight=10;<br>}</p>\n</blockquote>\n<h4 id=\"3、IP绑定-ip-hash\"><a href=\"#3、IP绑定-ip-hash\" class=\"headerlink\" title=\"3、IP绑定 ip_hash\"></a>3、IP绑定 ip_hash</h4><p>每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。</p>\n<blockquote>\n<p>upstream backserver {<br>ip_hash;<br>server 192.168.0.14:88;<br>server 192.168.0.15:80;<br>}</p>\n</blockquote>\n<h4 id=\"4、fair（第三方）\"><a href=\"#4、fair（第三方）\" class=\"headerlink\" title=\"4、fair（第三方）\"></a>4、fair（第三方）</h4><p>按后端服务器的响应时间来分配请求，响应时间短的优先分配。</p>\n<blockquote>\n<p>upstream backserver {<br>server server1;<br>server server2;<br>fair;<br>}</p>\n</blockquote>\n<h4 id=\"5、url-hash（第三方）\"><a href=\"#5、url-hash（第三方）\" class=\"headerlink\" title=\"5、url_hash（第三方）\"></a>5、url_hash（第三方）</h4><p>按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。</p>\n<blockquote>\n<p>upstream backserver {<br>server squid1:3128;<br>server squid2:3128;<br>hash $request_uri;<br>hash_method crc32;<br>}</p>\n</blockquote>\n<p>在需要使用负载均衡的server中增加</p>\n<blockquote>\n<p>upstream backserver{<br>ip_hash;<br>server 127.0.0.1:9090 down; (down 表示单前的server暂时不参与负载)<br>server 127.0.0.1:8080 weight=2; (weight 默认为1.weight越大，负载的权重就越大)<br>server 127.0.0.1:6060;<br>server 127.0.0.1:7070 backup; (其它所有的非backup机器down或者忙的时候，请求backup机器)<br>}<br>location / {<br>    proxy_pass <a href=\"http://backserver/\" target=\"_blank\" rel=\"external\">http://backserver/</a> ;<br>}</p>\n</blockquote>\n<p>max_fails ：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream 模块定义的错误<br>fail_timeout:max_fails次失败后，暂停的时间</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><p><a href=\"http://www.nginx.cn/install\" target=\"_blank\" rel=\"external\">Nginx安装</a></p>\n","excerpt":"<blockquote>\n<p>安装nginx</p>\n</blockquote>\n<h1 id=\"安装开发环境\"><a href=\"#安装开发环境\" class=\"headerlink\" title=\"安装开发环境\"></a>安装开发环境</h1><blockquote>\n<p>Ububtu16.4安装方法：</p>\n</blockquote>\n<p>安装g++只需要一条命令就可以了：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install build-essential <span class=\"comment\">#除了g++外，这条命令还会安装libc6-dev，make等好东东，很方便</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>CentOS7安装方法：</p>\n</blockquote>\n<p><code>yum install gcc-c++</code></p>\n<h2 id=\"pcre-zlib-ssl安装\"><a href=\"#pcre-zlib-ssl安装\" class=\"headerlink\" title=\"pcre zlib ssl安装\"></a>pcre zlib ssl安装</h2><p>一般我们都需要先装pcre, zlib，前者为了重写rewrite，后者为了gzip压缩。</p>\n<p>1.选定目录<br><code>cd /usr/local/src</code>以下下载文件均放置在次文件夹下 请使用sudo权限</p>\n<h3 id=\"pcre\"><a href=\"#pcre\" class=\"headerlink\" title=\"pcre\"></a>pcre</h3><p><a href=\"ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/\">下载地址:ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/</a></p>\n<blockquote>\n<p>Ububtu16.4安装方法：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.41.tar.gz</div><div class=\"line\">tar -zxvf pcre-8.41.tar.gz</div><div class=\"line\"><span class=\"built_in\">cd</span> pcre-8.34</div><div class=\"line\">./configure</div><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure>","more":"<blockquote>\n<p>CentOS7安装方法：</p>\n</blockquote>\n<p><code>yum install -y pcre pcre-devel</code></p>\n<h3 id=\"zlib\"><a href=\"#zlib\" class=\"headerlink\" title=\"zlib\"></a>zlib</h3><p><a href=\"http://zlib.net/\">下载地址:http://zlib.net/</a></p>\n<blockquote>\n<p>Ububtu16.4安装方法：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://zlib.net/zlib-1.2.11.tar.gz</div><div class=\"line\">tar -zxvf zlib-1.2.11.tar.gz</div><div class=\"line\"><span class=\"built_in\">cd</span> zlib-1.2.11</div><div class=\"line\">./configure</div><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure>\n<blockquote>\n<p>CentOS7安装方法：</p>\n</blockquote>\n<p> <code>yum install -y zlib zlib-devel</code></p>\n<h3 id=\"ssl-不要make-否则有坑\"><a href=\"#ssl-不要make-否则有坑\" class=\"headerlink\" title=\"ssl (不要make 否则有坑)\"></a>ssl (不要make 否则有坑)</h3><p><a href=\"https://www.openssl.org/source/\">下载地址:https://www.openssl.org/source/</a></p>\n<blockquote>\n<p>Ububtu16.4安装方法：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget https://www.openssl.org/<span class=\"built_in\">source</span>/openssl-1.0.2n.tar.gz</div><div class=\"line\">tar -zxvf openssl-1.0.2n.tar.gz</div><div class=\"line\"></div><div class=\"line\">apt-get install openssl</div><div class=\"line\">apt-get install libssl-dev</div></pre></td></tr></table></figure>\n<blockquote>\n<p>CentOS7安装方法：</p>\n</blockquote>\n<p><code>yum install -y openssl openssl-devel</code></p>\n<h3 id=\"nginx安装-我是直接安装的\"><a href=\"#nginx安装-我是直接安装的\" class=\"headerlink\" title=\"nginx安装(我是直接安装的)\"></a>nginx安装(我是直接安装的)</h3><p><a href=\"http://nginx.org/en/download.html\">下载地址:http://nginx.org/en/download.html</a></p>\n<blockquote>\n<p>Ububtu16.4安装方法：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://nginx.org/download/nginx-1.12.2.tar.gz</div><div class=\"line\">tar -zxvf nginx-1.12.2.tar.gz</div><div class=\"line\"><span class=\"built_in\">cd</span> nginx-1.12.2</div><div class=\"line\">./configure</div><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure>\n<blockquote>\n<p>CentOS7安装方法：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget -c http://nginx.org/download/nginx-1.12.2.tar.gz</div><div class=\"line\">tar -zxvf nginx-1.12.2.tar.gz</div><div class=\"line\"><span class=\"built_in\">cd</span> nginx-1.12.2</div><div class=\"line\">./configure</div><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure>\n<h3 id=\"安装成功\"><a href=\"#安装成功\" class=\"headerlink\" title=\"安装成功\"></a>安装成功</h3><p>进入/usr/local/nginx目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">client_body_temp  fastcgi_temp  logs        sbin       uwsgi_temp</div><div class=\"line\">conf              html          proxy_temp  scgi_temp</div></pre></td></tr></table></figure></p>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><p>进入/sbin <code>请使用sudo权限</code><br>启动：<code>./nginx</code><br>停止：<code>./nginx -s stop</code><br>重启：<code>./nginx -s reload</code></p>\n<h3 id=\"VUE-NGINX-服务器配置\"><a href=\"#VUE-NGINX-服务器配置\" class=\"headerlink\" title=\"VUE NGINX 服务器配置\"></a>VUE NGINX 服务器配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">    listen       8089;</div><div class=\"line\">    server_name  localhost;</div><div class=\"line\">    root   E:/git/Dofar/dist/;<span class=\"comment\">#文件地址</span></div><div class=\"line\">    index  index.html index.htm;<span class=\"comment\">#文件指向页面</span></div><div class=\"line\">    <span class=\"comment\">#charset koi8-r;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">#access_log  logs/host.access.log  main;</span></div><div class=\"line\"></div><div class=\"line\">    location / &#123;</div><div class=\"line\">         try_files <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ @router;<span class=\"comment\">#前端路由导航</span></div><div class=\"line\">         index index.html;</div><div class=\"line\">     &#125;</div><div class=\"line\"></div><div class=\"line\">    location @router &#123;</div><div class=\"line\">        rewrite ^.*$ /index.html last;<span class=\"comment\">#前端路由导航</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"负载均衡策略\"><a href=\"#负载均衡策略\" class=\"headerlink\" title=\"负载均衡策略\"></a>负载均衡策略</h3><p>nginx可以根据客户端IP进行负载均衡，在upstream里设置ip_hash，就可以针对同一个C类地址段中的客户端选择同一个后端服务器，除非那个后端服务器宕了才会换一个。</p>\n<p>nginx的upstream目前支持的5种方式的分配</p>\n<h4 id=\"1、轮询（默认）\"><a href=\"#1、轮询（默认）\" class=\"headerlink\" title=\"1、轮询（默认）\"></a>1、轮询（默认）</h4><p>每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。</p>\n<blockquote>\n<p>upstream backserver {<br>server 192.168.0.14;<br>server 192.168.0.15;<br>}</p>\n</blockquote>\n<h4 id=\"2、指定权重\"><a href=\"#2、指定权重\" class=\"headerlink\" title=\"2、指定权重\"></a>2、指定权重</h4><p>指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。</p>\n<blockquote>\n<p>upstream backserver {<br>server 192.168.0.14 weight=10;<br>server 192.168.0.15 weight=10;<br>}</p>\n</blockquote>\n<h4 id=\"3、IP绑定-ip-hash\"><a href=\"#3、IP绑定-ip-hash\" class=\"headerlink\" title=\"3、IP绑定 ip_hash\"></a>3、IP绑定 ip_hash</h4><p>每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。</p>\n<blockquote>\n<p>upstream backserver {<br>ip_hash;<br>server 192.168.0.14:88;<br>server 192.168.0.15:80;<br>}</p>\n</blockquote>\n<h4 id=\"4、fair（第三方）\"><a href=\"#4、fair（第三方）\" class=\"headerlink\" title=\"4、fair（第三方）\"></a>4、fair（第三方）</h4><p>按后端服务器的响应时间来分配请求，响应时间短的优先分配。</p>\n<blockquote>\n<p>upstream backserver {<br>server server1;<br>server server2;<br>fair;<br>}</p>\n</blockquote>\n<h4 id=\"5、url-hash（第三方）\"><a href=\"#5、url-hash（第三方）\" class=\"headerlink\" title=\"5、url_hash（第三方）\"></a>5、url_hash（第三方）</h4><p>按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。</p>\n<blockquote>\n<p>upstream backserver {<br>server squid1:3128;<br>server squid2:3128;<br>hash $request_uri;<br>hash_method crc32;<br>}</p>\n</blockquote>\n<p>在需要使用负载均衡的server中增加</p>\n<blockquote>\n<p>upstream backserver{<br>ip_hash;<br>server 127.0.0.1:9090 down; (down 表示单前的server暂时不参与负载)<br>server 127.0.0.1:8080 weight=2; (weight 默认为1.weight越大，负载的权重就越大)<br>server 127.0.0.1:6060;<br>server 127.0.0.1:7070 backup; (其它所有的非backup机器down或者忙的时候，请求backup机器)<br>}<br>location / {<br>    proxy_pass <a href=\"http://backserver/\">http://backserver/</a> ;<br>}</p>\n</blockquote>\n<p>max_fails ：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream 模块定义的错误<br>fail_timeout:max_fails次失败后，暂停的时间</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><p><a href=\"http://www.nginx.cn/install\">Nginx安装</a></p>"},{"title":"node,npm","date":"2017-09-03T08:51:01.000Z","keywords":null,"_content":">有关node等的记录\n\n# npm ERR! cb() never called!错误\n在谷歌上搜索过 尝试过更新到新版。。 依然一直报never called错误 ，最后实在没办法了，尝试从官网从新下载node稳定版安装后 再次使用npm install 正常运行.. \n\n#npm下载过慢\n如果模块下载很慢可以在后面 空格加上淘宝的镜像 \n--registry=https://registry.npm.taobao.org \n<!--  more  -->\n","source":"_posts/node.md","raw":"---\ntitle: node,npm\ndate: 2017-09-03 16:51:01\ntags:\ncategories:\nkeywords:\n---\n>有关node等的记录\n\n# npm ERR! cb() never called!错误\n在谷歌上搜索过 尝试过更新到新版。。 依然一直报never called错误 ，最后实在没办法了，尝试从官网从新下载node稳定版安装后 再次使用npm install 正常运行.. \n\n#npm下载过慢\n如果模块下载很慢可以在后面 空格加上淘宝的镜像 \n--registry=https://registry.npm.taobao.org \n<!--  more  -->\n","slug":"node","published":1,"updated":"2017-10-23T08:47:59.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1k10015cdonagggt0mx","content":"<blockquote>\n<p>有关node等的记录</p>\n</blockquote>\n<h1 id=\"npm-ERR-cb-never-called-错误\"><a href=\"#npm-ERR-cb-never-called-错误\" class=\"headerlink\" title=\"npm ERR! cb() never called!错误\"></a>npm ERR! cb() never called!错误</h1><p>在谷歌上搜索过 尝试过更新到新版。。 依然一直报never called错误 ，最后实在没办法了，尝试从官网从新下载node稳定版安装后 再次使用npm install 正常运行.. </p>\n<p>#npm下载过慢<br>如果模块下载很慢可以在后面 空格加上淘宝的镜像<br>–registry=<a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"external\">https://registry.npm.taobao.org</a><br><a id=\"more\"></a></p>\n","excerpt":"<blockquote>\n<p>有关node等的记录</p>\n</blockquote>\n<h1 id=\"npm-ERR-cb-never-called-错误\"><a href=\"#npm-ERR-cb-never-called-错误\" class=\"headerlink\" title=\"npm ERR! cb() never called!错误\"></a>npm ERR! cb() never called!错误</h1><p>在谷歌上搜索过 尝试过更新到新版。。 依然一直报never called错误 ，最后实在没办法了，尝试从官网从新下载node稳定版安装后 再次使用npm install 正常运行.. </p>\n<p>#npm下载过慢<br>如果模块下载很慢可以在后面 空格加上淘宝的镜像<br>–registry=<a href=\"https://registry.npm.taobao.org\">https://registry.npm.taobao.org</a><br>","more":"</p>"},{"title":"实用网站收藏","date":"2017-04-13T07:46:44.000Z","keywords":"网址,url,前端","_content":">有时候想找些东西，之前有用过的网址，然后特意去搜索，结果单词忘记了。现在存下，避免以后忘记了\n\n# 实用\n[segmentfault](https://segmentfault.com)：国内IT答疑网站\n[stackoverflow](http://stackoverflow.com/)：国外IT答疑网站(请自带英语技能)\n`你会发现很多困扰你的问题 都能````````在以上两个论坛找到你心仪的解答。套用我师父说的一句话：善用搜索引擎，我说的不是百度搜索哦~(笑)。`\n[JS在线编码](https://jsbin.com)\n[Awesome Mac](https://github.com/jaywcjlove/awesome-mac/blob/master/README-zh.md)：刚买MAC很迷茫要装什么？这里告诉你答案\n[前端网址导航](http://www.daqianduan.com/nav#2)\n[icoon图库](http://www.iconfont.cn/)：很多小图标，总有一个你爱的！\n[网站模板](http://reeoo.com/category/black)\n[网易用户体验中心](http://uedc.163.com/)\n[国产模块化前端ui框架](https://www.layui.com/doc/)\n[我是一只小小小小熊](http://blog.ursb.me/archives/)：blog\n[阮一峰](http://www.ruanyifeng.com/blog/)：blog\n[coolors](https://coolors.co/)\n[ColorHunt 配色](http://colorhunt.co/)\n[加载图标网站](https://loading.io/)\n[preloaders](https://preloaders.net/)\n<!--  more  -->\n\n***\n\n# 知识点\n[JavaScript 秘密花园](https://bonsaiden.github.io/JavaScript-Garden/zh/#intro)：js一些特点属性介绍。\n[CSS中position属性( absolute | relative | static | fixed )详解](http://blog.csdn.net/chen_zw/article/details/8741365)\n[Gulp工具常用插件](http://www.jianshu.com/p/98db023b5b89)\n\n***\n\n# 面试\n[前端面试](https://zhuanlan.zhihu.com/p/24723874)：只限题目，其中有高频率的知识点的总结\n[github上前端面试总结](https://github.com/markyun/My-blog/blob/master/Front-end-Developer-Questions/Questions-and-Answers/README.md)：内容详细，适合查漏补缺(推荐)\n[笔试宝典](http://www.bishibaodian.com/)：收录了很多笔试题包括但不限于前端\n[github上前端面试总结二](https://github.com/h5bp/Front-end-Developer-Interview-Questions/tree/master/Translations/Chinese)","source":"_posts/url.md","raw":"---\ntitle: 实用网站收藏\ndate: 2017-04-13 15:46:44\ntags: 前端网站\ncategories: url\nkeywords: 网址,url,前端\n---\n>有时候想找些东西，之前有用过的网址，然后特意去搜索，结果单词忘记了。现在存下，避免以后忘记了\n\n# 实用\n[segmentfault](https://segmentfault.com)：国内IT答疑网站\n[stackoverflow](http://stackoverflow.com/)：国外IT答疑网站(请自带英语技能)\n`你会发现很多困扰你的问题 都能````````在以上两个论坛找到你心仪的解答。套用我师父说的一句话：善用搜索引擎，我说的不是百度搜索哦~(笑)。`\n[JS在线编码](https://jsbin.com)\n[Awesome Mac](https://github.com/jaywcjlove/awesome-mac/blob/master/README-zh.md)：刚买MAC很迷茫要装什么？这里告诉你答案\n[前端网址导航](http://www.daqianduan.com/nav#2)\n[icoon图库](http://www.iconfont.cn/)：很多小图标，总有一个你爱的！\n[网站模板](http://reeoo.com/category/black)\n[网易用户体验中心](http://uedc.163.com/)\n[国产模块化前端ui框架](https://www.layui.com/doc/)\n[我是一只小小小小熊](http://blog.ursb.me/archives/)：blog\n[阮一峰](http://www.ruanyifeng.com/blog/)：blog\n[coolors](https://coolors.co/)\n[ColorHunt 配色](http://colorhunt.co/)\n[加载图标网站](https://loading.io/)\n[preloaders](https://preloaders.net/)\n<!--  more  -->\n\n***\n\n# 知识点\n[JavaScript 秘密花园](https://bonsaiden.github.io/JavaScript-Garden/zh/#intro)：js一些特点属性介绍。\n[CSS中position属性( absolute | relative | static | fixed )详解](http://blog.csdn.net/chen_zw/article/details/8741365)\n[Gulp工具常用插件](http://www.jianshu.com/p/98db023b5b89)\n\n***\n\n# 面试\n[前端面试](https://zhuanlan.zhihu.com/p/24723874)：只限题目，其中有高频率的知识点的总结\n[github上前端面试总结](https://github.com/markyun/My-blog/blob/master/Front-end-Developer-Questions/Questions-and-Answers/README.md)：内容详细，适合查漏补缺(推荐)\n[笔试宝典](http://www.bishibaodian.com/)：收录了很多笔试题包括但不限于前端\n[github上前端面试总结二](https://github.com/h5bp/Front-end-Developer-Interview-Questions/tree/master/Translations/Chinese)","slug":"url","published":1,"updated":"2017-09-06T09:25:48.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1k20018cdonk541qnpu","content":"<blockquote>\n<p>有时候想找些东西，之前有用过的网址，然后特意去搜索，结果单词忘记了。现在存下，避免以后忘记了</p>\n</blockquote>\n<h1 id=\"实用\"><a href=\"#实用\" class=\"headerlink\" title=\"实用\"></a>实用</h1><p><a href=\"https://segmentfault.com\" target=\"_blank\" rel=\"external\">segmentfault</a>：国内IT答疑网站<br><a href=\"http://stackoverflow.com/\" target=\"_blank\" rel=\"external\">stackoverflow</a>：国外IT答疑网站(请自带英语技能)<br><code>你会发现很多困扰你的问题 都能````````在以上两个论坛找到你心仪的解答。套用我师父说的一句话：善用搜索引擎，我说的不是百度搜索哦~(笑)。</code><br><a href=\"https://jsbin.com\" target=\"_blank\" rel=\"external\">JS在线编码</a><br><a href=\"https://github.com/jaywcjlove/awesome-mac/blob/master/README-zh.md\" target=\"_blank\" rel=\"external\">Awesome Mac</a>：刚买MAC很迷茫要装什么？这里告诉你答案<br><a href=\"http://www.daqianduan.com/nav#2\" target=\"_blank\" rel=\"external\">前端网址导航</a><br><a href=\"http://www.iconfont.cn/\" target=\"_blank\" rel=\"external\">icoon图库</a>：很多小图标，总有一个你爱的！<br><a href=\"http://reeoo.com/category/black\" target=\"_blank\" rel=\"external\">网站模板</a><br><a href=\"http://uedc.163.com/\" target=\"_blank\" rel=\"external\">网易用户体验中心</a><br><a href=\"https://www.layui.com/doc/\" target=\"_blank\" rel=\"external\">国产模块化前端ui框架</a><br><a href=\"http://blog.ursb.me/archives/\" target=\"_blank\" rel=\"external\">我是一只小小小小熊</a>：blog<br><a href=\"http://www.ruanyifeng.com/blog/\" target=\"_blank\" rel=\"external\">阮一峰</a>：blog<br><a href=\"https://coolors.co/\" target=\"_blank\" rel=\"external\">coolors</a><br><a href=\"http://colorhunt.co/\" target=\"_blank\" rel=\"external\">ColorHunt 配色</a><br><a href=\"https://loading.io/\" target=\"_blank\" rel=\"external\">加载图标网站</a><br><a href=\"https://preloaders.net/\" target=\"_blank\" rel=\"external\">preloaders</a><br><a id=\"more\"></a></p>\n<hr>\n<h1 id=\"知识点\"><a href=\"#知识点\" class=\"headerlink\" title=\"知识点\"></a>知识点</h1><p><a href=\"https://bonsaiden.github.io/JavaScript-Garden/zh/#intro\" target=\"_blank\" rel=\"external\">JavaScript 秘密花园</a>：js一些特点属性介绍。<br><a href=\"http://blog.csdn.net/chen_zw/article/details/8741365\" target=\"_blank\" rel=\"external\">CSS中position属性( absolute | relative | static | fixed )详解</a><br><a href=\"http://www.jianshu.com/p/98db023b5b89\" target=\"_blank\" rel=\"external\">Gulp工具常用插件</a></p>\n<hr>\n<h1 id=\"面试\"><a href=\"#面试\" class=\"headerlink\" title=\"面试\"></a>面试</h1><p><a href=\"https://zhuanlan.zhihu.com/p/24723874\" target=\"_blank\" rel=\"external\">前端面试</a>：只限题目，其中有高频率的知识点的总结<br><a href=\"https://github.com/markyun/My-blog/blob/master/Front-end-Developer-Questions/Questions-and-Answers/README.md\" target=\"_blank\" rel=\"external\">github上前端面试总结</a>：内容详细，适合查漏补缺(推荐)<br><a href=\"http://www.bishibaodian.com/\" target=\"_blank\" rel=\"external\">笔试宝典</a>：收录了很多笔试题包括但不限于前端<br><a href=\"https://github.com/h5bp/Front-end-Developer-Interview-Questions/tree/master/Translations/Chinese\" target=\"_blank\" rel=\"external\">github上前端面试总结二</a></p>\n","excerpt":"<blockquote>\n<p>有时候想找些东西，之前有用过的网址，然后特意去搜索，结果单词忘记了。现在存下，避免以后忘记了</p>\n</blockquote>\n<h1 id=\"实用\"><a href=\"#实用\" class=\"headerlink\" title=\"实用\"></a>实用</h1><p><a href=\"https://segmentfault.com\">segmentfault</a>：国内IT答疑网站<br><a href=\"http://stackoverflow.com/\">stackoverflow</a>：国外IT答疑网站(请自带英语技能)<br><code>你会发现很多困扰你的问题 都能````````在以上两个论坛找到你心仪的解答。套用我师父说的一句话：善用搜索引擎，我说的不是百度搜索哦~(笑)。</code><br><a href=\"https://jsbin.com\">JS在线编码</a><br><a href=\"https://github.com/jaywcjlove/awesome-mac/blob/master/README-zh.md\">Awesome Mac</a>：刚买MAC很迷茫要装什么？这里告诉你答案<br><a href=\"http://www.daqianduan.com/nav#2\">前端网址导航</a><br><a href=\"http://www.iconfont.cn/\">icoon图库</a>：很多小图标，总有一个你爱的！<br><a href=\"http://reeoo.com/category/black\">网站模板</a><br><a href=\"http://uedc.163.com/\">网易用户体验中心</a><br><a href=\"https://www.layui.com/doc/\">国产模块化前端ui框架</a><br><a href=\"http://blog.ursb.me/archives/\">我是一只小小小小熊</a>：blog<br><a href=\"http://www.ruanyifeng.com/blog/\">阮一峰</a>：blog<br><a href=\"https://coolors.co/\">coolors</a><br><a href=\"http://colorhunt.co/\">ColorHunt 配色</a><br><a href=\"https://loading.io/\">加载图标网站</a><br><a href=\"https://preloaders.net/\">preloaders</a><br>","more":"</p>\n<hr>\n<h1 id=\"知识点\"><a href=\"#知识点\" class=\"headerlink\" title=\"知识点\"></a>知识点</h1><p><a href=\"https://bonsaiden.github.io/JavaScript-Garden/zh/#intro\">JavaScript 秘密花园</a>：js一些特点属性介绍。<br><a href=\"http://blog.csdn.net/chen_zw/article/details/8741365\">CSS中position属性( absolute | relative | static | fixed )详解</a><br><a href=\"http://www.jianshu.com/p/98db023b5b89\">Gulp工具常用插件</a></p>\n<hr>\n<h1 id=\"面试\"><a href=\"#面试\" class=\"headerlink\" title=\"面试\"></a>面试</h1><p><a href=\"https://zhuanlan.zhihu.com/p/24723874\">前端面试</a>：只限题目，其中有高频率的知识点的总结<br><a href=\"https://github.com/markyun/My-blog/blob/master/Front-end-Developer-Questions/Questions-and-Answers/README.md\">github上前端面试总结</a>：内容详细，适合查漏补缺(推荐)<br><a href=\"http://www.bishibaodian.com/\">笔试宝典</a>：收录了很多笔试题包括但不限于前端<br><a href=\"https://github.com/h5bp/Front-end-Developer-Interview-Questions/tree/master/Translations/Chinese\">github上前端面试总结二</a></p>"},{"title":"mysql总结","date":"2017-08-02T12:16:46.000Z","keywords":"sql","_content":">mysql数据库总结\n\n# sql的组成\n\n## 数据定义语言（DDL），用来定义和管理数据对象，如数据库、表等\n\n`create、drop、alter`\n\n## 数据操作语言（DML），用于操作数据库对象中包含的数据\n\n`insert、update、delete`\n\n## 数据查询语言（DQL），用于查询数据库\n\n`select`\n\n## 数据控制语言（DCL），用来管理数据库，包括管理权限和数据更改\n\n`grant、commit、rollback`\n\n# 数据库(database)管理\n\n## 创建数据库\n\n``` sql\n    create database 表名;\n```\n\n<!--  more  -->\n\n\n## show 查看所有数据库\n\n``` sql\n    show databases;\n```\n\n## alter 修改数据库编码\n\n默认创建的数据库默认不支持中文字符，如果我们需要它支持中文字符，则将它的编码设置为utf8格式:\n``` sql\n    ALTER DATABASE 表名 CHARACTER SET UTF8;\n```\n\n## 使用数据库\n\n``` sql\nuse 库名;\n```\n\n## 查看当前使用的数据库\n\n``` sql\nselect database();\n```\n\n## 删除数据库\n\n``` sql\ndrop database 库名;\n```\n\n## 数据库备份\n\n``` sql\n    mysqldump -u root -p --default-character-set=utf8 world > bakWorld.sql;\n```\n\n# 数据表（table）管理\n首先创建`create`数据库，其次`use`数据库，否则操作都会不成功。\n\n## 创建表\n\n``` sql\ncreate table 表名 (\n    ID int AUTO_INCREMENT PRIMARY KEY,\n    NAME varchar(20) not null,\n    AGE int not null,\n    BIRTHDAY datetime);\n```\n\n## 显示表\n\n显示当前数据库所有的数据表\n``` sql\n    show tables;\n```\n\n## 查看表结构\n\n``` sql\n    desc 表名;\n```\n\n## 修改表的编码\n\n``` sql\nALTER TABLE KEYCHAIN CONVERT TO CHARACTER SET UTF8;\n```\n\n## 向表中添加字段\n\n``` sql\n    alter table 表名 add 字段名 属性(如：int);\n```\n\n## 修改表中的字段属性\n\n``` sql\n    alter table 表名 MODIFY 字段名 新属性;\n```\n\n## 删除表中的属性\n\n``` sql\n    alter table 表名 DROP column 字段名;\n```\n\n## 重命名表名\n\n``` sql\nRENAME TABLE 表名 TO 新表名;\n```\n\n## 修改表字段允许为空或不允许为空\n\n``` sql\nalter table 表名 MODIFY 字段名 属性(如：int(3)) null(not null);-- 允许为空或不允许为空\n```\n\n## 利用已有数据创建新表\n\n``` sql\ncreate table 新表名 select * from 表名;\n```\n\n## 删除约束\n\n``` sql\nALTER TABLE 表名 DROP CONSTRAINT 字段名 CASCADE;\n```\n\n## 新建主键约束\n``` sql\nALTER TABLE TAB_NAME ADD CONSTRAINT PK_NAME PRIMARY KEY(FILED,...);\n```\n\n# 数据的操作及管理\n\n数据表的基本操作，包含增、删、改、查数据。\n\n## 增加数据\n\n``` sql\ninsert into 表名 VALUES (null, '1', 2, '3');\n```\n\n## 查看数据\n\n``` sql\nselect * from 表名;-- *代表所有字段\n```\n\n## 删除数据\n\n``` sql\ndelete from 表名 where name = 'xxx';\n```\n\n## 修改数据\n\n``` sql\nupdate 表名 set name='xxxx' where name = 'xxx'; -- xxxx为修改后的数据，xxx为在表中查找的数据\n```\n\n## 查询手机号码区号以133和135开头的员工的姓名,性别,部门及联系电话\n``` sql\nselect name as 姓名,sex as 性别,department as 部门,phone as 联系电话 from employee where phone like '133%' or phone like '135%';-- %为通配符 _也是通配符区别在于%为通配之后所有，_为通配后一位 通配需用like关键字\n```\n\n- select 查找不重复（distinct）的数据，使数据按条件排序（order by），按查询条件显示数据（where）\n\n## 子查询\n``` sql\nselect * from student where birthday>(select birthday from student where stuname='周墨嘉');\n```\n\n# 函数\n\n``` sql\nselect length('老九学堂'); -- 12, 返回字节数\nselect char_length('你好啊'); -- 3, 返回字符数\nselect position('def' in 'abcdefg'); -- 4, 返回子串substr在字符串str第一个出现的位置，如果substr不是在str里面，返回0  \nselect position('学堂' in '老九学堂'); -- 3\nselect lower('MySQL数据库');-- mysql数据库\nselect rtrim(ltrim('   abc   ')); -- abc,清除左右空格\nselect left('中华人民共和国',3);-- 中华人，从字符串左右两边返回指定数目的字符\nselect replace('中华人民共和国', '人民', '民众');-- 中华民众共和国，字符串替换\nselect reverse('中华人民共和国'); -- 国和共民人华中, 颠倒字符\nselect concat(99, '人斩');-- 拼接字符串\nselect now();-- 返回当前日期、时间\nselect adddate(now(),interval 5 day);-- 返回5天后的时间\n-- 返回是今年的第几天\nselect dayofyear(now());\nselect dayofweek(now());\nselect day(now());\n-- 日期之差\nselect timestampdiff(year,'2008-8-8',now());\n\n-- 嵌套\nselect (\nreplace(replace (replace(loginpwd,'O','0'),'l','1'),'o','0')\n) from Student;\n```\n\n# 例题\n\n在某公司员工表中，为了节省空间，员工编号是按照“部门编号-员工编号”格式存放的，如：4-7,5-6,1-21,10-11,10-1,1-12,2-10,......,12-21,12-12,14-10,14-7等\n现在公司希望通过sql语句进行排序，首先按照前半部分的数字进行排序，然后再按照后半部分的数字进行排序，输出结果如下：1-12,1-21,2-10,4-7,5-6,10-1,10-11......,12-12,12-21,14-7,14-10\n数据表名称：Employee\n字段名称：EmpId\n\n``` sql\ncreate database cardinfo;\nALTER DATABASE cardinfo CHARACTER SET UTF8;\nuse cardinfo;\n\ncreate table employee(\n    id int(4) primary key not null auto_increment,\n    empid varchar(20) \n) charset=utf8;\n\ninsert into employee(empid) values\n    ('1-1'),('2-1'),('1-3'),('4-1'),('1-11'),('5-22'),('3-12'),\n    ('6-1'),('2-12'),('3-13'),('5-21'),('1-7'),('6-5'),('3-3');\n\nselect empid as 排序,\ncast(left(empid,position('-' in empid)-1) as signed) as 左边,\ncast(substr(empid,position('-' in empid)+1)as signed) as 右边\nfrom employee order by 左边 asc,右边 asc;\n```\n\n\n## 左向外联接的结果集包括  LEFT OUTER子句中指定的左表的所有行，而不仅仅是联接列所匹配的行。如果左表的某行在右表中没有匹配行，则在相关联的结果集行中右表的所有选择列表列均为空值。\n\n``` sql\nselect st.stuname 姓名,st.identity_card 身份证,sc.SubjectID,if(isnull(sc.score),'缺考',sc.score) as '成绩'  from \nstudent st left join score sc on(st.stuid=sc.stuid) order by st.stuname;\n\n-- 显示如下\n\n    +-----------+------------------+-----------+--------+\n    | 姓名      | 身份证           | SubjectID | 成绩   |\n    +-----------+------------------+-----------+--------+\n    | 周墨嘉    | 510123323333333x |      NULL | 缺考   |\n    | 李彤彤    | 510123325555555x |         2 | 81     |\n    | 陈天乐    | 510123322222222x |         3 | 90     |\n    | 陈天乐    | 510123322222222x |         2 | 60     |\n    | 陈天乐    | 510123322222222x |         1 | 85     |\n    | 马云      | 510128349124793  |      NULL | 缺考   |\n    | 黄诗怡    | 510123324444444x |         2 | 63     |\n    | 黄颖琦    | 510123321111111x |         1 | 80     |\n    | 黄颖琦    | 510123321111111x |         3 | 78     |\n    | 黄颖琦    | 510123321111111x |         2 | 55     |\n    +-----------+------------------+-----------+--------+\n    10 rows in set (0.01 sec)\n\n```\n\n<span style=\"color: red\">left 是以左边为主 显示全部内容，右边的表为辅，右边的表若没有值则显示为空。同理right</span>\n\n# JDBC\n\n``` java\n        // 使用PreparedStatement防注入\n        // 加载驱动\n        Class.forName(\"com.mysql.jdbc.Driver\");\n        //创建连接\n        Connection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/school\",\"服务器名\",\"数据库密码\");\n        //3、执行sql语句\n        String querySql=\"select * from grade where id=? and grade_name=?\";\n        PreparedStatement pst=con.prepareStatement(querySql);\n        pst.setInt(1,2);//第一个参数表示第几个问号，第二个参数表示参数的值\n        pst.setString(2,\"十一年级\");\n        ResultSet rs =pst.executeQuery();\n        //pst.executeUpdate();修改、删除、新增使用这个方法\n        while(rs.next()){\n            System.out.println(rs.getInt(1)+\"\\t\"+rs.getString(2));\n        }\n        rs.close();\n        pst.close();\n        con.close();\n```\n","source":"_posts/sql.md","raw":"---\ntitle: mysql总结\ndate: 2017-08-02 20:16:46\ntags: sql\ncategories: sql\nkeywords: sql\n---\n>mysql数据库总结\n\n# sql的组成\n\n## 数据定义语言（DDL），用来定义和管理数据对象，如数据库、表等\n\n`create、drop、alter`\n\n## 数据操作语言（DML），用于操作数据库对象中包含的数据\n\n`insert、update、delete`\n\n## 数据查询语言（DQL），用于查询数据库\n\n`select`\n\n## 数据控制语言（DCL），用来管理数据库，包括管理权限和数据更改\n\n`grant、commit、rollback`\n\n# 数据库(database)管理\n\n## 创建数据库\n\n``` sql\n    create database 表名;\n```\n\n<!--  more  -->\n\n\n## show 查看所有数据库\n\n``` sql\n    show databases;\n```\n\n## alter 修改数据库编码\n\n默认创建的数据库默认不支持中文字符，如果我们需要它支持中文字符，则将它的编码设置为utf8格式:\n``` sql\n    ALTER DATABASE 表名 CHARACTER SET UTF8;\n```\n\n## 使用数据库\n\n``` sql\nuse 库名;\n```\n\n## 查看当前使用的数据库\n\n``` sql\nselect database();\n```\n\n## 删除数据库\n\n``` sql\ndrop database 库名;\n```\n\n## 数据库备份\n\n``` sql\n    mysqldump -u root -p --default-character-set=utf8 world > bakWorld.sql;\n```\n\n# 数据表（table）管理\n首先创建`create`数据库，其次`use`数据库，否则操作都会不成功。\n\n## 创建表\n\n``` sql\ncreate table 表名 (\n    ID int AUTO_INCREMENT PRIMARY KEY,\n    NAME varchar(20) not null,\n    AGE int not null,\n    BIRTHDAY datetime);\n```\n\n## 显示表\n\n显示当前数据库所有的数据表\n``` sql\n    show tables;\n```\n\n## 查看表结构\n\n``` sql\n    desc 表名;\n```\n\n## 修改表的编码\n\n``` sql\nALTER TABLE KEYCHAIN CONVERT TO CHARACTER SET UTF8;\n```\n\n## 向表中添加字段\n\n``` sql\n    alter table 表名 add 字段名 属性(如：int);\n```\n\n## 修改表中的字段属性\n\n``` sql\n    alter table 表名 MODIFY 字段名 新属性;\n```\n\n## 删除表中的属性\n\n``` sql\n    alter table 表名 DROP column 字段名;\n```\n\n## 重命名表名\n\n``` sql\nRENAME TABLE 表名 TO 新表名;\n```\n\n## 修改表字段允许为空或不允许为空\n\n``` sql\nalter table 表名 MODIFY 字段名 属性(如：int(3)) null(not null);-- 允许为空或不允许为空\n```\n\n## 利用已有数据创建新表\n\n``` sql\ncreate table 新表名 select * from 表名;\n```\n\n## 删除约束\n\n``` sql\nALTER TABLE 表名 DROP CONSTRAINT 字段名 CASCADE;\n```\n\n## 新建主键约束\n``` sql\nALTER TABLE TAB_NAME ADD CONSTRAINT PK_NAME PRIMARY KEY(FILED,...);\n```\n\n# 数据的操作及管理\n\n数据表的基本操作，包含增、删、改、查数据。\n\n## 增加数据\n\n``` sql\ninsert into 表名 VALUES (null, '1', 2, '3');\n```\n\n## 查看数据\n\n``` sql\nselect * from 表名;-- *代表所有字段\n```\n\n## 删除数据\n\n``` sql\ndelete from 表名 where name = 'xxx';\n```\n\n## 修改数据\n\n``` sql\nupdate 表名 set name='xxxx' where name = 'xxx'; -- xxxx为修改后的数据，xxx为在表中查找的数据\n```\n\n## 查询手机号码区号以133和135开头的员工的姓名,性别,部门及联系电话\n``` sql\nselect name as 姓名,sex as 性别,department as 部门,phone as 联系电话 from employee where phone like '133%' or phone like '135%';-- %为通配符 _也是通配符区别在于%为通配之后所有，_为通配后一位 通配需用like关键字\n```\n\n- select 查找不重复（distinct）的数据，使数据按条件排序（order by），按查询条件显示数据（where）\n\n## 子查询\n``` sql\nselect * from student where birthday>(select birthday from student where stuname='周墨嘉');\n```\n\n# 函数\n\n``` sql\nselect length('老九学堂'); -- 12, 返回字节数\nselect char_length('你好啊'); -- 3, 返回字符数\nselect position('def' in 'abcdefg'); -- 4, 返回子串substr在字符串str第一个出现的位置，如果substr不是在str里面，返回0  \nselect position('学堂' in '老九学堂'); -- 3\nselect lower('MySQL数据库');-- mysql数据库\nselect rtrim(ltrim('   abc   ')); -- abc,清除左右空格\nselect left('中华人民共和国',3);-- 中华人，从字符串左右两边返回指定数目的字符\nselect replace('中华人民共和国', '人民', '民众');-- 中华民众共和国，字符串替换\nselect reverse('中华人民共和国'); -- 国和共民人华中, 颠倒字符\nselect concat(99, '人斩');-- 拼接字符串\nselect now();-- 返回当前日期、时间\nselect adddate(now(),interval 5 day);-- 返回5天后的时间\n-- 返回是今年的第几天\nselect dayofyear(now());\nselect dayofweek(now());\nselect day(now());\n-- 日期之差\nselect timestampdiff(year,'2008-8-8',now());\n\n-- 嵌套\nselect (\nreplace(replace (replace(loginpwd,'O','0'),'l','1'),'o','0')\n) from Student;\n```\n\n# 例题\n\n在某公司员工表中，为了节省空间，员工编号是按照“部门编号-员工编号”格式存放的，如：4-7,5-6,1-21,10-11,10-1,1-12,2-10,......,12-21,12-12,14-10,14-7等\n现在公司希望通过sql语句进行排序，首先按照前半部分的数字进行排序，然后再按照后半部分的数字进行排序，输出结果如下：1-12,1-21,2-10,4-7,5-6,10-1,10-11......,12-12,12-21,14-7,14-10\n数据表名称：Employee\n字段名称：EmpId\n\n``` sql\ncreate database cardinfo;\nALTER DATABASE cardinfo CHARACTER SET UTF8;\nuse cardinfo;\n\ncreate table employee(\n    id int(4) primary key not null auto_increment,\n    empid varchar(20) \n) charset=utf8;\n\ninsert into employee(empid) values\n    ('1-1'),('2-1'),('1-3'),('4-1'),('1-11'),('5-22'),('3-12'),\n    ('6-1'),('2-12'),('3-13'),('5-21'),('1-7'),('6-5'),('3-3');\n\nselect empid as 排序,\ncast(left(empid,position('-' in empid)-1) as signed) as 左边,\ncast(substr(empid,position('-' in empid)+1)as signed) as 右边\nfrom employee order by 左边 asc,右边 asc;\n```\n\n\n## 左向外联接的结果集包括  LEFT OUTER子句中指定的左表的所有行，而不仅仅是联接列所匹配的行。如果左表的某行在右表中没有匹配行，则在相关联的结果集行中右表的所有选择列表列均为空值。\n\n``` sql\nselect st.stuname 姓名,st.identity_card 身份证,sc.SubjectID,if(isnull(sc.score),'缺考',sc.score) as '成绩'  from \nstudent st left join score sc on(st.stuid=sc.stuid) order by st.stuname;\n\n-- 显示如下\n\n    +-----------+------------------+-----------+--------+\n    | 姓名      | 身份证           | SubjectID | 成绩   |\n    +-----------+------------------+-----------+--------+\n    | 周墨嘉    | 510123323333333x |      NULL | 缺考   |\n    | 李彤彤    | 510123325555555x |         2 | 81     |\n    | 陈天乐    | 510123322222222x |         3 | 90     |\n    | 陈天乐    | 510123322222222x |         2 | 60     |\n    | 陈天乐    | 510123322222222x |         1 | 85     |\n    | 马云      | 510128349124793  |      NULL | 缺考   |\n    | 黄诗怡    | 510123324444444x |         2 | 63     |\n    | 黄颖琦    | 510123321111111x |         1 | 80     |\n    | 黄颖琦    | 510123321111111x |         3 | 78     |\n    | 黄颖琦    | 510123321111111x |         2 | 55     |\n    +-----------+------------------+-----------+--------+\n    10 rows in set (0.01 sec)\n\n```\n\n<span style=\"color: red\">left 是以左边为主 显示全部内容，右边的表为辅，右边的表若没有值则显示为空。同理right</span>\n\n# JDBC\n\n``` java\n        // 使用PreparedStatement防注入\n        // 加载驱动\n        Class.forName(\"com.mysql.jdbc.Driver\");\n        //创建连接\n        Connection con=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/school\",\"服务器名\",\"数据库密码\");\n        //3、执行sql语句\n        String querySql=\"select * from grade where id=? and grade_name=?\";\n        PreparedStatement pst=con.prepareStatement(querySql);\n        pst.setInt(1,2);//第一个参数表示第几个问号，第二个参数表示参数的值\n        pst.setString(2,\"十一年级\");\n        ResultSet rs =pst.executeQuery();\n        //pst.executeUpdate();修改、删除、新增使用这个方法\n        while(rs.next()){\n            System.out.println(rs.getInt(1)+\"\\t\"+rs.getString(2));\n        }\n        rs.close();\n        pst.close();\n        con.close();\n```\n","slug":"sql","published":1,"updated":"2017-09-06T08:38:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1k3001bcdon3jwnvhy4","content":"<blockquote>\n<p>mysql数据库总结</p>\n</blockquote>\n<h1 id=\"sql的组成\"><a href=\"#sql的组成\" class=\"headerlink\" title=\"sql的组成\"></a>sql的组成</h1><h2 id=\"数据定义语言（DDL），用来定义和管理数据对象，如数据库、表等\"><a href=\"#数据定义语言（DDL），用来定义和管理数据对象，如数据库、表等\" class=\"headerlink\" title=\"数据定义语言（DDL），用来定义和管理数据对象，如数据库、表等\"></a>数据定义语言（DDL），用来定义和管理数据对象，如数据库、表等</h2><p><code>create、drop、alter</code></p>\n<h2 id=\"数据操作语言（DML），用于操作数据库对象中包含的数据\"><a href=\"#数据操作语言（DML），用于操作数据库对象中包含的数据\" class=\"headerlink\" title=\"数据操作语言（DML），用于操作数据库对象中包含的数据\"></a>数据操作语言（DML），用于操作数据库对象中包含的数据</h2><p><code>insert、update、delete</code></p>\n<h2 id=\"数据查询语言（DQL），用于查询数据库\"><a href=\"#数据查询语言（DQL），用于查询数据库\" class=\"headerlink\" title=\"数据查询语言（DQL），用于查询数据库\"></a>数据查询语言（DQL），用于查询数据库</h2><p><code>select</code></p>\n<h2 id=\"数据控制语言（DCL），用来管理数据库，包括管理权限和数据更改\"><a href=\"#数据控制语言（DCL），用来管理数据库，包括管理权限和数据更改\" class=\"headerlink\" title=\"数据控制语言（DCL），用来管理数据库，包括管理权限和数据更改\"></a>数据控制语言（DCL），用来管理数据库，包括管理权限和数据更改</h2><p><code>grant、commit、rollback</code></p>\n<h1 id=\"数据库-database-管理\"><a href=\"#数据库-database-管理\" class=\"headerlink\" title=\"数据库(database)管理\"></a>数据库(database)管理</h1><h2 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">database</span> 表名;</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"show-查看所有数据库\"><a href=\"#show-查看所有数据库\" class=\"headerlink\" title=\"show 查看所有数据库\"></a>show 查看所有数据库</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">databases</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"alter-修改数据库编码\"><a href=\"#alter-修改数据库编码\" class=\"headerlink\" title=\"alter 修改数据库编码\"></a>alter 修改数据库编码</h2><p>默认创建的数据库默认不支持中文字符，如果我们需要它支持中文字符，则将它的编码设置为utf8格式:<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">DATABASE</span> 表名 <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> UTF8;</div></pre></td></tr></table></figure></p>\n<h2 id=\"使用数据库\"><a href=\"#使用数据库\" class=\"headerlink\" title=\"使用数据库\"></a>使用数据库</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">use</span> 库名;</div></pre></td></tr></table></figure>\n<h2 id=\"查看当前使用的数据库\"><a href=\"#查看当前使用的数据库\" class=\"headerlink\" title=\"查看当前使用的数据库\"></a>查看当前使用的数据库</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">database</span>();</div></pre></td></tr></table></figure>\n<h2 id=\"删除数据库\"><a href=\"#删除数据库\" class=\"headerlink\" title=\"删除数据库\"></a>删除数据库</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">database</span> 库名;</div></pre></td></tr></table></figure>\n<h2 id=\"数据库备份\"><a href=\"#数据库备份\" class=\"headerlink\" title=\"数据库备份\"></a>数据库备份</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysqldump -u root -p <span class=\"comment\">--default-character-set=utf8 world &gt; bakWorld.sql;</span></div></pre></td></tr></table></figure>\n<h1 id=\"数据表（table）管理\"><a href=\"#数据表（table）管理\" class=\"headerlink\" title=\"数据表（table）管理\"></a>数据表（table）管理</h1><p>首先创建<code>create</code>数据库，其次<code>use</code>数据库，否则操作都会不成功。</p>\n<h2 id=\"创建表\"><a href=\"#创建表\" class=\"headerlink\" title=\"创建表\"></a>创建表</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> 表名 (</div><div class=\"line\">    <span class=\"keyword\">ID</span> <span class=\"built_in\">int</span> AUTO_INCREMENT PRIMARY <span class=\"keyword\">KEY</span>,</div><div class=\"line\">    <span class=\"keyword\">NAME</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">20</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    AGE <span class=\"built_in\">int</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    BIRTHDAY datetime);</div></pre></td></tr></table></figure>\n<h2 id=\"显示表\"><a href=\"#显示表\" class=\"headerlink\" title=\"显示表\"></a>显示表</h2><p>显示当前数据库所有的数据表<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">tables</span>;</div></pre></td></tr></table></figure></p>\n<h2 id=\"查看表结构\"><a href=\"#查看表结构\" class=\"headerlink\" title=\"查看表结构\"></a>查看表结构</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">desc 表名;</div></pre></td></tr></table></figure>\n<h2 id=\"修改表的编码\"><a href=\"#修改表的编码\" class=\"headerlink\" title=\"修改表的编码\"></a>修改表的编码</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> KEYCHAIN <span class=\"keyword\">CONVERT</span> <span class=\"keyword\">TO</span> <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> UTF8;</div></pre></td></tr></table></figure>\n<h2 id=\"向表中添加字段\"><a href=\"#向表中添加字段\" class=\"headerlink\" title=\"向表中添加字段\"></a>向表中添加字段</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> 表名 <span class=\"keyword\">add</span> 字段名 属性(如：<span class=\"built_in\">int</span>);</div></pre></td></tr></table></figure>\n<h2 id=\"修改表中的字段属性\"><a href=\"#修改表中的字段属性\" class=\"headerlink\" title=\"修改表中的字段属性\"></a>修改表中的字段属性</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> 表名 <span class=\"keyword\">MODIFY</span> 字段名 新属性;</div></pre></td></tr></table></figure>\n<h2 id=\"删除表中的属性\"><a href=\"#删除表中的属性\" class=\"headerlink\" title=\"删除表中的属性\"></a>删除表中的属性</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> 表名 <span class=\"keyword\">DROP</span> <span class=\"keyword\">column</span> 字段名;</div></pre></td></tr></table></figure>\n<h2 id=\"重命名表名\"><a href=\"#重命名表名\" class=\"headerlink\" title=\"重命名表名\"></a>重命名表名</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">RENAME</span> <span class=\"keyword\">TABLE</span> 表名 <span class=\"keyword\">TO</span> 新表名;</div></pre></td></tr></table></figure>\n<h2 id=\"修改表字段允许为空或不允许为空\"><a href=\"#修改表字段允许为空或不允许为空\" class=\"headerlink\" title=\"修改表字段允许为空或不允许为空\"></a>修改表字段允许为空或不允许为空</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> 表名 <span class=\"keyword\">MODIFY</span> 字段名 属性(如：<span class=\"built_in\">int</span>(<span class=\"number\">3</span>)) <span class=\"literal\">null</span>(<span class=\"keyword\">not</span> <span class=\"literal\">null</span>);<span class=\"comment\">-- 允许为空或不允许为空</span></div></pre></td></tr></table></figure>\n<h2 id=\"利用已有数据创建新表\"><a href=\"#利用已有数据创建新表\" class=\"headerlink\" title=\"利用已有数据创建新表\"></a>利用已有数据创建新表</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> 新表名 <span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> 表名;</div></pre></td></tr></table></figure>\n<h2 id=\"删除约束\"><a href=\"#删除约束\" class=\"headerlink\" title=\"删除约束\"></a>删除约束</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 表名 <span class=\"keyword\">DROP</span> <span class=\"keyword\">CONSTRAINT</span> 字段名 <span class=\"keyword\">CASCADE</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"新建主键约束\"><a href=\"#新建主键约束\" class=\"headerlink\" title=\"新建主键约束\"></a>新建主键约束</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> TAB_NAME <span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> PK_NAME PRIMARY <span class=\"keyword\">KEY</span>(FILED,...);</div></pre></td></tr></table></figure>\n<h1 id=\"数据的操作及管理\"><a href=\"#数据的操作及管理\" class=\"headerlink\" title=\"数据的操作及管理\"></a>数据的操作及管理</h1><p>数据表的基本操作，包含增、删、改、查数据。</p>\n<h2 id=\"增加数据\"><a href=\"#增加数据\" class=\"headerlink\" title=\"增加数据\"></a>增加数据</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> 表名 <span class=\"keyword\">VALUES</span> (<span class=\"literal\">null</span>, <span class=\"string\">'1'</span>, <span class=\"number\">2</span>, <span class=\"string\">'3'</span>);</div></pre></td></tr></table></figure>\n<h2 id=\"查看数据\"><a href=\"#查看数据\" class=\"headerlink\" title=\"查看数据\"></a>查看数据</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> 表名;<span class=\"comment\">-- *代表所有字段</span></div></pre></td></tr></table></figure>\n<h2 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a>删除数据</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> 表名 <span class=\"keyword\">where</span> <span class=\"keyword\">name</span> = <span class=\"string\">'xxx'</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"修改数据\"><a href=\"#修改数据\" class=\"headerlink\" title=\"修改数据\"></a>修改数据</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">update</span> 表名 <span class=\"keyword\">set</span> <span class=\"keyword\">name</span>=<span class=\"string\">'xxxx'</span> <span class=\"keyword\">where</span> <span class=\"keyword\">name</span> = <span class=\"string\">'xxx'</span>; <span class=\"comment\">-- xxxx为修改后的数据，xxx为在表中查找的数据</span></div></pre></td></tr></table></figure>\n<h2 id=\"查询手机号码区号以133和135开头的员工的姓名-性别-部门及联系电话\"><a href=\"#查询手机号码区号以133和135开头的员工的姓名-性别-部门及联系电话\" class=\"headerlink\" title=\"查询手机号码区号以133和135开头的员工的姓名,性别,部门及联系电话\"></a>查询手机号码区号以133和135开头的员工的姓名,性别,部门及联系电话</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">name</span> <span class=\"keyword\">as</span> 姓名,sex <span class=\"keyword\">as</span> 性别,department <span class=\"keyword\">as</span> 部门,phone <span class=\"keyword\">as</span> 联系电话 <span class=\"keyword\">from</span> employee <span class=\"keyword\">where</span> phone <span class=\"keyword\">like</span> <span class=\"string\">'133%'</span> <span class=\"keyword\">or</span> phone <span class=\"keyword\">like</span> <span class=\"string\">'135%'</span>;<span class=\"comment\">-- %为通配符 _也是通配符区别在于%为通配之后所有，_为通配后一位 通配需用like关键字</span></div></pre></td></tr></table></figure>\n<ul>\n<li>select 查找不重复（distinct）的数据，使数据按条件排序（order by），按查询条件显示数据（where）</li>\n</ul>\n<h2 id=\"子查询\"><a href=\"#子查询\" class=\"headerlink\" title=\"子查询\"></a>子查询</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> student <span class=\"keyword\">where</span> birthday&gt;(<span class=\"keyword\">select</span> birthday <span class=\"keyword\">from</span> student <span class=\"keyword\">where</span> stuname=<span class=\"string\">'周墨嘉'</span>);</div></pre></td></tr></table></figure>\n<h1 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">length</span>(<span class=\"string\">'老九学堂'</span>); <span class=\"comment\">-- 12, 返回字节数</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">char_length</span>(<span class=\"string\">'你好啊'</span>); <span class=\"comment\">-- 3, 返回字符数</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">position</span>(<span class=\"string\">'def'</span> <span class=\"keyword\">in</span> <span class=\"string\">'abcdefg'</span>); <span class=\"comment\">-- 4, 返回子串substr在字符串str第一个出现的位置，如果substr不是在str里面，返回0  </span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">position</span>(<span class=\"string\">'学堂'</span> <span class=\"keyword\">in</span> <span class=\"string\">'老九学堂'</span>); <span class=\"comment\">-- 3</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">lower</span>(<span class=\"string\">'MySQL数据库'</span>);<span class=\"comment\">-- mysql数据库</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">rtrim</span>(<span class=\"keyword\">ltrim</span>(<span class=\"string\">'   abc   '</span>)); <span class=\"comment\">-- abc,清除左右空格</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">left</span>(<span class=\"string\">'中华人民共和国'</span>,<span class=\"number\">3</span>);<span class=\"comment\">-- 中华人，从字符串左右两边返回指定数目的字符</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">replace</span>(<span class=\"string\">'中华人民共和国'</span>, <span class=\"string\">'人民'</span>, <span class=\"string\">'民众'</span>);<span class=\"comment\">-- 中华民众共和国，字符串替换</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">reverse</span>(<span class=\"string\">'中华人民共和国'</span>); <span class=\"comment\">-- 国和共民人华中, 颠倒字符</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">concat</span>(<span class=\"number\">99</span>, <span class=\"string\">'人斩'</span>);<span class=\"comment\">-- 拼接字符串</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">now</span>();<span class=\"comment\">-- 返回当前日期、时间</span></div><div class=\"line\"><span class=\"keyword\">select</span> adddate(<span class=\"keyword\">now</span>(),<span class=\"built_in\">interval</span> <span class=\"number\">5</span> <span class=\"keyword\">day</span>);<span class=\"comment\">-- 返回5天后的时间</span></div><div class=\"line\"><span class=\"comment\">-- 返回是今年的第几天</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">dayofyear</span>(<span class=\"keyword\">now</span>());</div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">dayofweek</span>(<span class=\"keyword\">now</span>());</div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">day</span>(<span class=\"keyword\">now</span>());</div><div class=\"line\"><span class=\"comment\">-- 日期之差</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">timestampdiff</span>(<span class=\"keyword\">year</span>,<span class=\"string\">'2008-8-8'</span>,<span class=\"keyword\">now</span>());</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">-- 嵌套</span></div><div class=\"line\"><span class=\"keyword\">select</span> (</div><div class=\"line\"><span class=\"keyword\">replace</span>(<span class=\"keyword\">replace</span> (<span class=\"keyword\">replace</span>(loginpwd,<span class=\"string\">'O'</span>,<span class=\"string\">'0'</span>),<span class=\"string\">'l'</span>,<span class=\"string\">'1'</span>),<span class=\"string\">'o'</span>,<span class=\"string\">'0'</span>)</div><div class=\"line\">) <span class=\"keyword\">from</span> Student;</div></pre></td></tr></table></figure>\n<h1 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h1><p>在某公司员工表中，为了节省空间，员工编号是按照“部门编号-员工编号”格式存放的，如：4-7,5-6,1-21,10-11,10-1,1-12,2-10,……,12-21,12-12,14-10,14-7等<br>现在公司希望通过sql语句进行排序，首先按照前半部分的数字进行排序，然后再按照后半部分的数字进行排序，输出结果如下：1-12,1-21,2-10,4-7,5-6,10-1,10-11……,12-12,12-21,14-7,14-10<br>数据表名称：Employee<br>字段名称：EmpId</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">database</span> cardinfo;</div><div class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">DATABASE</span> cardinfo <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> UTF8;</div><div class=\"line\"><span class=\"keyword\">use</span> cardinfo;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> employee(</div><div class=\"line\">    <span class=\"keyword\">id</span> <span class=\"built_in\">int</span>(<span class=\"number\">4</span>) primary <span class=\"keyword\">key</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span> auto_increment,</div><div class=\"line\">    empid <span class=\"built_in\">varchar</span>(<span class=\"number\">20</span>) </div><div class=\"line\">) <span class=\"keyword\">charset</span>=utf8;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> employee(empid) <span class=\"keyword\">values</span></div><div class=\"line\">    (<span class=\"string\">'1-1'</span>),(<span class=\"string\">'2-1'</span>),(<span class=\"string\">'1-3'</span>),(<span class=\"string\">'4-1'</span>),(<span class=\"string\">'1-11'</span>),(<span class=\"string\">'5-22'</span>),(<span class=\"string\">'3-12'</span>),</div><div class=\"line\">    (<span class=\"string\">'6-1'</span>),(<span class=\"string\">'2-12'</span>),(<span class=\"string\">'3-13'</span>),(<span class=\"string\">'5-21'</span>),(<span class=\"string\">'1-7'</span>),(<span class=\"string\">'6-5'</span>),(<span class=\"string\">'3-3'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">select</span> empid <span class=\"keyword\">as</span> 排序,</div><div class=\"line\"><span class=\"keyword\">cast</span>(<span class=\"keyword\">left</span>(empid,<span class=\"keyword\">position</span>(<span class=\"string\">'-'</span> <span class=\"keyword\">in</span> empid)<span class=\"number\">-1</span>) <span class=\"keyword\">as</span> signed) <span class=\"keyword\">as</span> 左边,</div><div class=\"line\"><span class=\"keyword\">cast</span>(<span class=\"keyword\">substr</span>(empid,<span class=\"keyword\">position</span>(<span class=\"string\">'-'</span> <span class=\"keyword\">in</span> empid)+<span class=\"number\">1</span>)<span class=\"keyword\">as</span> signed) <span class=\"keyword\">as</span> 右边</div><div class=\"line\"><span class=\"keyword\">from</span> employee <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> 左边 <span class=\"keyword\">asc</span>,右边 <span class=\"keyword\">asc</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"左向外联接的结果集包括-LEFT-OUTER子句中指定的左表的所有行，而不仅仅是联接列所匹配的行。如果左表的某行在右表中没有匹配行，则在相关联的结果集行中右表的所有选择列表列均为空值。\"><a href=\"#左向外联接的结果集包括-LEFT-OUTER子句中指定的左表的所有行，而不仅仅是联接列所匹配的行。如果左表的某行在右表中没有匹配行，则在相关联的结果集行中右表的所有选择列表列均为空值。\" class=\"headerlink\" title=\"左向外联接的结果集包括  LEFT OUTER子句中指定的左表的所有行，而不仅仅是联接列所匹配的行。如果左表的某行在右表中没有匹配行，则在相关联的结果集行中右表的所有选择列表列均为空值。\"></a>左向外联接的结果集包括  LEFT OUTER子句中指定的左表的所有行，而不仅仅是联接列所匹配的行。如果左表的某行在右表中没有匹配行，则在相关联的结果集行中右表的所有选择列表列均为空值。</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> st.stuname 姓名,st.identity_card 身份证,sc.SubjectID,<span class=\"keyword\">if</span>(<span class=\"keyword\">isnull</span>(sc.score),<span class=\"string\">'缺考'</span>,sc.score) <span class=\"keyword\">as</span> <span class=\"string\">'成绩'</span>  <span class=\"keyword\">from</span> </div><div class=\"line\">student st <span class=\"keyword\">left</span> <span class=\"keyword\">join</span> score sc <span class=\"keyword\">on</span>(st.stuid=sc.stuid) <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> st.stuname;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">-- 显示如下</span></div><div class=\"line\"></div><div class=\"line\">    +<span class=\"comment\">-----------+------------------+-----------+--------+</span></div><div class=\"line\">    | 姓名      | 身份证           | SubjectID | 成绩   |</div><div class=\"line\">    +<span class=\"comment\">-----------+------------------+-----------+--------+</span></div><div class=\"line\">    | 周墨嘉    | 510123323333333x |      NULL | 缺考   |</div><div class=\"line\">    | 李彤彤    | 510123325555555x |         2 | 81     |</div><div class=\"line\">    | 陈天乐    | 510123322222222x |         3 | 90     |</div><div class=\"line\">    | 陈天乐    | 510123322222222x |         2 | 60     |</div><div class=\"line\">    | 陈天乐    | 510123322222222x |         1 | 85     |</div><div class=\"line\">    | 马云      | 510128349124793  |      NULL | 缺考   |</div><div class=\"line\">    | 黄诗怡    | 510123324444444x |         2 | 63     |</div><div class=\"line\">    | 黄颖琦    | 510123321111111x |         1 | 80     |</div><div class=\"line\">    | 黄颖琦    | 510123321111111x |         3 | 78     |</div><div class=\"line\">    | 黄颖琦    | 510123321111111x |         2 | 55     |</div><div class=\"line\">    +<span class=\"comment\">-----------+------------------+-----------+--------+</span></div><div class=\"line\">    10 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.01</span> sec)</div></pre></td></tr></table></figure>\n<p><span style=\"color: red\">left 是以左边为主 显示全部内容，右边的表为辅，右边的表若没有值则显示为空。同理right</span></p>\n<h1 id=\"JDBC\"><a href=\"#JDBC\" class=\"headerlink\" title=\"JDBC\"></a>JDBC</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 使用PreparedStatement防注入</span></div><div class=\"line\"><span class=\"comment\">// 加载驱动</span></div><div class=\"line\">Class.forName(<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>);</div><div class=\"line\"><span class=\"comment\">//创建连接</span></div><div class=\"line\">Connection con=DriverManager.getConnection(<span class=\"string\">\"jdbc:mysql://localhost:3306/school\"</span>,<span class=\"string\">\"服务器名\"</span>,<span class=\"string\">\"数据库密码\"</span>);</div><div class=\"line\"><span class=\"comment\">//3、执行sql语句</span></div><div class=\"line\">String querySql=<span class=\"string\">\"select * from grade where id=? and grade_name=?\"</span>;</div><div class=\"line\">PreparedStatement pst=con.prepareStatement(querySql);</div><div class=\"line\">pst.setInt(<span class=\"number\">1</span>,<span class=\"number\">2</span>);<span class=\"comment\">//第一个参数表示第几个问号，第二个参数表示参数的值</span></div><div class=\"line\">pst.setString(<span class=\"number\">2</span>,<span class=\"string\">\"十一年级\"</span>);</div><div class=\"line\">ResultSet rs =pst.executeQuery();</div><div class=\"line\"><span class=\"comment\">//pst.executeUpdate();修改、删除、新增使用这个方法</span></div><div class=\"line\"><span class=\"keyword\">while</span>(rs.next())&#123;</div><div class=\"line\">    System.out.println(rs.getInt(<span class=\"number\">1</span>)+<span class=\"string\">\"\\t\"</span>+rs.getString(<span class=\"number\">2</span>));</div><div class=\"line\">&#125;</div><div class=\"line\">rs.close();</div><div class=\"line\">pst.close();</div><div class=\"line\">con.close();</div></pre></td></tr></table></figure>\n","excerpt":"<blockquote>\n<p>mysql数据库总结</p>\n</blockquote>\n<h1 id=\"sql的组成\"><a href=\"#sql的组成\" class=\"headerlink\" title=\"sql的组成\"></a>sql的组成</h1><h2 id=\"数据定义语言（DDL），用来定义和管理数据对象，如数据库、表等\"><a href=\"#数据定义语言（DDL），用来定义和管理数据对象，如数据库、表等\" class=\"headerlink\" title=\"数据定义语言（DDL），用来定义和管理数据对象，如数据库、表等\"></a>数据定义语言（DDL），用来定义和管理数据对象，如数据库、表等</h2><p><code>create、drop、alter</code></p>\n<h2 id=\"数据操作语言（DML），用于操作数据库对象中包含的数据\"><a href=\"#数据操作语言（DML），用于操作数据库对象中包含的数据\" class=\"headerlink\" title=\"数据操作语言（DML），用于操作数据库对象中包含的数据\"></a>数据操作语言（DML），用于操作数据库对象中包含的数据</h2><p><code>insert、update、delete</code></p>\n<h2 id=\"数据查询语言（DQL），用于查询数据库\"><a href=\"#数据查询语言（DQL），用于查询数据库\" class=\"headerlink\" title=\"数据查询语言（DQL），用于查询数据库\"></a>数据查询语言（DQL），用于查询数据库</h2><p><code>select</code></p>\n<h2 id=\"数据控制语言（DCL），用来管理数据库，包括管理权限和数据更改\"><a href=\"#数据控制语言（DCL），用来管理数据库，包括管理权限和数据更改\" class=\"headerlink\" title=\"数据控制语言（DCL），用来管理数据库，包括管理权限和数据更改\"></a>数据控制语言（DCL），用来管理数据库，包括管理权限和数据更改</h2><p><code>grant、commit、rollback</code></p>\n<h1 id=\"数据库-database-管理\"><a href=\"#数据库-database-管理\" class=\"headerlink\" title=\"数据库(database)管理\"></a>数据库(database)管理</h1><h2 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">database</span> 表名;</div></pre></td></tr></table></figure>","more":"<h2 id=\"show-查看所有数据库\"><a href=\"#show-查看所有数据库\" class=\"headerlink\" title=\"show 查看所有数据库\"></a>show 查看所有数据库</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">databases</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"alter-修改数据库编码\"><a href=\"#alter-修改数据库编码\" class=\"headerlink\" title=\"alter 修改数据库编码\"></a>alter 修改数据库编码</h2><p>默认创建的数据库默认不支持中文字符，如果我们需要它支持中文字符，则将它的编码设置为utf8格式:<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">DATABASE</span> 表名 <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> UTF8;</div></pre></td></tr></table></figure></p>\n<h2 id=\"使用数据库\"><a href=\"#使用数据库\" class=\"headerlink\" title=\"使用数据库\"></a>使用数据库</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">use</span> 库名;</div></pre></td></tr></table></figure>\n<h2 id=\"查看当前使用的数据库\"><a href=\"#查看当前使用的数据库\" class=\"headerlink\" title=\"查看当前使用的数据库\"></a>查看当前使用的数据库</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">database</span>();</div></pre></td></tr></table></figure>\n<h2 id=\"删除数据库\"><a href=\"#删除数据库\" class=\"headerlink\" title=\"删除数据库\"></a>删除数据库</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">database</span> 库名;</div></pre></td></tr></table></figure>\n<h2 id=\"数据库备份\"><a href=\"#数据库备份\" class=\"headerlink\" title=\"数据库备份\"></a>数据库备份</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysqldump -u root -p <span class=\"comment\">--default-character-set=utf8 world &gt; bakWorld.sql;</span></div></pre></td></tr></table></figure>\n<h1 id=\"数据表（table）管理\"><a href=\"#数据表（table）管理\" class=\"headerlink\" title=\"数据表（table）管理\"></a>数据表（table）管理</h1><p>首先创建<code>create</code>数据库，其次<code>use</code>数据库，否则操作都会不成功。</p>\n<h2 id=\"创建表\"><a href=\"#创建表\" class=\"headerlink\" title=\"创建表\"></a>创建表</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> 表名 (</div><div class=\"line\">    <span class=\"keyword\">ID</span> <span class=\"built_in\">int</span> AUTO_INCREMENT PRIMARY <span class=\"keyword\">KEY</span>,</div><div class=\"line\">    <span class=\"keyword\">NAME</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">20</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    AGE <span class=\"built_in\">int</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    BIRTHDAY datetime);</div></pre></td></tr></table></figure>\n<h2 id=\"显示表\"><a href=\"#显示表\" class=\"headerlink\" title=\"显示表\"></a>显示表</h2><p>显示当前数据库所有的数据表<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">tables</span>;</div></pre></td></tr></table></figure></p>\n<h2 id=\"查看表结构\"><a href=\"#查看表结构\" class=\"headerlink\" title=\"查看表结构\"></a>查看表结构</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">desc 表名;</div></pre></td></tr></table></figure>\n<h2 id=\"修改表的编码\"><a href=\"#修改表的编码\" class=\"headerlink\" title=\"修改表的编码\"></a>修改表的编码</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> KEYCHAIN <span class=\"keyword\">CONVERT</span> <span class=\"keyword\">TO</span> <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> UTF8;</div></pre></td></tr></table></figure>\n<h2 id=\"向表中添加字段\"><a href=\"#向表中添加字段\" class=\"headerlink\" title=\"向表中添加字段\"></a>向表中添加字段</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> 表名 <span class=\"keyword\">add</span> 字段名 属性(如：<span class=\"built_in\">int</span>);</div></pre></td></tr></table></figure>\n<h2 id=\"修改表中的字段属性\"><a href=\"#修改表中的字段属性\" class=\"headerlink\" title=\"修改表中的字段属性\"></a>修改表中的字段属性</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> 表名 <span class=\"keyword\">MODIFY</span> 字段名 新属性;</div></pre></td></tr></table></figure>\n<h2 id=\"删除表中的属性\"><a href=\"#删除表中的属性\" class=\"headerlink\" title=\"删除表中的属性\"></a>删除表中的属性</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> 表名 <span class=\"keyword\">DROP</span> <span class=\"keyword\">column</span> 字段名;</div></pre></td></tr></table></figure>\n<h2 id=\"重命名表名\"><a href=\"#重命名表名\" class=\"headerlink\" title=\"重命名表名\"></a>重命名表名</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">RENAME</span> <span class=\"keyword\">TABLE</span> 表名 <span class=\"keyword\">TO</span> 新表名;</div></pre></td></tr></table></figure>\n<h2 id=\"修改表字段允许为空或不允许为空\"><a href=\"#修改表字段允许为空或不允许为空\" class=\"headerlink\" title=\"修改表字段允许为空或不允许为空\"></a>修改表字段允许为空或不允许为空</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> 表名 <span class=\"keyword\">MODIFY</span> 字段名 属性(如：<span class=\"built_in\">int</span>(<span class=\"number\">3</span>)) <span class=\"literal\">null</span>(<span class=\"keyword\">not</span> <span class=\"literal\">null</span>);<span class=\"comment\">-- 允许为空或不允许为空</span></div></pre></td></tr></table></figure>\n<h2 id=\"利用已有数据创建新表\"><a href=\"#利用已有数据创建新表\" class=\"headerlink\" title=\"利用已有数据创建新表\"></a>利用已有数据创建新表</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> 新表名 <span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> 表名;</div></pre></td></tr></table></figure>\n<h2 id=\"删除约束\"><a href=\"#删除约束\" class=\"headerlink\" title=\"删除约束\"></a>删除约束</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 表名 <span class=\"keyword\">DROP</span> <span class=\"keyword\">CONSTRAINT</span> 字段名 <span class=\"keyword\">CASCADE</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"新建主键约束\"><a href=\"#新建主键约束\" class=\"headerlink\" title=\"新建主键约束\"></a>新建主键约束</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> TAB_NAME <span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> PK_NAME PRIMARY <span class=\"keyword\">KEY</span>(FILED,...);</div></pre></td></tr></table></figure>\n<h1 id=\"数据的操作及管理\"><a href=\"#数据的操作及管理\" class=\"headerlink\" title=\"数据的操作及管理\"></a>数据的操作及管理</h1><p>数据表的基本操作，包含增、删、改、查数据。</p>\n<h2 id=\"增加数据\"><a href=\"#增加数据\" class=\"headerlink\" title=\"增加数据\"></a>增加数据</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> 表名 <span class=\"keyword\">VALUES</span> (<span class=\"literal\">null</span>, <span class=\"string\">'1'</span>, <span class=\"number\">2</span>, <span class=\"string\">'3'</span>);</div></pre></td></tr></table></figure>\n<h2 id=\"查看数据\"><a href=\"#查看数据\" class=\"headerlink\" title=\"查看数据\"></a>查看数据</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> 表名;<span class=\"comment\">-- *代表所有字段</span></div></pre></td></tr></table></figure>\n<h2 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a>删除数据</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> 表名 <span class=\"keyword\">where</span> <span class=\"keyword\">name</span> = <span class=\"string\">'xxx'</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"修改数据\"><a href=\"#修改数据\" class=\"headerlink\" title=\"修改数据\"></a>修改数据</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">update</span> 表名 <span class=\"keyword\">set</span> <span class=\"keyword\">name</span>=<span class=\"string\">'xxxx'</span> <span class=\"keyword\">where</span> <span class=\"keyword\">name</span> = <span class=\"string\">'xxx'</span>; <span class=\"comment\">-- xxxx为修改后的数据，xxx为在表中查找的数据</span></div></pre></td></tr></table></figure>\n<h2 id=\"查询手机号码区号以133和135开头的员工的姓名-性别-部门及联系电话\"><a href=\"#查询手机号码区号以133和135开头的员工的姓名-性别-部门及联系电话\" class=\"headerlink\" title=\"查询手机号码区号以133和135开头的员工的姓名,性别,部门及联系电话\"></a>查询手机号码区号以133和135开头的员工的姓名,性别,部门及联系电话</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">name</span> <span class=\"keyword\">as</span> 姓名,sex <span class=\"keyword\">as</span> 性别,department <span class=\"keyword\">as</span> 部门,phone <span class=\"keyword\">as</span> 联系电话 <span class=\"keyword\">from</span> employee <span class=\"keyword\">where</span> phone <span class=\"keyword\">like</span> <span class=\"string\">'133%'</span> <span class=\"keyword\">or</span> phone <span class=\"keyword\">like</span> <span class=\"string\">'135%'</span>;<span class=\"comment\">-- %为通配符 _也是通配符区别在于%为通配之后所有，_为通配后一位 通配需用like关键字</span></div></pre></td></tr></table></figure>\n<ul>\n<li>select 查找不重复（distinct）的数据，使数据按条件排序（order by），按查询条件显示数据（where）</li>\n</ul>\n<h2 id=\"子查询\"><a href=\"#子查询\" class=\"headerlink\" title=\"子查询\"></a>子查询</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> student <span class=\"keyword\">where</span> birthday&gt;(<span class=\"keyword\">select</span> birthday <span class=\"keyword\">from</span> student <span class=\"keyword\">where</span> stuname=<span class=\"string\">'周墨嘉'</span>);</div></pre></td></tr></table></figure>\n<h1 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">length</span>(<span class=\"string\">'老九学堂'</span>); <span class=\"comment\">-- 12, 返回字节数</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">char_length</span>(<span class=\"string\">'你好啊'</span>); <span class=\"comment\">-- 3, 返回字符数</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">position</span>(<span class=\"string\">'def'</span> <span class=\"keyword\">in</span> <span class=\"string\">'abcdefg'</span>); <span class=\"comment\">-- 4, 返回子串substr在字符串str第一个出现的位置，如果substr不是在str里面，返回0  </span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">position</span>(<span class=\"string\">'学堂'</span> <span class=\"keyword\">in</span> <span class=\"string\">'老九学堂'</span>); <span class=\"comment\">-- 3</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">lower</span>(<span class=\"string\">'MySQL数据库'</span>);<span class=\"comment\">-- mysql数据库</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">rtrim</span>(<span class=\"keyword\">ltrim</span>(<span class=\"string\">'   abc   '</span>)); <span class=\"comment\">-- abc,清除左右空格</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">left</span>(<span class=\"string\">'中华人民共和国'</span>,<span class=\"number\">3</span>);<span class=\"comment\">-- 中华人，从字符串左右两边返回指定数目的字符</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">replace</span>(<span class=\"string\">'中华人民共和国'</span>, <span class=\"string\">'人民'</span>, <span class=\"string\">'民众'</span>);<span class=\"comment\">-- 中华民众共和国，字符串替换</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">reverse</span>(<span class=\"string\">'中华人民共和国'</span>); <span class=\"comment\">-- 国和共民人华中, 颠倒字符</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">concat</span>(<span class=\"number\">99</span>, <span class=\"string\">'人斩'</span>);<span class=\"comment\">-- 拼接字符串</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">now</span>();<span class=\"comment\">-- 返回当前日期、时间</span></div><div class=\"line\"><span class=\"keyword\">select</span> adddate(<span class=\"keyword\">now</span>(),<span class=\"built_in\">interval</span> <span class=\"number\">5</span> <span class=\"keyword\">day</span>);<span class=\"comment\">-- 返回5天后的时间</span></div><div class=\"line\"><span class=\"comment\">-- 返回是今年的第几天</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">dayofyear</span>(<span class=\"keyword\">now</span>());</div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">dayofweek</span>(<span class=\"keyword\">now</span>());</div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">day</span>(<span class=\"keyword\">now</span>());</div><div class=\"line\"><span class=\"comment\">-- 日期之差</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">timestampdiff</span>(<span class=\"keyword\">year</span>,<span class=\"string\">'2008-8-8'</span>,<span class=\"keyword\">now</span>());</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">-- 嵌套</span></div><div class=\"line\"><span class=\"keyword\">select</span> (</div><div class=\"line\"><span class=\"keyword\">replace</span>(<span class=\"keyword\">replace</span> (<span class=\"keyword\">replace</span>(loginpwd,<span class=\"string\">'O'</span>,<span class=\"string\">'0'</span>),<span class=\"string\">'l'</span>,<span class=\"string\">'1'</span>),<span class=\"string\">'o'</span>,<span class=\"string\">'0'</span>)</div><div class=\"line\">) <span class=\"keyword\">from</span> Student;</div></pre></td></tr></table></figure>\n<h1 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h1><p>在某公司员工表中，为了节省空间，员工编号是按照“部门编号-员工编号”格式存放的，如：4-7,5-6,1-21,10-11,10-1,1-12,2-10,……,12-21,12-12,14-10,14-7等<br>现在公司希望通过sql语句进行排序，首先按照前半部分的数字进行排序，然后再按照后半部分的数字进行排序，输出结果如下：1-12,1-21,2-10,4-7,5-6,10-1,10-11……,12-12,12-21,14-7,14-10<br>数据表名称：Employee<br>字段名称：EmpId</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">database</span> cardinfo;</div><div class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">DATABASE</span> cardinfo <span class=\"built_in\">CHARACTER</span> <span class=\"keyword\">SET</span> UTF8;</div><div class=\"line\"><span class=\"keyword\">use</span> cardinfo;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> employee(</div><div class=\"line\">    <span class=\"keyword\">id</span> <span class=\"built_in\">int</span>(<span class=\"number\">4</span>) primary <span class=\"keyword\">key</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span> auto_increment,</div><div class=\"line\">    empid <span class=\"built_in\">varchar</span>(<span class=\"number\">20</span>) </div><div class=\"line\">) <span class=\"keyword\">charset</span>=utf8;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> employee(empid) <span class=\"keyword\">values</span></div><div class=\"line\">    (<span class=\"string\">'1-1'</span>),(<span class=\"string\">'2-1'</span>),(<span class=\"string\">'1-3'</span>),(<span class=\"string\">'4-1'</span>),(<span class=\"string\">'1-11'</span>),(<span class=\"string\">'5-22'</span>),(<span class=\"string\">'3-12'</span>),</div><div class=\"line\">    (<span class=\"string\">'6-1'</span>),(<span class=\"string\">'2-12'</span>),(<span class=\"string\">'3-13'</span>),(<span class=\"string\">'5-21'</span>),(<span class=\"string\">'1-7'</span>),(<span class=\"string\">'6-5'</span>),(<span class=\"string\">'3-3'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">select</span> empid <span class=\"keyword\">as</span> 排序,</div><div class=\"line\"><span class=\"keyword\">cast</span>(<span class=\"keyword\">left</span>(empid,<span class=\"keyword\">position</span>(<span class=\"string\">'-'</span> <span class=\"keyword\">in</span> empid)<span class=\"number\">-1</span>) <span class=\"keyword\">as</span> signed) <span class=\"keyword\">as</span> 左边,</div><div class=\"line\"><span class=\"keyword\">cast</span>(<span class=\"keyword\">substr</span>(empid,<span class=\"keyword\">position</span>(<span class=\"string\">'-'</span> <span class=\"keyword\">in</span> empid)+<span class=\"number\">1</span>)<span class=\"keyword\">as</span> signed) <span class=\"keyword\">as</span> 右边</div><div class=\"line\"><span class=\"keyword\">from</span> employee <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> 左边 <span class=\"keyword\">asc</span>,右边 <span class=\"keyword\">asc</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"左向外联接的结果集包括-LEFT-OUTER子句中指定的左表的所有行，而不仅仅是联接列所匹配的行。如果左表的某行在右表中没有匹配行，则在相关联的结果集行中右表的所有选择列表列均为空值。\"><a href=\"#左向外联接的结果集包括-LEFT-OUTER子句中指定的左表的所有行，而不仅仅是联接列所匹配的行。如果左表的某行在右表中没有匹配行，则在相关联的结果集行中右表的所有选择列表列均为空值。\" class=\"headerlink\" title=\"左向外联接的结果集包括  LEFT OUTER子句中指定的左表的所有行，而不仅仅是联接列所匹配的行。如果左表的某行在右表中没有匹配行，则在相关联的结果集行中右表的所有选择列表列均为空值。\"></a>左向外联接的结果集包括  LEFT OUTER子句中指定的左表的所有行，而不仅仅是联接列所匹配的行。如果左表的某行在右表中没有匹配行，则在相关联的结果集行中右表的所有选择列表列均为空值。</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> st.stuname 姓名,st.identity_card 身份证,sc.SubjectID,<span class=\"keyword\">if</span>(<span class=\"keyword\">isnull</span>(sc.score),<span class=\"string\">'缺考'</span>,sc.score) <span class=\"keyword\">as</span> <span class=\"string\">'成绩'</span>  <span class=\"keyword\">from</span> </div><div class=\"line\">student st <span class=\"keyword\">left</span> <span class=\"keyword\">join</span> score sc <span class=\"keyword\">on</span>(st.stuid=sc.stuid) <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> st.stuname;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">-- 显示如下</span></div><div class=\"line\"></div><div class=\"line\">    +<span class=\"comment\">-----------+------------------+-----------+--------+</span></div><div class=\"line\">    | 姓名      | 身份证           | SubjectID | 成绩   |</div><div class=\"line\">    +<span class=\"comment\">-----------+------------------+-----------+--------+</span></div><div class=\"line\">    | 周墨嘉    | 510123323333333x |      NULL | 缺考   |</div><div class=\"line\">    | 李彤彤    | 510123325555555x |         2 | 81     |</div><div class=\"line\">    | 陈天乐    | 510123322222222x |         3 | 90     |</div><div class=\"line\">    | 陈天乐    | 510123322222222x |         2 | 60     |</div><div class=\"line\">    | 陈天乐    | 510123322222222x |         1 | 85     |</div><div class=\"line\">    | 马云      | 510128349124793  |      NULL | 缺考   |</div><div class=\"line\">    | 黄诗怡    | 510123324444444x |         2 | 63     |</div><div class=\"line\">    | 黄颖琦    | 510123321111111x |         1 | 80     |</div><div class=\"line\">    | 黄颖琦    | 510123321111111x |         3 | 78     |</div><div class=\"line\">    | 黄颖琦    | 510123321111111x |         2 | 55     |</div><div class=\"line\">    +<span class=\"comment\">-----------+------------------+-----------+--------+</span></div><div class=\"line\">    10 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.01</span> sec)</div></pre></td></tr></table></figure>\n<p><span style=\"color: red\">left 是以左边为主 显示全部内容，右边的表为辅，右边的表若没有值则显示为空。同理right</span></p>\n<h1 id=\"JDBC\"><a href=\"#JDBC\" class=\"headerlink\" title=\"JDBC\"></a>JDBC</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 使用PreparedStatement防注入</span></div><div class=\"line\"><span class=\"comment\">// 加载驱动</span></div><div class=\"line\">Class.forName(<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>);</div><div class=\"line\"><span class=\"comment\">//创建连接</span></div><div class=\"line\">Connection con=DriverManager.getConnection(<span class=\"string\">\"jdbc:mysql://localhost:3306/school\"</span>,<span class=\"string\">\"服务器名\"</span>,<span class=\"string\">\"数据库密码\"</span>);</div><div class=\"line\"><span class=\"comment\">//3、执行sql语句</span></div><div class=\"line\">String querySql=<span class=\"string\">\"select * from grade where id=? and grade_name=?\"</span>;</div><div class=\"line\">PreparedStatement pst=con.prepareStatement(querySql);</div><div class=\"line\">pst.setInt(<span class=\"number\">1</span>,<span class=\"number\">2</span>);<span class=\"comment\">//第一个参数表示第几个问号，第二个参数表示参数的值</span></div><div class=\"line\">pst.setString(<span class=\"number\">2</span>,<span class=\"string\">\"十一年级\"</span>);</div><div class=\"line\">ResultSet rs =pst.executeQuery();</div><div class=\"line\"><span class=\"comment\">//pst.executeUpdate();修改、删除、新增使用这个方法</span></div><div class=\"line\"><span class=\"keyword\">while</span>(rs.next())&#123;</div><div class=\"line\">    System.out.println(rs.getInt(<span class=\"number\">1</span>)+<span class=\"string\">\"\\t\"</span>+rs.getString(<span class=\"number\">2</span>));</div><div class=\"line\">&#125;</div><div class=\"line\">rs.close();</div><div class=\"line\">pst.close();</div><div class=\"line\">con.close();</div></pre></td></tr></table></figure>"},{"title":"vue中使用protobuf踩坑记","date":"2018-06-27T02:16:22.000Z","keywords":"vue protobuf","_content":"> 因公司需求需使用protobuf，然后就有了这个踩坑记录\n\n# 什么是protobuf？\n官方解释为：\n> Protocol buffers are a flexible, efficient, automated mechanism for serializing structured data – think XML, but smaller, faster, and simpler. You define how you want your data to be structured once, then you can use special generated source code to easily write and read your structured data to and from a variety of data streams and using a variety of languages. You can even update your data structure without breaking deployed programs that are compiled against the \"old\" format.\n\n翻译是(机翻---我英语不好)\n> 协议缓冲区是用于序列化结构化数据的灵活，高效的自动化机制 - 思考XML，但更小，更快，更简单。您可以定义一次数据的结构，然后您可以使用特殊的源代码轻松地将结构化数据写入各种数据流并使用各种语言读取和读取数据。您甚至可以更新您的数据结构，而不会中断根据“旧”格式编译的已部署程序。\n\n特点：\n- 更简单\n- 是3到10倍小\n- 速度要快20到100倍\n- 不太模糊\n- 生成更易于以编程方式使用的数据访问类\n\n# 代码\n> 在github上写了个demo\n> [demo地址](https://github.com/rsl140/work_notes_demo/tree/master/proto_demo) 有需要的可以下载下来跑一下就理解了。PS:如果觉得有用 请给我个小星星 (笔芯~)\n\n# 使用\n\n其实最开始我尝试使用一个第三方JS  [protobuf.js](https://github.com/dcodeIO/protobuf.js)\n`protobuf.load`的时候浏览器报了个错[illegal token '<' (/demo.proto, line 1)](https://github.com/dcodeIO/protobuf.js/issues/1023)查找了下官网issue,大意应该是proto文件多了个字符，但是我查看过proto文件并没有发现有多的'<'，怎么办呢，最后放弃使用第三方。用官方提供的方法。\n\n## 下载protobuf编译器\n[下载地址](https://repo1.maven.org/maven2/com/google/protobuf/protoc/) (我下载的是3.40版)\n[github也提供了zip包，可自行下载](https://github.com/google/protobuf/releases) (目前最新版本是v3.6.0)\n用来编译proto为JS文件方便调用\n\n## 配置环境变量\n由于公司用的是win10 只需要将下载的文件地址添加到path即可\nMac与window命令唯一的区别就是需要将protoc改成protoc.exe 前提是需要添加环境变量\n[配置环境可参考这篇文章](https://www.jianshu.com/p/e63082e9188d)\n\n## 编写proto文件\n\n为了确保前后一致，下面是后台写给我的一个测试proto，我司后台是java\n``` bash\nsyntax = \"proto2\";//protobuf版本\noption java_package = \"com.test.protobuf\";\noption java_outer_classname = \"PersonMessage\";\nmessage Person {\n  required int32 id = 1;\n  optional string name = 2;\n  optional string email = 3;\n  repeated string list = 4;\n  extensions 100 to 1000;//允许扩展的ID\n}\n\nmessage PersonTree {\n  optional string id = 1;\n  optional string title = 2;\n  repeated PersonTree childs = 3;\n}\n\nextend Person {\n  optional int32 count = 101;\n  optional int32 likes_cnt= 102;\n}\n\nmessage PersonEx {\n  optional int32 id = 1;\n  extend Person {\n    optional int32 px = 103;\n    optional int32 py= 104;\n  }\n  optional Person p = 2;\n}\n```\n## 使用vue-cli构建一个工程目录\n``` bash\nnpm install -g vue-cli\nvue init webpack my-project\ncd my-project\nnpm install\nnpm run dev\n```\n安装插件：`npm install axios element-ui google-protobuf --save`\n\n## 编译proto为JS\n进入`awesome.proto`的存放路径 使用如下命令\n`protoc.exe --js_out=import_style=commonjs,binary:. awesome.proto`\n- 会生成一个`awesome_pb.js`文件\n- 点击查看`awesome_pb.js`其实可以看到里面是生成好的方法。只需要在页面中引入JS调用即可\n\n之后我们将这个文件引入页面，当然你也可以考虑全局引用\n\n\n\n\n## 测试\n\n### 本地测试\n编写一个测试页面,创建一个测试按钮\n我是在测试页面`import messages from './awesome_pb.js'`\n方法为：\n``` js\nmethods: {\n    protobufferTest () {\n      var message = new messages.Person() // 调用Person对象  实例化\n      // 赋值\n      message.setId(23)\n      message.setName('asd')\n      // 序列化\n      var bytes = message.serializeBinary()\n\n      console.log(bytes) // Uint8Array(7) [8, 23, 18, 3, 97, 115, 100]\n\n      // 反序列化\n      var message2 = messages.Person.deserializeBinary(bytes)\n\n      console.log(message2) // proto.PersonTree {wrappers_: null, messageId_: undefined, arrayIndexOffset_: -1, array: Array(3), pivot_: 1.7976931348623157e+308, …}\n\n    }\n  }\n```\n到此，本地测试完成，没什么毛病了。\n\n### 前后端联调测试\n前方有坑\n\n前后传输是使用的FormData，然后悲剧的事情来了。后台解析不了。查看了下数据 `[8, 23, 18, 3, 97, 115, 100]`确实是传过去了。\n<del> 后来排查出原因是应该是解析成了字符串，然后数值变了。所以解析不出来。\n后来使用fromCharCode()方法编辑成字符串形式传输给后台。在使用charCodeAt()取值。\n``` js\n此方法已弃用\nprotobufferTest () {\n      var message = new messages.Person() // 调用Person对象  实例化\n      // 赋值\n      message.setId(23)\n      message.setName('asd')\n      // 序列化\n      var bytes = message.serializeBinary()\n\n      console.log(bytes) // Uint8Array(7) [8, 23, 18, 3, 97, 115, 100]\n\n      var tests = ''\n      for (let index = 0; index < bytes.length; index++) {\n        tests += String.fromCharCode(bytes[index])\n      }\n      console.log(tests) // \b\u0017\u0012\u0003asd\n\n      // 存入FormData\n      let uploadDatas = new FormData()\n      uploadDatas.append('protobuf', tests)\n\n      // 使用axios传输给后台\n      this.axios.post('/test', uploadDatas)\n        .then(function (response) {\n          // 将传回的字符串转为数组\n          console.log(response.data.split('')) // [\"↵\", \"\u0002\", \"3\", \"2\", \"\u0012\", \"\u0004\", \"a\", \"s\", \"d\", \"f\"]\n          let str = response.data.split('')\n          let toChar = []\n          for (let index = 0; index < str.length; index++) {\n            toChar.push(str[index].charCodeAt())\n          }\n          console.log(toChar) // [10, 2, 51, 50, 18, 4, 97, 115, 100, 102]\n\n          // 后台传回来的是PersonTree里面的值所以调用PersonTree来反序列化\n          var message2 = messages.PersonTree.deserializeBinary(toChar)\n\n          console.log(message2) // proto.PersonTree {wrappers_: null, messageId_: undefined, arrayIndexOffset_: -1, array: Array(3), pivot_: 1.7976931348623157e+308, …}\n\n          // 获取PersonTree的id值\n          console.log(message2.getId()) // 32\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n\n    }\n```\n</del>\n\n以上方法可能存在安全隐患。\n向后端传值\n因为FormData支持两种方式传输string和blob所以将bytes存入blob中\n前端获取数据\n对axios的默认传输方式做个更改\naxios.defaults.responseType = 'arraybuffer'\n将以上的JS代码更改为以下内容\n``` js\nprotobufferTest () {\n      var message = new messages.Person()\n      message.setId(23)\n      message.setName('asd')\n      var bytes = message.serializeBinary()\n\n      console.log(bytes)\n      let uploadDatas = new FormData()\n      var blob = new Blob([bytes], {type: 'application/octet-stream'})\n\n      uploadDatas.append('protobuf', blob)\n\n      this.axios.post('/test', uploadDatas)\n        .then(function (response) {\n          console.log(response)\n\n          var message2 = messages.PersonTree.deserializeBinary(response.data)\n          console.log(message2.getId())\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n      // console.log(bytes)\n    }\n\n```\n至此前后联调完成\n\n# 参考文档\n[前端后台以及游戏中使用google-protobuf详解](https://www.jianshu.com/p/e63082e9188d)\n[javascript前端如何使用google-protobuf](https://blog.csdn.net/arvin_kai/article/details/77532595)\n\n\n","source":"_posts/protobuf.md","raw":"---\ntitle: vue中使用protobuf踩坑记\ndate: 2018-06-27 10:16:22\ntags: vue\ncategories: FE\nkeywords: vue protobuf\n---\n> 因公司需求需使用protobuf，然后就有了这个踩坑记录\n\n# 什么是protobuf？\n官方解释为：\n> Protocol buffers are a flexible, efficient, automated mechanism for serializing structured data – think XML, but smaller, faster, and simpler. You define how you want your data to be structured once, then you can use special generated source code to easily write and read your structured data to and from a variety of data streams and using a variety of languages. You can even update your data structure without breaking deployed programs that are compiled against the \"old\" format.\n\n翻译是(机翻---我英语不好)\n> 协议缓冲区是用于序列化结构化数据的灵活，高效的自动化机制 - 思考XML，但更小，更快，更简单。您可以定义一次数据的结构，然后您可以使用特殊的源代码轻松地将结构化数据写入各种数据流并使用各种语言读取和读取数据。您甚至可以更新您的数据结构，而不会中断根据“旧”格式编译的已部署程序。\n\n特点：\n- 更简单\n- 是3到10倍小\n- 速度要快20到100倍\n- 不太模糊\n- 生成更易于以编程方式使用的数据访问类\n\n# 代码\n> 在github上写了个demo\n> [demo地址](https://github.com/rsl140/work_notes_demo/tree/master/proto_demo) 有需要的可以下载下来跑一下就理解了。PS:如果觉得有用 请给我个小星星 (笔芯~)\n\n# 使用\n\n其实最开始我尝试使用一个第三方JS  [protobuf.js](https://github.com/dcodeIO/protobuf.js)\n`protobuf.load`的时候浏览器报了个错[illegal token '<' (/demo.proto, line 1)](https://github.com/dcodeIO/protobuf.js/issues/1023)查找了下官网issue,大意应该是proto文件多了个字符，但是我查看过proto文件并没有发现有多的'<'，怎么办呢，最后放弃使用第三方。用官方提供的方法。\n\n## 下载protobuf编译器\n[下载地址](https://repo1.maven.org/maven2/com/google/protobuf/protoc/) (我下载的是3.40版)\n[github也提供了zip包，可自行下载](https://github.com/google/protobuf/releases) (目前最新版本是v3.6.0)\n用来编译proto为JS文件方便调用\n\n## 配置环境变量\n由于公司用的是win10 只需要将下载的文件地址添加到path即可\nMac与window命令唯一的区别就是需要将protoc改成protoc.exe 前提是需要添加环境变量\n[配置环境可参考这篇文章](https://www.jianshu.com/p/e63082e9188d)\n\n## 编写proto文件\n\n为了确保前后一致，下面是后台写给我的一个测试proto，我司后台是java\n``` bash\nsyntax = \"proto2\";//protobuf版本\noption java_package = \"com.test.protobuf\";\noption java_outer_classname = \"PersonMessage\";\nmessage Person {\n  required int32 id = 1;\n  optional string name = 2;\n  optional string email = 3;\n  repeated string list = 4;\n  extensions 100 to 1000;//允许扩展的ID\n}\n\nmessage PersonTree {\n  optional string id = 1;\n  optional string title = 2;\n  repeated PersonTree childs = 3;\n}\n\nextend Person {\n  optional int32 count = 101;\n  optional int32 likes_cnt= 102;\n}\n\nmessage PersonEx {\n  optional int32 id = 1;\n  extend Person {\n    optional int32 px = 103;\n    optional int32 py= 104;\n  }\n  optional Person p = 2;\n}\n```\n## 使用vue-cli构建一个工程目录\n``` bash\nnpm install -g vue-cli\nvue init webpack my-project\ncd my-project\nnpm install\nnpm run dev\n```\n安装插件：`npm install axios element-ui google-protobuf --save`\n\n## 编译proto为JS\n进入`awesome.proto`的存放路径 使用如下命令\n`protoc.exe --js_out=import_style=commonjs,binary:. awesome.proto`\n- 会生成一个`awesome_pb.js`文件\n- 点击查看`awesome_pb.js`其实可以看到里面是生成好的方法。只需要在页面中引入JS调用即可\n\n之后我们将这个文件引入页面，当然你也可以考虑全局引用\n\n\n\n\n## 测试\n\n### 本地测试\n编写一个测试页面,创建一个测试按钮\n我是在测试页面`import messages from './awesome_pb.js'`\n方法为：\n``` js\nmethods: {\n    protobufferTest () {\n      var message = new messages.Person() // 调用Person对象  实例化\n      // 赋值\n      message.setId(23)\n      message.setName('asd')\n      // 序列化\n      var bytes = message.serializeBinary()\n\n      console.log(bytes) // Uint8Array(7) [8, 23, 18, 3, 97, 115, 100]\n\n      // 反序列化\n      var message2 = messages.Person.deserializeBinary(bytes)\n\n      console.log(message2) // proto.PersonTree {wrappers_: null, messageId_: undefined, arrayIndexOffset_: -1, array: Array(3), pivot_: 1.7976931348623157e+308, …}\n\n    }\n  }\n```\n到此，本地测试完成，没什么毛病了。\n\n### 前后端联调测试\n前方有坑\n\n前后传输是使用的FormData，然后悲剧的事情来了。后台解析不了。查看了下数据 `[8, 23, 18, 3, 97, 115, 100]`确实是传过去了。\n<del> 后来排查出原因是应该是解析成了字符串，然后数值变了。所以解析不出来。\n后来使用fromCharCode()方法编辑成字符串形式传输给后台。在使用charCodeAt()取值。\n``` js\n此方法已弃用\nprotobufferTest () {\n      var message = new messages.Person() // 调用Person对象  实例化\n      // 赋值\n      message.setId(23)\n      message.setName('asd')\n      // 序列化\n      var bytes = message.serializeBinary()\n\n      console.log(bytes) // Uint8Array(7) [8, 23, 18, 3, 97, 115, 100]\n\n      var tests = ''\n      for (let index = 0; index < bytes.length; index++) {\n        tests += String.fromCharCode(bytes[index])\n      }\n      console.log(tests) // \b\u0017\u0012\u0003asd\n\n      // 存入FormData\n      let uploadDatas = new FormData()\n      uploadDatas.append('protobuf', tests)\n\n      // 使用axios传输给后台\n      this.axios.post('/test', uploadDatas)\n        .then(function (response) {\n          // 将传回的字符串转为数组\n          console.log(response.data.split('')) // [\"↵\", \"\u0002\", \"3\", \"2\", \"\u0012\", \"\u0004\", \"a\", \"s\", \"d\", \"f\"]\n          let str = response.data.split('')\n          let toChar = []\n          for (let index = 0; index < str.length; index++) {\n            toChar.push(str[index].charCodeAt())\n          }\n          console.log(toChar) // [10, 2, 51, 50, 18, 4, 97, 115, 100, 102]\n\n          // 后台传回来的是PersonTree里面的值所以调用PersonTree来反序列化\n          var message2 = messages.PersonTree.deserializeBinary(toChar)\n\n          console.log(message2) // proto.PersonTree {wrappers_: null, messageId_: undefined, arrayIndexOffset_: -1, array: Array(3), pivot_: 1.7976931348623157e+308, …}\n\n          // 获取PersonTree的id值\n          console.log(message2.getId()) // 32\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n\n    }\n```\n</del>\n\n以上方法可能存在安全隐患。\n向后端传值\n因为FormData支持两种方式传输string和blob所以将bytes存入blob中\n前端获取数据\n对axios的默认传输方式做个更改\naxios.defaults.responseType = 'arraybuffer'\n将以上的JS代码更改为以下内容\n``` js\nprotobufferTest () {\n      var message = new messages.Person()\n      message.setId(23)\n      message.setName('asd')\n      var bytes = message.serializeBinary()\n\n      console.log(bytes)\n      let uploadDatas = new FormData()\n      var blob = new Blob([bytes], {type: 'application/octet-stream'})\n\n      uploadDatas.append('protobuf', blob)\n\n      this.axios.post('/test', uploadDatas)\n        .then(function (response) {\n          console.log(response)\n\n          var message2 = messages.PersonTree.deserializeBinary(response.data)\n          console.log(message2.getId())\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n      // console.log(bytes)\n    }\n\n```\n至此前后联调完成\n\n# 参考文档\n[前端后台以及游戏中使用google-protobuf详解](https://www.jianshu.com/p/e63082e9188d)\n[javascript前端如何使用google-protobuf](https://blog.csdn.net/arvin_kai/article/details/77532595)\n\n\n","slug":"protobuf","published":1,"updated":"2019-02-12T08:47:39.707Z","_id":"cjs1is1k4001dcdonhlsbvu91","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>因公司需求需使用protobuf，然后就有了这个踩坑记录</p>\n</blockquote>\n<h1 id=\"什么是protobuf？\"><a href=\"#什么是protobuf？\" class=\"headerlink\" title=\"什么是protobuf？\"></a>什么是protobuf？</h1><p>官方解释为：</p>\n<blockquote>\n<p>Protocol buffers are a flexible, efficient, automated mechanism for serializing structured data – think XML, but smaller, faster, and simpler. You define how you want your data to be structured once, then you can use special generated source code to easily write and read your structured data to and from a variety of data streams and using a variety of languages. You can even update your data structure without breaking deployed programs that are compiled against the “old” format.</p>\n</blockquote>\n<p>翻译是(机翻—我英语不好)</p>\n<blockquote>\n<p>协议缓冲区是用于序列化结构化数据的灵活，高效的自动化机制 - 思考XML，但更小，更快，更简单。您可以定义一次数据的结构，然后您可以使用特殊的源代码轻松地将结构化数据写入各种数据流并使用各种语言读取和读取数据。您甚至可以更新您的数据结构，而不会中断根据“旧”格式编译的已部署程序。</p>\n</blockquote>\n<p>特点：</p>\n<ul>\n<li>更简单</li>\n<li>是3到10倍小</li>\n<li>速度要快20到100倍</li>\n<li>不太模糊</li>\n<li>生成更易于以编程方式使用的数据访问类</li>\n</ul>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><blockquote>\n<p>在github上写了个demo<br><a href=\"https://github.com/rsl140/work_notes_demo/tree/master/proto_demo\" target=\"_blank\" rel=\"external\">demo地址</a> 有需要的可以下载下来跑一下就理解了。PS:如果觉得有用 请给我个小星星 (笔芯~)</p>\n</blockquote>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>其实最开始我尝试使用一个第三方JS  <a href=\"https://github.com/dcodeIO/protobuf.js\" target=\"_blank\" rel=\"external\">protobuf.js</a><br><code>protobuf.load</code>的时候浏览器报了个错<a href=\"https://github.com/dcodeIO/protobuf.js/issues/1023\" target=\"_blank\" rel=\"external\">illegal token ‘&lt;’ (/demo.proto, line 1)</a>查找了下官网issue,大意应该是proto文件多了个字符，但是我查看过proto文件并没有发现有多的’&lt;’，怎么办呢，最后放弃使用第三方。用官方提供的方法。</p>\n<h2 id=\"下载protobuf编译器\"><a href=\"#下载protobuf编译器\" class=\"headerlink\" title=\"下载protobuf编译器\"></a>下载protobuf编译器</h2><p><a href=\"https://repo1.maven.org/maven2/com/google/protobuf/protoc/\" target=\"_blank\" rel=\"external\">下载地址</a> (我下载的是3.40版)<br><a href=\"https://github.com/google/protobuf/releases\" target=\"_blank\" rel=\"external\">github也提供了zip包，可自行下载</a> (目前最新版本是v3.6.0)<br>用来编译proto为JS文件方便调用</p>\n<h2 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h2><p>由于公司用的是win10 只需要将下载的文件地址添加到path即可<br>Mac与window命令唯一的区别就是需要将protoc改成protoc.exe 前提是需要添加环境变量<br><a href=\"https://www.jianshu.com/p/e63082e9188d\" target=\"_blank\" rel=\"external\">配置环境可参考这篇文章</a></p>\n<h2 id=\"编写proto文件\"><a href=\"#编写proto文件\" class=\"headerlink\" title=\"编写proto文件\"></a>编写proto文件</h2><p>为了确保前后一致，下面是后台写给我的一个测试proto，我司后台是java<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">syntax = <span class=\"string\">\"proto2\"</span>;//protobuf版本</div><div class=\"line\">option java_package = <span class=\"string\">\"com.test.protobuf\"</span>;</div><div class=\"line\">option java_outer_classname = <span class=\"string\">\"PersonMessage\"</span>;</div><div class=\"line\">message Person &#123;</div><div class=\"line\">  required int32 id = 1;</div><div class=\"line\">  optional string name = 2;</div><div class=\"line\">  optional string email = 3;</div><div class=\"line\">  repeated string list = 4;</div><div class=\"line\">  extensions 100 to 1000;//允许扩展的ID</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">message PersonTree &#123;</div><div class=\"line\">  optional string id = 1;</div><div class=\"line\">  optional string title = 2;</div><div class=\"line\">  repeated PersonTree childs = 3;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">extend Person &#123;</div><div class=\"line\">  optional int32 count = 101;</div><div class=\"line\">  optional int32 likes_cnt= 102;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">message PersonEx &#123;</div><div class=\"line\">  optional int32 id = 1;</div><div class=\"line\">  extend Person &#123;</div><div class=\"line\">    optional int32 px = 103;</div><div class=\"line\">    optional int32 py= 104;</div><div class=\"line\">  &#125;</div><div class=\"line\">  optional Person p = 2;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"使用vue-cli构建一个工程目录\"><a href=\"#使用vue-cli构建一个工程目录\" class=\"headerlink\" title=\"使用vue-cli构建一个工程目录\"></a>使用vue-cli构建一个工程目录</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g vue-cli</div><div class=\"line\">vue init webpack my-project</div><div class=\"line\"><span class=\"built_in\">cd</span> my-project</div><div class=\"line\">npm install</div><div class=\"line\">npm run dev</div></pre></td></tr></table></figure>\n<p>安装插件：<code>npm install axios element-ui google-protobuf --save</code></p>\n<h2 id=\"编译proto为JS\"><a href=\"#编译proto为JS\" class=\"headerlink\" title=\"编译proto为JS\"></a>编译proto为JS</h2><p>进入<code>awesome.proto</code>的存放路径 使用如下命令<br><code>protoc.exe --js_out=import_style=commonjs,binary:. awesome.proto</code></p>\n<ul>\n<li>会生成一个<code>awesome_pb.js</code>文件</li>\n<li>点击查看<code>awesome_pb.js</code>其实可以看到里面是生成好的方法。只需要在页面中引入JS调用即可</li>\n</ul>\n<p>之后我们将这个文件引入页面，当然你也可以考虑全局引用</p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><h3 id=\"本地测试\"><a href=\"#本地测试\" class=\"headerlink\" title=\"本地测试\"></a>本地测试</h3><p>编写一个测试页面,创建一个测试按钮<br>我是在测试页面<code>import messages from &#39;./awesome_pb.js&#39;</code><br>方法为：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">methods: &#123;</div><div class=\"line\">    protobufferTest () &#123;</div><div class=\"line\">      <span class=\"keyword\">var</span> message = <span class=\"keyword\">new</span> messages.Person() <span class=\"comment\">// 调用Person对象  实例化</span></div><div class=\"line\">      <span class=\"comment\">// 赋值</span></div><div class=\"line\">      message.setId(<span class=\"number\">23</span>)</div><div class=\"line\">      message.setName(<span class=\"string\">'asd'</span>)</div><div class=\"line\">      <span class=\"comment\">// 序列化</span></div><div class=\"line\">      <span class=\"keyword\">var</span> bytes = message.serializeBinary()</div><div class=\"line\"></div><div class=\"line\">      <span class=\"built_in\">console</span>.log(bytes) <span class=\"comment\">// Uint8Array(7) [8, 23, 18, 3, 97, 115, 100]</span></div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">// 反序列化</span></div><div class=\"line\">      <span class=\"keyword\">var</span> message2 = messages.Person.deserializeBinary(bytes)</div><div class=\"line\"></div><div class=\"line\">      <span class=\"built_in\">console</span>.log(message2) <span class=\"comment\">// proto.PersonTree &#123;wrappers_: null, messageId_: undefined, arrayIndexOffset_: -1, array: Array(3), pivot_: 1.7976931348623157e+308, …&#125;</span></div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure></p>\n<p>到此，本地测试完成，没什么毛病了。</p>\n<h3 id=\"前后端联调测试\"><a href=\"#前后端联调测试\" class=\"headerlink\" title=\"前后端联调测试\"></a>前后端联调测试</h3><p>前方有坑</p>\n<p>前后传输是使用的FormData，然后悲剧的事情来了。后台解析不了。查看了下数据 <code>[8, 23, 18, 3, 97, 115, 100]</code>确实是传过去了。<br><del> 后来排查出原因是应该是解析成了字符串，然后数值变了。所以解析不出来。<br>后来使用fromCharCode()方法编辑成字符串形式传输给后台。在使用charCodeAt()取值。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\">此方法已弃用</div><div class=\"line\">protobufferTest () &#123;</div><div class=\"line\">      <span class=\"keyword\">var</span> message = <span class=\"keyword\">new</span> messages.Person() <span class=\"comment\">// 调用Person对象  实例化</span></div><div class=\"line\">      <span class=\"comment\">// 赋值</span></div><div class=\"line\">      message.setId(<span class=\"number\">23</span>)</div><div class=\"line\">      message.setName(<span class=\"string\">'asd'</span>)</div><div class=\"line\">      <span class=\"comment\">// 序列化</span></div><div class=\"line\">      <span class=\"keyword\">var</span> bytes = message.serializeBinary()</div><div class=\"line\"></div><div class=\"line\">      <span class=\"built_in\">console</span>.log(bytes) <span class=\"comment\">// Uint8Array(7) [8, 23, 18, 3, 97, 115, 100]</span></div><div class=\"line\"></div><div class=\"line\">      <span class=\"keyword\">var</span> tests = <span class=\"string\">''</span></div><div class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> index = <span class=\"number\">0</span>; index &lt; bytes.length; index++) &#123;</div><div class=\"line\">        tests += <span class=\"built_in\">String</span>.fromCharCode(bytes[index])</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(tests) <span class=\"comment\">// \b\u0017\u0012\u0003asd</span></div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">// 存入FormData</span></div><div class=\"line\">      <span class=\"keyword\">let</span> uploadDatas = <span class=\"keyword\">new</span> FormData()</div><div class=\"line\">      uploadDatas.append(<span class=\"string\">'protobuf'</span>, tests)</div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">// 使用axios传输给后台</span></div><div class=\"line\">      <span class=\"keyword\">this</span>.axios.post(<span class=\"string\">'/test'</span>, uploadDatas)</div><div class=\"line\">        .then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">response</span>) </span>&#123;</div><div class=\"line\">          <span class=\"comment\">// 将传回的字符串转为数组</span></div><div class=\"line\">          <span class=\"built_in\">console</span>.log(response.data.split(<span class=\"string\">''</span>)) <span class=\"comment\">// [\"↵\", \"\u0002\", \"3\", \"2\", \"\u0012\", \"\u0004\", \"a\", \"s\", \"d\", \"f\"]</span></div><div class=\"line\">          <span class=\"keyword\">let</span> str = response.data.split(<span class=\"string\">''</span>)</div><div class=\"line\">          <span class=\"keyword\">let</span> toChar = []</div><div class=\"line\">          <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> index = <span class=\"number\">0</span>; index &lt; str.length; index++) &#123;</div><div class=\"line\">            toChar.push(str[index].charCodeAt())</div><div class=\"line\">          &#125;</div><div class=\"line\">          <span class=\"built_in\">console</span>.log(toChar) <span class=\"comment\">// [10, 2, 51, 50, 18, 4, 97, 115, 100, 102]</span></div><div class=\"line\"></div><div class=\"line\">          <span class=\"comment\">// 后台传回来的是PersonTree里面的值所以调用PersonTree来反序列化</span></div><div class=\"line\">          <span class=\"keyword\">var</span> message2 = messages.PersonTree.deserializeBinary(toChar)</div><div class=\"line\"></div><div class=\"line\">          <span class=\"built_in\">console</span>.log(message2) <span class=\"comment\">// proto.PersonTree &#123;wrappers_: null, messageId_: undefined, arrayIndexOffset_: -1, array: Array(3), pivot_: 1.7976931348623157e+308, …&#125;</span></div><div class=\"line\"></div><div class=\"line\">          <span class=\"comment\">// 获取PersonTree的id值</span></div><div class=\"line\">          <span class=\"built_in\">console</span>.log(message2.getId()) <span class=\"comment\">// 32</span></div><div class=\"line\">        &#125;)</div><div class=\"line\">        .catch(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error</span>) </span>&#123;</div><div class=\"line\">          <span class=\"built_in\">console</span>.log(error)</div><div class=\"line\">        &#125;)</div><div class=\"line\"></div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></del></p>\n<p></p>\n<p>以上方法可能存在安全隐患。<br>向后端传值<br>因为FormData支持两种方式传输string和blob所以将bytes存入blob中<br>前端获取数据<br>对axios的默认传输方式做个更改<br>axios.defaults.responseType = ‘arraybuffer’<br>将以上的JS代码更改为以下内容<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">protobufferTest () &#123;</div><div class=\"line\">      <span class=\"keyword\">var</span> message = <span class=\"keyword\">new</span> messages.Person()</div><div class=\"line\">      message.setId(<span class=\"number\">23</span>)</div><div class=\"line\">      message.setName(<span class=\"string\">'asd'</span>)</div><div class=\"line\">      <span class=\"keyword\">var</span> bytes = message.serializeBinary()</div><div class=\"line\"></div><div class=\"line\">      <span class=\"built_in\">console</span>.log(bytes)</div><div class=\"line\">      <span class=\"keyword\">let</span> uploadDatas = <span class=\"keyword\">new</span> FormData()</div><div class=\"line\">      <span class=\"keyword\">var</span> blob = <span class=\"keyword\">new</span> Blob([bytes], &#123;<span class=\"attr\">type</span>: <span class=\"string\">'application/octet-stream'</span>&#125;)</div><div class=\"line\"></div><div class=\"line\">      uploadDatas.append(<span class=\"string\">'protobuf'</span>, blob)</div><div class=\"line\"></div><div class=\"line\">      <span class=\"keyword\">this</span>.axios.post(<span class=\"string\">'/test'</span>, uploadDatas)</div><div class=\"line\">        .then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">response</span>) </span>&#123;</div><div class=\"line\">          <span class=\"built_in\">console</span>.log(response)</div><div class=\"line\"></div><div class=\"line\">          <span class=\"keyword\">var</span> message2 = messages.PersonTree.deserializeBinary(response.data)</div><div class=\"line\">          <span class=\"built_in\">console</span>.log(message2.getId())</div><div class=\"line\">        &#125;)</div><div class=\"line\">        .catch(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error</span>) </span>&#123;</div><div class=\"line\">          <span class=\"built_in\">console</span>.log(error)</div><div class=\"line\">        &#125;)</div><div class=\"line\">      <span class=\"comment\">// console.log(bytes)</span></div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>至此前后联调完成</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><p><a href=\"https://www.jianshu.com/p/e63082e9188d\" target=\"_blank\" rel=\"external\">前端后台以及游戏中使用google-protobuf详解</a><br><a href=\"https://blog.csdn.net/arvin_kai/article/details/77532595\" target=\"_blank\" rel=\"external\">javascript前端如何使用google-protobuf</a></p>\n","excerpt":"","more":"<blockquote>\n<p>因公司需求需使用protobuf，然后就有了这个踩坑记录</p>\n</blockquote>\n<h1 id=\"什么是protobuf？\"><a href=\"#什么是protobuf？\" class=\"headerlink\" title=\"什么是protobuf？\"></a>什么是protobuf？</h1><p>官方解释为：</p>\n<blockquote>\n<p>Protocol buffers are a flexible, efficient, automated mechanism for serializing structured data – think XML, but smaller, faster, and simpler. You define how you want your data to be structured once, then you can use special generated source code to easily write and read your structured data to and from a variety of data streams and using a variety of languages. You can even update your data structure without breaking deployed programs that are compiled against the “old” format.</p>\n</blockquote>\n<p>翻译是(机翻—我英语不好)</p>\n<blockquote>\n<p>协议缓冲区是用于序列化结构化数据的灵活，高效的自动化机制 - 思考XML，但更小，更快，更简单。您可以定义一次数据的结构，然后您可以使用特殊的源代码轻松地将结构化数据写入各种数据流并使用各种语言读取和读取数据。您甚至可以更新您的数据结构，而不会中断根据“旧”格式编译的已部署程序。</p>\n</blockquote>\n<p>特点：</p>\n<ul>\n<li>更简单</li>\n<li>是3到10倍小</li>\n<li>速度要快20到100倍</li>\n<li>不太模糊</li>\n<li>生成更易于以编程方式使用的数据访问类</li>\n</ul>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><blockquote>\n<p>在github上写了个demo<br><a href=\"https://github.com/rsl140/work_notes_demo/tree/master/proto_demo\">demo地址</a> 有需要的可以下载下来跑一下就理解了。PS:如果觉得有用 请给我个小星星 (笔芯~)</p>\n</blockquote>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>其实最开始我尝试使用一个第三方JS  <a href=\"https://github.com/dcodeIO/protobuf.js\">protobuf.js</a><br><code>protobuf.load</code>的时候浏览器报了个错<a href=\"https://github.com/dcodeIO/protobuf.js/issues/1023\">illegal token ‘&lt;’ (/demo.proto, line 1)</a>查找了下官网issue,大意应该是proto文件多了个字符，但是我查看过proto文件并没有发现有多的’&lt;’，怎么办呢，最后放弃使用第三方。用官方提供的方法。</p>\n<h2 id=\"下载protobuf编译器\"><a href=\"#下载protobuf编译器\" class=\"headerlink\" title=\"下载protobuf编译器\"></a>下载protobuf编译器</h2><p><a href=\"https://repo1.maven.org/maven2/com/google/protobuf/protoc/\">下载地址</a> (我下载的是3.40版)<br><a href=\"https://github.com/google/protobuf/releases\">github也提供了zip包，可自行下载</a> (目前最新版本是v3.6.0)<br>用来编译proto为JS文件方便调用</p>\n<h2 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h2><p>由于公司用的是win10 只需要将下载的文件地址添加到path即可<br>Mac与window命令唯一的区别就是需要将protoc改成protoc.exe 前提是需要添加环境变量<br><a href=\"https://www.jianshu.com/p/e63082e9188d\">配置环境可参考这篇文章</a></p>\n<h2 id=\"编写proto文件\"><a href=\"#编写proto文件\" class=\"headerlink\" title=\"编写proto文件\"></a>编写proto文件</h2><p>为了确保前后一致，下面是后台写给我的一个测试proto，我司后台是java<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">syntax = <span class=\"string\">\"proto2\"</span>;//protobuf版本</div><div class=\"line\">option java_package = <span class=\"string\">\"com.test.protobuf\"</span>;</div><div class=\"line\">option java_outer_classname = <span class=\"string\">\"PersonMessage\"</span>;</div><div class=\"line\">message Person &#123;</div><div class=\"line\">  required int32 id = 1;</div><div class=\"line\">  optional string name = 2;</div><div class=\"line\">  optional string email = 3;</div><div class=\"line\">  repeated string list = 4;</div><div class=\"line\">  extensions 100 to 1000;//允许扩展的ID</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">message PersonTree &#123;</div><div class=\"line\">  optional string id = 1;</div><div class=\"line\">  optional string title = 2;</div><div class=\"line\">  repeated PersonTree childs = 3;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">extend Person &#123;</div><div class=\"line\">  optional int32 count = 101;</div><div class=\"line\">  optional int32 likes_cnt= 102;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">message PersonEx &#123;</div><div class=\"line\">  optional int32 id = 1;</div><div class=\"line\">  extend Person &#123;</div><div class=\"line\">    optional int32 px = 103;</div><div class=\"line\">    optional int32 py= 104;</div><div class=\"line\">  &#125;</div><div class=\"line\">  optional Person p = 2;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"使用vue-cli构建一个工程目录\"><a href=\"#使用vue-cli构建一个工程目录\" class=\"headerlink\" title=\"使用vue-cli构建一个工程目录\"></a>使用vue-cli构建一个工程目录</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g vue-cli</div><div class=\"line\">vue init webpack my-project</div><div class=\"line\"><span class=\"built_in\">cd</span> my-project</div><div class=\"line\">npm install</div><div class=\"line\">npm run dev</div></pre></td></tr></table></figure>\n<p>安装插件：<code>npm install axios element-ui google-protobuf --save</code></p>\n<h2 id=\"编译proto为JS\"><a href=\"#编译proto为JS\" class=\"headerlink\" title=\"编译proto为JS\"></a>编译proto为JS</h2><p>进入<code>awesome.proto</code>的存放路径 使用如下命令<br><code>protoc.exe --js_out=import_style=commonjs,binary:. awesome.proto</code></p>\n<ul>\n<li>会生成一个<code>awesome_pb.js</code>文件</li>\n<li>点击查看<code>awesome_pb.js</code>其实可以看到里面是生成好的方法。只需要在页面中引入JS调用即可</li>\n</ul>\n<p>之后我们将这个文件引入页面，当然你也可以考虑全局引用</p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><h3 id=\"本地测试\"><a href=\"#本地测试\" class=\"headerlink\" title=\"本地测试\"></a>本地测试</h3><p>编写一个测试页面,创建一个测试按钮<br>我是在测试页面<code>import messages from &#39;./awesome_pb.js&#39;</code><br>方法为：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">methods: &#123;</div><div class=\"line\">    protobufferTest () &#123;</div><div class=\"line\">      <span class=\"keyword\">var</span> message = <span class=\"keyword\">new</span> messages.Person() <span class=\"comment\">// 调用Person对象  实例化</span></div><div class=\"line\">      <span class=\"comment\">// 赋值</span></div><div class=\"line\">      message.setId(<span class=\"number\">23</span>)</div><div class=\"line\">      message.setName(<span class=\"string\">'asd'</span>)</div><div class=\"line\">      <span class=\"comment\">// 序列化</span></div><div class=\"line\">      <span class=\"keyword\">var</span> bytes = message.serializeBinary()</div><div class=\"line\"></div><div class=\"line\">      <span class=\"built_in\">console</span>.log(bytes) <span class=\"comment\">// Uint8Array(7) [8, 23, 18, 3, 97, 115, 100]</span></div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">// 反序列化</span></div><div class=\"line\">      <span class=\"keyword\">var</span> message2 = messages.Person.deserializeBinary(bytes)</div><div class=\"line\"></div><div class=\"line\">      <span class=\"built_in\">console</span>.log(message2) <span class=\"comment\">// proto.PersonTree &#123;wrappers_: null, messageId_: undefined, arrayIndexOffset_: -1, array: Array(3), pivot_: 1.7976931348623157e+308, …&#125;</span></div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure></p>\n<p>到此，本地测试完成，没什么毛病了。</p>\n<h3 id=\"前后端联调测试\"><a href=\"#前后端联调测试\" class=\"headerlink\" title=\"前后端联调测试\"></a>前后端联调测试</h3><p>前方有坑</p>\n<p>前后传输是使用的FormData，然后悲剧的事情来了。后台解析不了。查看了下数据 <code>[8, 23, 18, 3, 97, 115, 100]</code>确实是传过去了。<br><del> 后来排查出原因是应该是解析成了字符串，然后数值变了。所以解析不出来。<br>后来使用fromCharCode()方法编辑成字符串形式传输给后台。在使用charCodeAt()取值。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\">此方法已弃用</div><div class=\"line\">protobufferTest () &#123;</div><div class=\"line\">      <span class=\"keyword\">var</span> message = <span class=\"keyword\">new</span> messages.Person() <span class=\"comment\">// 调用Person对象  实例化</span></div><div class=\"line\">      <span class=\"comment\">// 赋值</span></div><div class=\"line\">      message.setId(<span class=\"number\">23</span>)</div><div class=\"line\">      message.setName(<span class=\"string\">'asd'</span>)</div><div class=\"line\">      <span class=\"comment\">// 序列化</span></div><div class=\"line\">      <span class=\"keyword\">var</span> bytes = message.serializeBinary()</div><div class=\"line\"></div><div class=\"line\">      <span class=\"built_in\">console</span>.log(bytes) <span class=\"comment\">// Uint8Array(7) [8, 23, 18, 3, 97, 115, 100]</span></div><div class=\"line\"></div><div class=\"line\">      <span class=\"keyword\">var</span> tests = <span class=\"string\">''</span></div><div class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> index = <span class=\"number\">0</span>; index &lt; bytes.length; index++) &#123;</div><div class=\"line\">        tests += <span class=\"built_in\">String</span>.fromCharCode(bytes[index])</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(tests) <span class=\"comment\">// \b\u0017\u0012\u0003asd</span></div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">// 存入FormData</span></div><div class=\"line\">      <span class=\"keyword\">let</span> uploadDatas = <span class=\"keyword\">new</span> FormData()</div><div class=\"line\">      uploadDatas.append(<span class=\"string\">'protobuf'</span>, tests)</div><div class=\"line\"></div><div class=\"line\">      <span class=\"comment\">// 使用axios传输给后台</span></div><div class=\"line\">      <span class=\"keyword\">this</span>.axios.post(<span class=\"string\">'/test'</span>, uploadDatas)</div><div class=\"line\">        .then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">response</span>) </span>&#123;</div><div class=\"line\">          <span class=\"comment\">// 将传回的字符串转为数组</span></div><div class=\"line\">          <span class=\"built_in\">console</span>.log(response.data.split(<span class=\"string\">''</span>)) <span class=\"comment\">// [\"↵\", \"\u0002\", \"3\", \"2\", \"\u0012\", \"\u0004\", \"a\", \"s\", \"d\", \"f\"]</span></div><div class=\"line\">          <span class=\"keyword\">let</span> str = response.data.split(<span class=\"string\">''</span>)</div><div class=\"line\">          <span class=\"keyword\">let</span> toChar = []</div><div class=\"line\">          <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> index = <span class=\"number\">0</span>; index &lt; str.length; index++) &#123;</div><div class=\"line\">            toChar.push(str[index].charCodeAt())</div><div class=\"line\">          &#125;</div><div class=\"line\">          <span class=\"built_in\">console</span>.log(toChar) <span class=\"comment\">// [10, 2, 51, 50, 18, 4, 97, 115, 100, 102]</span></div><div class=\"line\"></div><div class=\"line\">          <span class=\"comment\">// 后台传回来的是PersonTree里面的值所以调用PersonTree来反序列化</span></div><div class=\"line\">          <span class=\"keyword\">var</span> message2 = messages.PersonTree.deserializeBinary(toChar)</div><div class=\"line\"></div><div class=\"line\">          <span class=\"built_in\">console</span>.log(message2) <span class=\"comment\">// proto.PersonTree &#123;wrappers_: null, messageId_: undefined, arrayIndexOffset_: -1, array: Array(3), pivot_: 1.7976931348623157e+308, …&#125;</span></div><div class=\"line\"></div><div class=\"line\">          <span class=\"comment\">// 获取PersonTree的id值</span></div><div class=\"line\">          <span class=\"built_in\">console</span>.log(message2.getId()) <span class=\"comment\">// 32</span></div><div class=\"line\">        &#125;)</div><div class=\"line\">        .catch(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error</span>) </span>&#123;</div><div class=\"line\">          <span class=\"built_in\">console</span>.log(error)</div><div class=\"line\">        &#125;)</div><div class=\"line\"></div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p></del></p>\n<p>以上方法可能存在安全隐患。<br>向后端传值<br>因为FormData支持两种方式传输string和blob所以将bytes存入blob中<br>前端获取数据<br>对axios的默认传输方式做个更改<br>axios.defaults.responseType = ‘arraybuffer’<br>将以上的JS代码更改为以下内容<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">protobufferTest () &#123;</div><div class=\"line\">      <span class=\"keyword\">var</span> message = <span class=\"keyword\">new</span> messages.Person()</div><div class=\"line\">      message.setId(<span class=\"number\">23</span>)</div><div class=\"line\">      message.setName(<span class=\"string\">'asd'</span>)</div><div class=\"line\">      <span class=\"keyword\">var</span> bytes = message.serializeBinary()</div><div class=\"line\"></div><div class=\"line\">      <span class=\"built_in\">console</span>.log(bytes)</div><div class=\"line\">      <span class=\"keyword\">let</span> uploadDatas = <span class=\"keyword\">new</span> FormData()</div><div class=\"line\">      <span class=\"keyword\">var</span> blob = <span class=\"keyword\">new</span> Blob([bytes], &#123;<span class=\"attr\">type</span>: <span class=\"string\">'application/octet-stream'</span>&#125;)</div><div class=\"line\"></div><div class=\"line\">      uploadDatas.append(<span class=\"string\">'protobuf'</span>, blob)</div><div class=\"line\"></div><div class=\"line\">      <span class=\"keyword\">this</span>.axios.post(<span class=\"string\">'/test'</span>, uploadDatas)</div><div class=\"line\">        .then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">response</span>) </span>&#123;</div><div class=\"line\">          <span class=\"built_in\">console</span>.log(response)</div><div class=\"line\"></div><div class=\"line\">          <span class=\"keyword\">var</span> message2 = messages.PersonTree.deserializeBinary(response.data)</div><div class=\"line\">          <span class=\"built_in\">console</span>.log(message2.getId())</div><div class=\"line\">        &#125;)</div><div class=\"line\">        .catch(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error</span>) </span>&#123;</div><div class=\"line\">          <span class=\"built_in\">console</span>.log(error)</div><div class=\"line\">        &#125;)</div><div class=\"line\">      <span class=\"comment\">// console.log(bytes)</span></div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>至此前后联调完成</p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><p><a href=\"https://www.jianshu.com/p/e63082e9188d\">前端后台以及游戏中使用google-protobuf详解</a><br><a href=\"https://blog.csdn.net/arvin_kai/article/details/77532595\">javascript前端如何使用google-protobuf</a></p>\n"},{"title":"mac 命令行记录","date":"2017-05-24T01:23:32.000Z","keywords":null,"_content":">命令行笔记\n\n# how to exit vim？据说有1kk+的人搜索\n\nHit the Esc key; vim goes into command mode. Then you can type\n\n`:q` to quit (short for :quit) 退出\n`:q!` to quit without saving (short for :quit!) 不保存退出\n`:wq` to write and quit (think write and quit) 编辑退出\n`:wq!` to write and quit even if file has only read permission (if file does not have write permission: force write) 只读模式编辑退出\n`:x` to write and quit (similar to :wq, but won’t write if there are no changes)\n`:qa` to quit all (short for :quitall)\nWhen you press :, a : will appear at the bottom of the screen.\n\nOr you can press Esc `ZZ` (Esc `Shift+Z` `Shift+Z`) to write/save if the file was changed, then quit.\n\nOr if you don’t want to save changes you can use ZQ instead.\n\nVim has extensive help, so type Esc:`help Return` and you will have all your answers and even a neat tutorial.\n\n来源：How to exit the Vim editor?\n<!--  more  -->\n# 查看端口\n\n``` \n    netstat -antl| grep 8082 //监听端口是否在使用\n```\n\n# Tomcat启动\n\n找到bin目录下使用：\n```\n    ./startup.sh //启动\n    ./shutdown.sh //关闭\n```\n\n# 新建文件\n``` bash\ntouch 123.txt\n```\n","source":"_posts/vim.md","raw":"---\ntitle: mac 命令行记录\ndate: 2017-05-24 9:23:32\ntags:\ncategories:\nkeywords:\n---\n>命令行笔记\n\n# how to exit vim？据说有1kk+的人搜索\n\nHit the Esc key; vim goes into command mode. Then you can type\n\n`:q` to quit (short for :quit) 退出\n`:q!` to quit without saving (short for :quit!) 不保存退出\n`:wq` to write and quit (think write and quit) 编辑退出\n`:wq!` to write and quit even if file has only read permission (if file does not have write permission: force write) 只读模式编辑退出\n`:x` to write and quit (similar to :wq, but won’t write if there are no changes)\n`:qa` to quit all (short for :quitall)\nWhen you press :, a : will appear at the bottom of the screen.\n\nOr you can press Esc `ZZ` (Esc `Shift+Z` `Shift+Z`) to write/save if the file was changed, then quit.\n\nOr if you don’t want to save changes you can use ZQ instead.\n\nVim has extensive help, so type Esc:`help Return` and you will have all your answers and even a neat tutorial.\n\n来源：How to exit the Vim editor?\n<!--  more  -->\n# 查看端口\n\n``` \n    netstat -antl| grep 8082 //监听端口是否在使用\n```\n\n# Tomcat启动\n\n找到bin目录下使用：\n```\n    ./startup.sh //启动\n    ./shutdown.sh //关闭\n```\n\n# 新建文件\n``` bash\ntouch 123.txt\n```\n","slug":"vim","published":1,"updated":"2017-09-06T09:21:48.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1k5001gcdon237mz8fh","content":"<blockquote>\n<p>命令行笔记</p>\n</blockquote>\n<h1 id=\"how-to-exit-vim？据说有1kk-的人搜索\"><a href=\"#how-to-exit-vim？据说有1kk-的人搜索\" class=\"headerlink\" title=\"how to exit vim？据说有1kk+的人搜索\"></a>how to exit vim？据说有1kk+的人搜索</h1><p>Hit the Esc key; vim goes into command mode. Then you can type</p>\n<p><code>:q</code> to quit (short for :quit) 退出<br><code>:q!</code> to quit without saving (short for :quit!) 不保存退出<br><code>:wq</code> to write and quit (think write and quit) 编辑退出<br><code>:wq!</code> to write and quit even if file has only read permission (if file does not have write permission: force write) 只读模式编辑退出<br><code>:x</code> to write and quit (similar to :wq, but won’t write if there are no changes)<br><code>:qa</code> to quit all (short for :quitall)<br>When you press :, a : will appear at the bottom of the screen.</p>\n<p>Or you can press Esc <code>ZZ</code> (Esc <code>Shift+Z</code> <code>Shift+Z</code>) to write/save if the file was changed, then quit.</p>\n<p>Or if you don’t want to save changes you can use ZQ instead.</p>\n<p>Vim has extensive help, so type Esc:<code>help Return</code> and you will have all your answers and even a neat tutorial.</p>\n<p>来源：How to exit the Vim editor?<br><a id=\"more\"></a></p>\n<h1 id=\"查看端口\"><a href=\"#查看端口\" class=\"headerlink\" title=\"查看端口\"></a>查看端口</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">netstat -antl| grep 8082 //监听端口是否在使用</div></pre></td></tr></table></figure>\n<h1 id=\"Tomcat启动\"><a href=\"#Tomcat启动\" class=\"headerlink\" title=\"Tomcat启动\"></a>Tomcat启动</h1><p>找到bin目录下使用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">./startup.sh //启动</div><div class=\"line\">./shutdown.sh //关闭</div></pre></td></tr></table></figure></p>\n<h1 id=\"新建文件\"><a href=\"#新建文件\" class=\"headerlink\" title=\"新建文件\"></a>新建文件</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">touch 123.txt</div></pre></td></tr></table></figure>\n","excerpt":"<blockquote>\n<p>命令行笔记</p>\n</blockquote>\n<h1 id=\"how-to-exit-vim？据说有1kk-的人搜索\"><a href=\"#how-to-exit-vim？据说有1kk-的人搜索\" class=\"headerlink\" title=\"how to exit vim？据说有1kk+的人搜索\"></a>how to exit vim？据说有1kk+的人搜索</h1><p>Hit the Esc key; vim goes into command mode. Then you can type</p>\n<p><code>:q</code> to quit (short for :quit) 退出<br><code>:q!</code> to quit without saving (short for :quit!) 不保存退出<br><code>:wq</code> to write and quit (think write and quit) 编辑退出<br><code>:wq!</code> to write and quit even if file has only read permission (if file does not have write permission: force write) 只读模式编辑退出<br><code>:x</code> to write and quit (similar to :wq, but won’t write if there are no changes)<br><code>:qa</code> to quit all (short for :quitall)<br>When you press :, a : will appear at the bottom of the screen.</p>\n<p>Or you can press Esc <code>ZZ</code> (Esc <code>Shift+Z</code> <code>Shift+Z</code>) to write/save if the file was changed, then quit.</p>\n<p>Or if you don’t want to save changes you can use ZQ instead.</p>\n<p>Vim has extensive help, so type Esc:<code>help Return</code> and you will have all your answers and even a neat tutorial.</p>\n<p>来源：How to exit the Vim editor?<br>","more":"</p>\n<h1 id=\"查看端口\"><a href=\"#查看端口\" class=\"headerlink\" title=\"查看端口\"></a>查看端口</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">netstat -antl| grep 8082 //监听端口是否在使用</div></pre></td></tr></table></figure>\n<h1 id=\"Tomcat启动\"><a href=\"#Tomcat启动\" class=\"headerlink\" title=\"Tomcat启动\"></a>Tomcat启动</h1><p>找到bin目录下使用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">./startup.sh //启动</div><div class=\"line\">./shutdown.sh //关闭</div></pre></td></tr></table></figure></p>\n<h1 id=\"新建文件\"><a href=\"#新建文件\" class=\"headerlink\" title=\"新建文件\"></a>新建文件</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">touch 123.txt</div></pre></td></tr></table></figure>"},{"title":"css常用样式||知识点","date":"2017-07-11T00:36:32.000Z","keywords":"css style","_content":">常用样式整理\n\n# 居中div\n\n- 水平居中：给div设置一个宽度，然后添加margin:0 auto属性\n\n``` css\n     div{\n        width:200px;\n        margin:0 auto;\n      }\n```\n\n- 让绝对定位的div居中\n\n``` css\n     div {\n        position: absolute;\n        width: 300px;\n        height: 300px;\n        margin: auto;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        background-color: pink; /* 方便看效果 */\n     }\n```\n\n- 水平垂直居中一\n\n``` css\n确定容器的宽高\n div {\n    position: relative;     /* 相对定位或绝对定位均可 */\n    width:500px;\n    height:300px;\n    top: 50%;\n    left: 50%;\n    margin: -150px 0 0 -250px;      /* 外边距为自身宽高的一半 */\n    background-color: pink;     /* 方便看效果 */\n\n  }\n```\n\n- 水平垂直居中二\n\n``` css\n 未知容器的宽高，利用 `transform` 属性\n\n div {\n    position: absolute;     /* 相对定位或绝对定位均可 */\n    width:500px;\n    height:300px;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: pink;     /* 方便看效果 */\n\n }\n```\n\n- 水平垂直居中三\n\n``` css\n 利用 flex 布局\n 实际使用时应考虑兼容性\n\n .container {\n    display: flex;\n    align-items: center;        /* 垂直居中 */\n    justify-content: center;    /* 水平居中 */\n\n }\n .container div {\n    width: 100px;\n    height: 100px;\n    background-color: pink;     /* 方便看效果 */\n }  \n```\n\n# display值的作用\n\n``` bash\n\nblock           块类型。默认宽度为父元素宽度，可设置宽高，换行显示。\nnone            缺省值。象行内元素类型一样显示。\ninline          行内元素类型。默认宽度为内容宽度，不可设置宽高，同行显示。\ninline-block    默认宽度为内容宽度，可以设置宽高，同行显示。\nlist-item       象块类型元素一样显示，并添加样式列表标记。\ntable           此元素会作为块级表格来显示。\ninherit         规定应该从父元素继承 display 属性的值。\n```\n<!--  more  -->\n\n\n# position的值relative和absolute定位原点\n\n``` bash\n    absolute\n        生成绝对定位的元素，相对于值不为 static的第一个父元素进行定位。\n    fixed （老IE不支持）\n        生成绝对定位的元素，相对于浏览器窗口进行定位。\n    relative\n        生成相对定位的元素，相对于其正常位置进行定位。\n    static\n        默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right z-index 声明）。\n    inherit\n        规定从父元素继承 position 属性的值。\n```\n\n# CSS选择符,属性继承\n``` bash\n*   1. id选择器（ # myid）\n    2. 类选择器（.myclassname）\n    3. 标签选择器（div, h1, p）\n    4. 相邻选择器（h1 + p）\n    5. 子选择器（ul > li）\n    6. 后代选择器（li a）\n    7. 通配符选择器（ * ）\n    8. 属性选择器（a[rel = \"external\"]）\n    9. 伪类选择器（a:hover, li:nth-child）\n\n*   可继承的样式： font-size font-family color, UL LI DL DD DT;\n\n*   不可继承的样式：border padding margin width height ;\n```\n\n# CSS优先级算法\n``` bash\n     优先级就近原则，同权重情况下样式定义最近者为准;\n     载入样式以最后载入的定位为准;\n\n  优先级为:\n    同权重: 内联样式表（标签内部）> 嵌入样式表（当前文件中）> 外部样式表（外部文件中）。\n    !important >  id > class > tag\n    important 比 内联优先级高\n```\n\n# 初始化CSS样式\n\n``` css\n淘宝的样式初始化代码：\n  body, h1, h2, h3, h4, h5, h6, hr, p, blockquote, dl, dt, dd, ul, ol, li, pre, form, fieldset, legend, button, input, textarea, th, td { margin:0; padding:0; }\n  body, button, input, select, textarea { font:12px/1.5tahoma, arial, \\5b8b\\4f53; }\n  h1, h2, h3, h4, h5, h6{ font-size:100%; }\n  address, cite, dfn, em, var { font-style:normal; }\n  code, kbd, pre, samp { font-family:couriernew, courier, monospace; }\n  small{ font-size:12px; }\n  ul, ol { list-style:none; }\n  a { text-decoration:none; }\n  a:hover { text-decoration:underline; }\n  sup { vertical-align:text-top; }\n  sub{ vertical-align:text-bottom; }\n  legend { color:#000; }\n  fieldset, img { border:0; }\n  button, input, select, textarea { font-size:100%; }\n  table { border-collapse:collapse; border-spacing:0; }\n```\n\n#清除浮动\n``` css\n.clearfix::before, .clearfix::after {\n    content: \" \";\n    display: table;\n}\n.clearfix::after {\n    clear: both;\n}\n.clearfix {\n    *zoom: 1;\n}\n\nsass版\n&::after,&::before{\n    content: \" \";\n      visibility: hidden;\n      display: block;\n      height: 0;\n      clear: both;\n}\n```\n\n[参考出处](https://github.com/markyun/My-blog/blob/master/Front-end-Developer-Questions/Questions-and-Answers/README.md)\n","source":"_posts/zj.md","raw":"---\ntitle: css常用样式||知识点\ndate: 2017-07-11 08:36:32\ntags: css\ncategories: FE\nkeywords: css style\n---\n>常用样式整理\n\n# 居中div\n\n- 水平居中：给div设置一个宽度，然后添加margin:0 auto属性\n\n``` css\n     div{\n        width:200px;\n        margin:0 auto;\n      }\n```\n\n- 让绝对定位的div居中\n\n``` css\n     div {\n        position: absolute;\n        width: 300px;\n        height: 300px;\n        margin: auto;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        background-color: pink; /* 方便看效果 */\n     }\n```\n\n- 水平垂直居中一\n\n``` css\n确定容器的宽高\n div {\n    position: relative;     /* 相对定位或绝对定位均可 */\n    width:500px;\n    height:300px;\n    top: 50%;\n    left: 50%;\n    margin: -150px 0 0 -250px;      /* 外边距为自身宽高的一半 */\n    background-color: pink;     /* 方便看效果 */\n\n  }\n```\n\n- 水平垂直居中二\n\n``` css\n 未知容器的宽高，利用 `transform` 属性\n\n div {\n    position: absolute;     /* 相对定位或绝对定位均可 */\n    width:500px;\n    height:300px;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: pink;     /* 方便看效果 */\n\n }\n```\n\n- 水平垂直居中三\n\n``` css\n 利用 flex 布局\n 实际使用时应考虑兼容性\n\n .container {\n    display: flex;\n    align-items: center;        /* 垂直居中 */\n    justify-content: center;    /* 水平居中 */\n\n }\n .container div {\n    width: 100px;\n    height: 100px;\n    background-color: pink;     /* 方便看效果 */\n }  \n```\n\n# display值的作用\n\n``` bash\n\nblock           块类型。默认宽度为父元素宽度，可设置宽高，换行显示。\nnone            缺省值。象行内元素类型一样显示。\ninline          行内元素类型。默认宽度为内容宽度，不可设置宽高，同行显示。\ninline-block    默认宽度为内容宽度，可以设置宽高，同行显示。\nlist-item       象块类型元素一样显示，并添加样式列表标记。\ntable           此元素会作为块级表格来显示。\ninherit         规定应该从父元素继承 display 属性的值。\n```\n<!--  more  -->\n\n\n# position的值relative和absolute定位原点\n\n``` bash\n    absolute\n        生成绝对定位的元素，相对于值不为 static的第一个父元素进行定位。\n    fixed （老IE不支持）\n        生成绝对定位的元素，相对于浏览器窗口进行定位。\n    relative\n        生成相对定位的元素，相对于其正常位置进行定位。\n    static\n        默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right z-index 声明）。\n    inherit\n        规定从父元素继承 position 属性的值。\n```\n\n# CSS选择符,属性继承\n``` bash\n*   1. id选择器（ # myid）\n    2. 类选择器（.myclassname）\n    3. 标签选择器（div, h1, p）\n    4. 相邻选择器（h1 + p）\n    5. 子选择器（ul > li）\n    6. 后代选择器（li a）\n    7. 通配符选择器（ * ）\n    8. 属性选择器（a[rel = \"external\"]）\n    9. 伪类选择器（a:hover, li:nth-child）\n\n*   可继承的样式： font-size font-family color, UL LI DL DD DT;\n\n*   不可继承的样式：border padding margin width height ;\n```\n\n# CSS优先级算法\n``` bash\n     优先级就近原则，同权重情况下样式定义最近者为准;\n     载入样式以最后载入的定位为准;\n\n  优先级为:\n    同权重: 内联样式表（标签内部）> 嵌入样式表（当前文件中）> 外部样式表（外部文件中）。\n    !important >  id > class > tag\n    important 比 内联优先级高\n```\n\n# 初始化CSS样式\n\n``` css\n淘宝的样式初始化代码：\n  body, h1, h2, h3, h4, h5, h6, hr, p, blockquote, dl, dt, dd, ul, ol, li, pre, form, fieldset, legend, button, input, textarea, th, td { margin:0; padding:0; }\n  body, button, input, select, textarea { font:12px/1.5tahoma, arial, \\5b8b\\4f53; }\n  h1, h2, h3, h4, h5, h6{ font-size:100%; }\n  address, cite, dfn, em, var { font-style:normal; }\n  code, kbd, pre, samp { font-family:couriernew, courier, monospace; }\n  small{ font-size:12px; }\n  ul, ol { list-style:none; }\n  a { text-decoration:none; }\n  a:hover { text-decoration:underline; }\n  sup { vertical-align:text-top; }\n  sub{ vertical-align:text-bottom; }\n  legend { color:#000; }\n  fieldset, img { border:0; }\n  button, input, select, textarea { font-size:100%; }\n  table { border-collapse:collapse; border-spacing:0; }\n```\n\n#清除浮动\n``` css\n.clearfix::before, .clearfix::after {\n    content: \" \";\n    display: table;\n}\n.clearfix::after {\n    clear: both;\n}\n.clearfix {\n    *zoom: 1;\n}\n\nsass版\n&::after,&::before{\n    content: \" \";\n      visibility: hidden;\n      display: block;\n      height: 0;\n      clear: both;\n}\n```\n\n[参考出处](https://github.com/markyun/My-blog/blob/master/Front-end-Developer-Questions/Questions-and-Answers/README.md)\n","slug":"zj","published":1,"updated":"2017-09-06T09:19:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1k6001jcdon5ts8jbtb","content":"<blockquote>\n<p>常用样式整理</p>\n</blockquote>\n<h1 id=\"居中div\"><a href=\"#居中div\" class=\"headerlink\" title=\"居中div\"></a>居中div</h1><ul>\n<li>水平居中：给div设置一个宽度，然后添加margin:0 auto属性</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">div</span>&#123;</div><div class=\"line\">   <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</div><div class=\"line\">   <span class=\"attribute\">margin</span>:<span class=\"number\">0</span> auto;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>让绝对定位的div居中</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">div</span> &#123;</div><div class=\"line\">   <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">   <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</div><div class=\"line\">   <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</div><div class=\"line\">   <span class=\"attribute\">margin</span>: auto;</div><div class=\"line\">   <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</div><div class=\"line\">   <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</div><div class=\"line\">   <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</div><div class=\"line\">   <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</div><div class=\"line\">   <span class=\"attribute\">background-color</span>: pink; <span class=\"comment\">/* 方便看效果 */</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>水平垂直居中一</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">确定容器的宽高</div><div class=\"line\"> <span class=\"selector-tag\">div</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">position</span>: relative;     <span class=\"comment\">/* 相对定位或绝对定位均可 */</span></div><div class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">500px</span>;</div><div class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">300px</span>;</div><div class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</div><div class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</div><div class=\"line\">    <span class=\"attribute\">margin</span>: -<span class=\"number\">150px</span> <span class=\"number\">0</span> <span class=\"number\">0</span> -<span class=\"number\">250px</span>;      <span class=\"comment\">/* 外边距为自身宽高的一半 */</span></div><div class=\"line\">    <span class=\"attribute\">background-color</span>: pink;     <span class=\"comment\">/* 方便看效果 */</span></div><div class=\"line\"></div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>水平垂直居中二</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">未知容器的宽高，利用 `<span class=\"selector-tag\">transform</span>` 属性</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">div</span> &#123;</div><div class=\"line\">   <span class=\"attribute\">position</span>: absolute;     <span class=\"comment\">/* 相对定位或绝对定位均可 */</span></div><div class=\"line\">   <span class=\"attribute\">width</span>:<span class=\"number\">500px</span>;</div><div class=\"line\">   <span class=\"attribute\">height</span>:<span class=\"number\">300px</span>;</div><div class=\"line\">   <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</div><div class=\"line\">   <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</div><div class=\"line\">   <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-50%, -50%);</div><div class=\"line\">   <span class=\"attribute\">background-color</span>: pink;     <span class=\"comment\">/* 方便看效果 */</span></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>水平垂直居中三</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">利用 <span class=\"selector-tag\">flex</span> 布局</div><div class=\"line\">实际使用时应考虑兼容性</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.container</span> &#123;</div><div class=\"line\">   <span class=\"attribute\">display</span>: flex;</div><div class=\"line\">   <span class=\"attribute\">align-items</span>: center;        <span class=\"comment\">/* 垂直居中 */</span></div><div class=\"line\">   <span class=\"attribute\">justify-content</span>: center;    <span class=\"comment\">/* 水平居中 */</span></div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.container</span> <span class=\"selector-tag\">div</span> &#123;</div><div class=\"line\">   <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</div><div class=\"line\">   <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</div><div class=\"line\">   <span class=\"attribute\">background-color</span>: pink;     <span class=\"comment\">/* 方便看效果 */</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"display值的作用\"><a href=\"#display值的作用\" class=\"headerlink\" title=\"display值的作用\"></a>display值的作用</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">block           块类型。默认宽度为父元素宽度，可设置宽高，换行显示。</div><div class=\"line\">none            缺省值。象行内元素类型一样显示。</div><div class=\"line\">inline          行内元素类型。默认宽度为内容宽度，不可设置宽高，同行显示。</div><div class=\"line\">inline-block    默认宽度为内容宽度，可以设置宽高，同行显示。</div><div class=\"line\">list-item       象块类型元素一样显示，并添加样式列表标记。</div><div class=\"line\">table           此元素会作为块级表格来显示。</div><div class=\"line\">inherit         规定应该从父元素继承 display 属性的值。</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h1 id=\"position的值relative和absolute定位原点\"><a href=\"#position的值relative和absolute定位原点\" class=\"headerlink\" title=\"position的值relative和absolute定位原点\"></a>position的值relative和absolute定位原点</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">absolute</div><div class=\"line\">    生成绝对定位的元素，相对于值不为 static的第一个父元素进行定位。</div><div class=\"line\">fixed （老IE不支持）</div><div class=\"line\">    生成绝对定位的元素，相对于浏览器窗口进行定位。</div><div class=\"line\">relative</div><div class=\"line\">    生成相对定位的元素，相对于其正常位置进行定位。</div><div class=\"line\">static</div><div class=\"line\">    默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right z-index 声明）。</div><div class=\"line\">inherit</div><div class=\"line\">    规定从父元素继承 position 属性的值。</div></pre></td></tr></table></figure>\n<h1 id=\"CSS选择符-属性继承\"><a href=\"#CSS选择符-属性继承\" class=\"headerlink\" title=\"CSS选择符,属性继承\"></a>CSS选择符,属性继承</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">*   1. id选择器（ <span class=\"comment\"># myid）</span></div><div class=\"line\">    2. 类选择器（.myclassname）</div><div class=\"line\">    3. 标签选择器（div, h1, p）</div><div class=\"line\">    4. 相邻选择器（h1 + p）</div><div class=\"line\">    5. 子选择器（ul &gt; li）</div><div class=\"line\">    6. 后代选择器（li a）</div><div class=\"line\">    7. 通配符选择器（ * ）</div><div class=\"line\">    8. 属性选择器（a[rel = <span class=\"string\">\"external\"</span>]）</div><div class=\"line\">    9. 伪类选择器（a:hover, li:nth-child）</div><div class=\"line\"></div><div class=\"line\">*   可继承的样式： font-size font-family color, UL LI DL DD DT;</div><div class=\"line\"></div><div class=\"line\">*   不可继承的样式：border padding margin width height ;</div></pre></td></tr></table></figure>\n<h1 id=\"CSS优先级算法\"><a href=\"#CSS优先级算法\" class=\"headerlink\" title=\"CSS优先级算法\"></a>CSS优先级算法</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">   优先级就近原则，同权重情况下样式定义最近者为准;</div><div class=\"line\">   载入样式以最后载入的定位为准;</div><div class=\"line\"></div><div class=\"line\">优先级为:</div><div class=\"line\">  同权重: 内联样式表（标签内部）&gt; 嵌入样式表（当前文件中）&gt; 外部样式表（外部文件中）。</div><div class=\"line\">  !important &gt;  id &gt; class &gt; tag</div><div class=\"line\">  important 比 内联优先级高</div></pre></td></tr></table></figure>\n<h1 id=\"初始化CSS样式\"><a href=\"#初始化CSS样式\" class=\"headerlink\" title=\"初始化CSS样式\"></a>初始化CSS样式</h1><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">淘宝的样式初始化代码：</div><div class=\"line\">  <span class=\"selector-tag\">body</span>, <span class=\"selector-tag\">h1</span>, <span class=\"selector-tag\">h2</span>, <span class=\"selector-tag\">h3</span>, <span class=\"selector-tag\">h4</span>, <span class=\"selector-tag\">h5</span>, <span class=\"selector-tag\">h6</span>, <span class=\"selector-tag\">hr</span>, <span class=\"selector-tag\">p</span>, <span class=\"selector-tag\">blockquote</span>, <span class=\"selector-tag\">dl</span>, <span class=\"selector-tag\">dt</span>, <span class=\"selector-tag\">dd</span>, <span class=\"selector-tag\">ul</span>, <span class=\"selector-tag\">ol</span>, <span class=\"selector-tag\">li</span>, <span class=\"selector-tag\">pre</span>, <span class=\"selector-tag\">form</span>, <span class=\"selector-tag\">fieldset</span>, <span class=\"selector-tag\">legend</span>, <span class=\"selector-tag\">button</span>, <span class=\"selector-tag\">input</span>, <span class=\"selector-tag\">textarea</span>, <span class=\"selector-tag\">th</span>, <span class=\"selector-tag\">td</span> &#123; <span class=\"attribute\">margin</span>:<span class=\"number\">0</span>; <span class=\"attribute\">padding</span>:<span class=\"number\">0</span>; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">body</span>, <span class=\"selector-tag\">button</span>, <span class=\"selector-tag\">input</span>, <span class=\"selector-tag\">select</span>, <span class=\"selector-tag\">textarea</span> &#123; <span class=\"attribute\">font</span>:<span class=\"number\">12px</span>/<span class=\"number\">1.5</span>tahoma, arial, \\<span class=\"number\">5</span>b8b\\<span class=\"number\">4</span>f53; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">h1</span>, <span class=\"selector-tag\">h2</span>, <span class=\"selector-tag\">h3</span>, <span class=\"selector-tag\">h4</span>, <span class=\"selector-tag\">h5</span>, <span class=\"selector-tag\">h6</span>&#123; <span class=\"attribute\">font-size</span>:<span class=\"number\">100%</span>; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">address</span>, <span class=\"selector-tag\">cite</span>, <span class=\"selector-tag\">dfn</span>, <span class=\"selector-tag\">em</span>, <span class=\"selector-tag\">var</span> &#123; <span class=\"attribute\">font-style</span>:normal; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">code</span>, <span class=\"selector-tag\">kbd</span>, <span class=\"selector-tag\">pre</span>, <span class=\"selector-tag\">samp</span> &#123; <span class=\"attribute\">font-family</span>:couriernew, courier, monospace; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">small</span>&#123; <span class=\"attribute\">font-size</span>:<span class=\"number\">12px</span>; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">ul</span>, <span class=\"selector-tag\">ol</span> &#123; <span class=\"attribute\">list-style</span>:none; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">text-decoration</span>:none; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123; <span class=\"attribute\">text-decoration</span>:underline; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">sup</span> &#123; <span class=\"attribute\">vertical-align</span>:text-top; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">sub</span>&#123; <span class=\"attribute\">vertical-align</span>:text-bottom; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">legend</span> &#123; <span class=\"attribute\">color</span>:<span class=\"number\">#000</span>; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">fieldset</span>, <span class=\"selector-tag\">img</span> &#123; <span class=\"attribute\">border</span>:<span class=\"number\">0</span>; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">button</span>, <span class=\"selector-tag\">input</span>, <span class=\"selector-tag\">select</span>, <span class=\"selector-tag\">textarea</span> &#123; <span class=\"attribute\">font-size</span>:<span class=\"number\">100%</span>; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">table</span> &#123; <span class=\"attribute\">border-collapse</span>:collapse; <span class=\"attribute\">border-spacing</span>:<span class=\"number\">0</span>; &#125;</div></pre></td></tr></table></figure>\n<p>#清除浮动<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">.clearfix::before, .clearfix::after &#123;</div><div class=\"line\">    content: \" \";</div><div class=\"line\">    display: table;</div><div class=\"line\">&#125;</div><div class=\"line\">.clearfix::after &#123;</div><div class=\"line\">    clear: both;</div><div class=\"line\">&#125;</div><div class=\"line\">.clearfix &#123;</div><div class=\"line\">    *zoom: 1;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">sass版</div><div class=\"line\">&amp;::after,&amp;::before&#123;</div><div class=\"line\">    content: \" \";</div><div class=\"line\">      visibility: hidden;</div><div class=\"line\">      display: block;</div><div class=\"line\">      height: 0;</div><div class=\"line\">      clear: both;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><a href=\"https://github.com/markyun/My-blog/blob/master/Front-end-Developer-Questions/Questions-and-Answers/README.md\" target=\"_blank\" rel=\"external\">参考出处</a></p>\n","excerpt":"<blockquote>\n<p>常用样式整理</p>\n</blockquote>\n<h1 id=\"居中div\"><a href=\"#居中div\" class=\"headerlink\" title=\"居中div\"></a>居中div</h1><ul>\n<li>水平居中：给div设置一个宽度，然后添加margin:0 auto属性</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">div</span>&#123;</div><div class=\"line\">   <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</div><div class=\"line\">   <span class=\"attribute\">margin</span>:<span class=\"number\">0</span> auto;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>让绝对定位的div居中</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">div</span> &#123;</div><div class=\"line\">   <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">   <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</div><div class=\"line\">   <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</div><div class=\"line\">   <span class=\"attribute\">margin</span>: auto;</div><div class=\"line\">   <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</div><div class=\"line\">   <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</div><div class=\"line\">   <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</div><div class=\"line\">   <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</div><div class=\"line\">   <span class=\"attribute\">background-color</span>: pink; <span class=\"comment\">/* 方便看效果 */</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>水平垂直居中一</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">确定容器的宽高</div><div class=\"line\"> <span class=\"selector-tag\">div</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">position</span>: relative;     <span class=\"comment\">/* 相对定位或绝对定位均可 */</span></div><div class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">500px</span>;</div><div class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">300px</span>;</div><div class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</div><div class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</div><div class=\"line\">    <span class=\"attribute\">margin</span>: -<span class=\"number\">150px</span> <span class=\"number\">0</span> <span class=\"number\">0</span> -<span class=\"number\">250px</span>;      <span class=\"comment\">/* 外边距为自身宽高的一半 */</span></div><div class=\"line\">    <span class=\"attribute\">background-color</span>: pink;     <span class=\"comment\">/* 方便看效果 */</span></div><div class=\"line\"></div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>水平垂直居中二</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">未知容器的宽高，利用 `<span class=\"selector-tag\">transform</span>` 属性</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">div</span> &#123;</div><div class=\"line\">   <span class=\"attribute\">position</span>: absolute;     <span class=\"comment\">/* 相对定位或绝对定位均可 */</span></div><div class=\"line\">   <span class=\"attribute\">width</span>:<span class=\"number\">500px</span>;</div><div class=\"line\">   <span class=\"attribute\">height</span>:<span class=\"number\">300px</span>;</div><div class=\"line\">   <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</div><div class=\"line\">   <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</div><div class=\"line\">   <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-50%, -50%);</div><div class=\"line\">   <span class=\"attribute\">background-color</span>: pink;     <span class=\"comment\">/* 方便看效果 */</span></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>水平垂直居中三</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">利用 <span class=\"selector-tag\">flex</span> 布局</div><div class=\"line\">实际使用时应考虑兼容性</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.container</span> &#123;</div><div class=\"line\">   <span class=\"attribute\">display</span>: flex;</div><div class=\"line\">   <span class=\"attribute\">align-items</span>: center;        <span class=\"comment\">/* 垂直居中 */</span></div><div class=\"line\">   <span class=\"attribute\">justify-content</span>: center;    <span class=\"comment\">/* 水平居中 */</span></div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.container</span> <span class=\"selector-tag\">div</span> &#123;</div><div class=\"line\">   <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</div><div class=\"line\">   <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</div><div class=\"line\">   <span class=\"attribute\">background-color</span>: pink;     <span class=\"comment\">/* 方便看效果 */</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"display值的作用\"><a href=\"#display值的作用\" class=\"headerlink\" title=\"display值的作用\"></a>display值的作用</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">block           块类型。默认宽度为父元素宽度，可设置宽高，换行显示。</div><div class=\"line\">none            缺省值。象行内元素类型一样显示。</div><div class=\"line\">inline          行内元素类型。默认宽度为内容宽度，不可设置宽高，同行显示。</div><div class=\"line\">inline-block    默认宽度为内容宽度，可以设置宽高，同行显示。</div><div class=\"line\">list-item       象块类型元素一样显示，并添加样式列表标记。</div><div class=\"line\">table           此元素会作为块级表格来显示。</div><div class=\"line\">inherit         规定应该从父元素继承 display 属性的值。</div></pre></td></tr></table></figure>","more":"<h1 id=\"position的值relative和absolute定位原点\"><a href=\"#position的值relative和absolute定位原点\" class=\"headerlink\" title=\"position的值relative和absolute定位原点\"></a>position的值relative和absolute定位原点</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">absolute</div><div class=\"line\">    生成绝对定位的元素，相对于值不为 static的第一个父元素进行定位。</div><div class=\"line\">fixed （老IE不支持）</div><div class=\"line\">    生成绝对定位的元素，相对于浏览器窗口进行定位。</div><div class=\"line\">relative</div><div class=\"line\">    生成相对定位的元素，相对于其正常位置进行定位。</div><div class=\"line\">static</div><div class=\"line\">    默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right z-index 声明）。</div><div class=\"line\">inherit</div><div class=\"line\">    规定从父元素继承 position 属性的值。</div></pre></td></tr></table></figure>\n<h1 id=\"CSS选择符-属性继承\"><a href=\"#CSS选择符-属性继承\" class=\"headerlink\" title=\"CSS选择符,属性继承\"></a>CSS选择符,属性继承</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">*   1. id选择器（ <span class=\"comment\"># myid）</span></div><div class=\"line\">    2. 类选择器（.myclassname）</div><div class=\"line\">    3. 标签选择器（div, h1, p）</div><div class=\"line\">    4. 相邻选择器（h1 + p）</div><div class=\"line\">    5. 子选择器（ul &gt; li）</div><div class=\"line\">    6. 后代选择器（li a）</div><div class=\"line\">    7. 通配符选择器（ * ）</div><div class=\"line\">    8. 属性选择器（a[rel = <span class=\"string\">\"external\"</span>]）</div><div class=\"line\">    9. 伪类选择器（a:hover, li:nth-child）</div><div class=\"line\"></div><div class=\"line\">*   可继承的样式： font-size font-family color, UL LI DL DD DT;</div><div class=\"line\"></div><div class=\"line\">*   不可继承的样式：border padding margin width height ;</div></pre></td></tr></table></figure>\n<h1 id=\"CSS优先级算法\"><a href=\"#CSS优先级算法\" class=\"headerlink\" title=\"CSS优先级算法\"></a>CSS优先级算法</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">   优先级就近原则，同权重情况下样式定义最近者为准;</div><div class=\"line\">   载入样式以最后载入的定位为准;</div><div class=\"line\"></div><div class=\"line\">优先级为:</div><div class=\"line\">  同权重: 内联样式表（标签内部）&gt; 嵌入样式表（当前文件中）&gt; 外部样式表（外部文件中）。</div><div class=\"line\">  !important &gt;  id &gt; class &gt; tag</div><div class=\"line\">  important 比 内联优先级高</div></pre></td></tr></table></figure>\n<h1 id=\"初始化CSS样式\"><a href=\"#初始化CSS样式\" class=\"headerlink\" title=\"初始化CSS样式\"></a>初始化CSS样式</h1><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">淘宝的样式初始化代码：</div><div class=\"line\">  <span class=\"selector-tag\">body</span>, <span class=\"selector-tag\">h1</span>, <span class=\"selector-tag\">h2</span>, <span class=\"selector-tag\">h3</span>, <span class=\"selector-tag\">h4</span>, <span class=\"selector-tag\">h5</span>, <span class=\"selector-tag\">h6</span>, <span class=\"selector-tag\">hr</span>, <span class=\"selector-tag\">p</span>, <span class=\"selector-tag\">blockquote</span>, <span class=\"selector-tag\">dl</span>, <span class=\"selector-tag\">dt</span>, <span class=\"selector-tag\">dd</span>, <span class=\"selector-tag\">ul</span>, <span class=\"selector-tag\">ol</span>, <span class=\"selector-tag\">li</span>, <span class=\"selector-tag\">pre</span>, <span class=\"selector-tag\">form</span>, <span class=\"selector-tag\">fieldset</span>, <span class=\"selector-tag\">legend</span>, <span class=\"selector-tag\">button</span>, <span class=\"selector-tag\">input</span>, <span class=\"selector-tag\">textarea</span>, <span class=\"selector-tag\">th</span>, <span class=\"selector-tag\">td</span> &#123; <span class=\"attribute\">margin</span>:<span class=\"number\">0</span>; <span class=\"attribute\">padding</span>:<span class=\"number\">0</span>; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">body</span>, <span class=\"selector-tag\">button</span>, <span class=\"selector-tag\">input</span>, <span class=\"selector-tag\">select</span>, <span class=\"selector-tag\">textarea</span> &#123; <span class=\"attribute\">font</span>:<span class=\"number\">12px</span>/<span class=\"number\">1.5</span>tahoma, arial, \\<span class=\"number\">5</span>b8b\\<span class=\"number\">4</span>f53; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">h1</span>, <span class=\"selector-tag\">h2</span>, <span class=\"selector-tag\">h3</span>, <span class=\"selector-tag\">h4</span>, <span class=\"selector-tag\">h5</span>, <span class=\"selector-tag\">h6</span>&#123; <span class=\"attribute\">font-size</span>:<span class=\"number\">100%</span>; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">address</span>, <span class=\"selector-tag\">cite</span>, <span class=\"selector-tag\">dfn</span>, <span class=\"selector-tag\">em</span>, <span class=\"selector-tag\">var</span> &#123; <span class=\"attribute\">font-style</span>:normal; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">code</span>, <span class=\"selector-tag\">kbd</span>, <span class=\"selector-tag\">pre</span>, <span class=\"selector-tag\">samp</span> &#123; <span class=\"attribute\">font-family</span>:couriernew, courier, monospace; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">small</span>&#123; <span class=\"attribute\">font-size</span>:<span class=\"number\">12px</span>; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">ul</span>, <span class=\"selector-tag\">ol</span> &#123; <span class=\"attribute\">list-style</span>:none; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">text-decoration</span>:none; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123; <span class=\"attribute\">text-decoration</span>:underline; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">sup</span> &#123; <span class=\"attribute\">vertical-align</span>:text-top; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">sub</span>&#123; <span class=\"attribute\">vertical-align</span>:text-bottom; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">legend</span> &#123; <span class=\"attribute\">color</span>:<span class=\"number\">#000</span>; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">fieldset</span>, <span class=\"selector-tag\">img</span> &#123; <span class=\"attribute\">border</span>:<span class=\"number\">0</span>; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">button</span>, <span class=\"selector-tag\">input</span>, <span class=\"selector-tag\">select</span>, <span class=\"selector-tag\">textarea</span> &#123; <span class=\"attribute\">font-size</span>:<span class=\"number\">100%</span>; &#125;</div><div class=\"line\">  <span class=\"selector-tag\">table</span> &#123; <span class=\"attribute\">border-collapse</span>:collapse; <span class=\"attribute\">border-spacing</span>:<span class=\"number\">0</span>; &#125;</div></pre></td></tr></table></figure>\n<p>#清除浮动<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">.clearfix::before, .clearfix::after &#123;</div><div class=\"line\">    content: \" \";</div><div class=\"line\">    display: table;</div><div class=\"line\">&#125;</div><div class=\"line\">.clearfix::after &#123;</div><div class=\"line\">    clear: both;</div><div class=\"line\">&#125;</div><div class=\"line\">.clearfix &#123;</div><div class=\"line\">    *zoom: 1;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">sass版</div><div class=\"line\">&amp;::after,&amp;::before&#123;</div><div class=\"line\">    content: \" \";</div><div class=\"line\">      visibility: hidden;</div><div class=\"line\">      display: block;</div><div class=\"line\">      height: 0;</div><div class=\"line\">      clear: both;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><a href=\"https://github.com/markyun/My-blog/blob/master/Front-end-Developer-Questions/Questions-and-Answers/README.md\">参考出处</a></p>"},{"title":"Vue2.0","date":"2017-10-31T08:28:08.000Z","keywords":"vue web 前端","_content":">vue搭建后台管理页面(刚接触，踩了很多坑，好记性不如烂笔头，还是需要多多总结)\n\n转载请注明出处\n\n参考资料：\n[Vue](https://cn.vuejs.org/v2/guide/installation.html)，[Vue-router](https://router.vuejs.org/zh-cn/)，[muse-ui](http://www.muse-ui.org/#/install)\n\n# 用vue-cli脚手架创建一个基于webpack的Vue项目\n环境：node\n全局安装vue-cli脚手架：`npm install -g vue-cli`(安装过慢请尝试使用淘宝镜像)\n新建文件夹后，命令行输入`vue init webpack 项目名`.\n`npm install`安装依赖项，开发调试请使用`npm run dev`\n`npm install --save muse-ui`安装页面插件\n<!--  more  -->\n# 使用muse-ui快速搭建页面\n## 修改src目录下main.js\n``` javascript\nimport Vue from 'vue'\nimport App from './App'\nimport MuseUI from 'muse-ui' //<--引入MuseUI\nimport router from './router'\nimport 'muse-ui/dist/muse-ui.css'//<--引入MuseUI主题\nimport 'muse-ui/dist/theme-carbon.css' // 使用 carbon 主题\n\nVue.use(MuseUI)//<--引入MuseUI\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  template: '<App/>',\n  components: { App }\n})\n\n```\n## components文件夹下新建home.vue,List.vue\n引入muse-ui模板\n### home.vue\n由于要使用vue-router做路由内嵌套路由跳转，从官方issue中查到可以直接在标签添加`to=\"/\"`实现\n如：\n`<mu-list-item title=\"Sent mail\" to=\"/list\" value=\"list1\" >`\n``` html\n<template>\n  <div class=\"layout\">\n    <div class=\"header\">\n      <div class=\"logo\">\n        Muse-UI\n      </div>\n      <div class=\"nav\">\n        <mu-tabs :value=\"activeTab\" @change=\"handleTabChange\" class=\"tab\">\n          <mu-tab value=\"tab1\" title=\"Nav One\"/>\n          <mu-tab value=\"tab2\" title=\"Nav TwO\"/>\n          <mu-tab value=\"tab3\" title=\"Nav Three\"/>\n        </mu-tabs>\n      </div>\n    </div>\n    <div class=\"content\">\n      <div class=\"content-left\">\n        <mu-list @change=\"handleListChange\" :value=\"activeList\">\n          <mu-list-item title=\"Sent mail\" to=\"/list\" value=\"list1\" ><!--vue路由跳转-->\n            <mu-icon slot=\"left\" value=\"send\" />\n          </mu-list-item>\n          <mu-list-item title=\"Drafts\" value=\"list2\">\n            <mu-icon slot=\"left\" value=\"drafts\"/>\n          </mu-list-item>\n          <mu-list-item title=\"Inbox\" toggleNested value=\"list3\">\n            <mu-icon slot=\"left\" value=\"inbox\"/>\n            <mu-list-item slot=\"nested\" title=\"Starred\" value=\"list4\">\n              <mu-icon slot=\"left\" value=\"grade\"/>\n            </mu-list-item>\n            <mu-list-item slot=\"nested\" disabled title=\"Sent mail\" toggleNested value=\"list5\">\n              <mu-icon slot=\"left\" value=\"send\"/>\n              <mu-list-item title=\"Drafts\" slot=\"nested\" value=\"list6\">\n                <mu-icon slot=\"left\" value=\"drafts\"/>\n              </mu-list-item>\n            </mu-list-item>\n            <mu-list-item slot=\"nested\" title=\"Inbox\" toggleNested value=\"list7\">\n              <mu-icon slot=\"left\" value=\"inbox\"/>\n              <mu-list-item title=\"Drafts\" slot=\"nested\" value=\"list8\">\n                <mu-icon slot=\"left\" value=\"drafts\"/>\n              </mu-list-item>\n            </mu-list-item>\n          </mu-list-item>\n        </mu-list>\n      </div>\n      <div class=\"content-right\">\n        <div class=\"breadcrumb\">\n          <mu-breadcrumb>\n            <mu-breadcrumb-item href=\"/\">Home</mu-breadcrumb-item>\n            <mu-breadcrumb-item href=\"/\">VideoGame</mu-breadcrumb-item>\n            <mu-breadcrumb-item>Download</mu-breadcrumb-item>\n          </mu-breadcrumb>\n        </div>\n        <div class=\"body\">\n          <mu-sub-header>阳光</mu-sub-header>\n          <mu-content-block>\n            散落在指尖的阳光，我试着轻轻抓住光影的踪迹，它却在眉宇间投下一片淡淡的阴影。调皮的阳光掀动了四月的心帘，温暖如约的歌声渐起。似乎在诉说着，我也可以在漆黑的角落里，找到阴影背后的阳光，找到阳光与阴影奏出和谐的旋律。我要用一颗敏感赤诚的心迎接每一缕滑过指尖的阳光！\n          </mu-content-block>\n        </div>\n      </div>\n    </div>\n    <div class=\"footer\">\n      Muse-UI ©2017 Created by Muse-UI\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      activeTab: 'tab1',\n      activeList: 'list1'\n    }\n  },\n  methods: {\n    handleTabChange (val) {\n      this.activeTab = val\n    },\n    handleListChange (val) {\n      this.activeList = val\n    }\n  }\n}\n</script>\n<style scoped>\n.layout{\n  background-color: rgb(236, 236, 236);\n}\n\n.header{\n  background-color: #7e57c2;\n}\n\n.logo{\n  font-size: 24px;\n  color: white;\n  display: inline-block;\n  padding: 10px 20px;\n}\n\n.nav{\n  display: inline-block;\n  width: calc(100% - 150px);\n  margin: 0 auto;\n}\n\n.tab{\n  margin: 0 auto;\n  width: 400px;\n  background-color: rgba(0, 0, 0, 0);\n}\n\n.content{\n  overflow: hidden;\n}\n\n.content-left{\n  width: 30%;\n  float: left;\n  background-color: white;\n  margin-bottom: -4000px;\n  padding-bottom: 4000px;\n}\n\n.content-right{\n  width: 70%;\n  display: inline-block;\n  float: right;\n  padding: 10px 20px;\n  background-color: rgba(0, 0, 0, 0)\n}\n\n.breadcrumb{\n  margin: 10px 0;\n}\n\n.body{\n  background-color: white;\n  border-radius: 5px;\n  min-height: 500px;\n}\n\n.footer{\n  padding: 20px 0;\n  text-align: center;\n}\n</style>\n```\n### List\n``` html\n<template>\n<div>\n  <mu-raised-button label=\"unselect\" @click=\"unselect\"/>\n  <mu-table multiSelectable enableSelectAll ref=\"table\">\n    <mu-thead>\n      <mu-tr>\n        <mu-th>ID</mu-th>\n        <mu-th>Name</mu-th>\n        <mu-th>Status</mu-th>\n      </mu-tr>\n    </mu-thead>\n    <mu-tbody>\n      <mu-tr>\n        <mu-td>1</mu-td>\n        <mu-td>John Smith</mu-td>\n        <mu-td>Employed</mu-td>\n      </mu-tr>\n      <mu-tr>\n        <mu-td>2</mu-td>\n        <mu-td>Randal White</mu-td>\n        <mu-td>Unemployed</mu-td>\n      </mu-tr>\n      <mu-tr>\n        <mu-td>3</mu-td>\n        <mu-td>Stephanie Sanders</mu-td>\n        <mu-td>Employed</mu-td>\n      </mu-tr>\n      <mu-tr>\n        <mu-td>4</mu-td>\n        <mu-td>Steve Brown</mu-td>\n        <mu-td>Employed</mu-td>\n      </mu-tr>\n    </mu-tbody>\n  </mu-table>\n</div>\n</template>\n<script>\nexport default {\n    methods: {\n    unselect () {\n      this.$refs.table.unSelectAll()\n    }\n  }\n}\n</script>\n```\n\n## 修改router文件夹下index.js\n路由使用了vue得嵌套路由模板routes后内容为路由跳转逻辑\n``` javascript\nimport Vue from 'vue'\nimport Router from 'vue-router'\nimport MuseUI from 'muse-ui'\nimport 'muse-ui/dist/muse-ui.css'\nimport 'muse-ui/dist/theme-carbon.css' // 使用 carbon 主题\nimport Lists from '@/components/List'//<--从components目录下引入模板页面\nimport Home from '@/components/home'//<--从components目录下引入模板页面\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'indexPage',\n      component: Home,\n      children:[\n                {\n                    path:'list',\n                    name: 'list',\n                    component: Lists,\n                }\n            ]\n    },\n    {\n        path:'*',\n        redirect: '/'\n    }\n  ]\n})\n```\n目前页面暂时搭载完成，后期会继续更新\n\n# 跨域问题\n由于本地调试需要前后台关联所以在vue 搭建的目录里config中的index.js\n``` javascript\ndev: {\n    env: require('./dev.env'),\n    port: process.env.PORT || 8080,\n    autoOpenBrowser: true,\n    assetsSubDirectory: 'static',\n    assetsPublicPath: '/',\n    proxyTable: {\n      '/users': {\n        target:'http://127.0.0.1:3000',\n        changeOrigin: true\n      }\n    }\n```\n\n`Access-Control-Allow-Origin`问题\n在Express服务器文件夹里添加：\n``` javascript\n// var app = require('express')();\napp.all(\"*\", function (req, res, next) {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header(\"Access-Control-Allow-Headers\", \"Content-Type,Content-Length, Authorization, Accept,X-Requested-With\");\n  res.header(\"Access-Control-Allow-Methods\",\"PUT,POST,GET,DELETE,OPTIONS\");\n  next();\n});\n```\n# node获取axios post传值问题(express)\n由于axios post传值方法是json 所以很多后台读取不到。查了很多资料。。 具体原因就是headers的方式问题(4种表头传值方法 看的有点蒙比，不过大概知道是什么问题了)\n后来发现express其实提供了解决方法：'bodyParser'插件\n用express搭建的话会生成如下代码:\n``` javascript\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n```\n\n具体到路由的话 直接使用res.body获取取值就可以了！\n\n前台axios用qs\n``` javascript\nimport axios from 'axios';\nimport qs from 'qs';//axios自带 不用在安装了\n\naxios.post('http://127.0.0.1:3000/users/findAdmin',qs.stringify({ \n        'username': name ,\n        'pwd': pwd\n      }))\n      .then((res)=>{\n        if(res.data.rs.length === 0){\n          alert(\"请输入正确的用户名\");\n        }else{\n          alert(200);\n          this.$router.push('/admin');\n        }\n        console.log(res);\n      }).catch((res)=>{\n        alert(\"系统错误\");\n      })\n```\n","source":"_posts/vue.md","raw":"---\ntitle: Vue2.0\ndate: 2017-10-31 16:28:08\ntags: vue\ncategories: FE\nkeywords: vue web 前端\n---\n>vue搭建后台管理页面(刚接触，踩了很多坑，好记性不如烂笔头，还是需要多多总结)\n\n转载请注明出处\n\n参考资料：\n[Vue](https://cn.vuejs.org/v2/guide/installation.html)，[Vue-router](https://router.vuejs.org/zh-cn/)，[muse-ui](http://www.muse-ui.org/#/install)\n\n# 用vue-cli脚手架创建一个基于webpack的Vue项目\n环境：node\n全局安装vue-cli脚手架：`npm install -g vue-cli`(安装过慢请尝试使用淘宝镜像)\n新建文件夹后，命令行输入`vue init webpack 项目名`.\n`npm install`安装依赖项，开发调试请使用`npm run dev`\n`npm install --save muse-ui`安装页面插件\n<!--  more  -->\n# 使用muse-ui快速搭建页面\n## 修改src目录下main.js\n``` javascript\nimport Vue from 'vue'\nimport App from './App'\nimport MuseUI from 'muse-ui' //<--引入MuseUI\nimport router from './router'\nimport 'muse-ui/dist/muse-ui.css'//<--引入MuseUI主题\nimport 'muse-ui/dist/theme-carbon.css' // 使用 carbon 主题\n\nVue.use(MuseUI)//<--引入MuseUI\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  template: '<App/>',\n  components: { App }\n})\n\n```\n## components文件夹下新建home.vue,List.vue\n引入muse-ui模板\n### home.vue\n由于要使用vue-router做路由内嵌套路由跳转，从官方issue中查到可以直接在标签添加`to=\"/\"`实现\n如：\n`<mu-list-item title=\"Sent mail\" to=\"/list\" value=\"list1\" >`\n``` html\n<template>\n  <div class=\"layout\">\n    <div class=\"header\">\n      <div class=\"logo\">\n        Muse-UI\n      </div>\n      <div class=\"nav\">\n        <mu-tabs :value=\"activeTab\" @change=\"handleTabChange\" class=\"tab\">\n          <mu-tab value=\"tab1\" title=\"Nav One\"/>\n          <mu-tab value=\"tab2\" title=\"Nav TwO\"/>\n          <mu-tab value=\"tab3\" title=\"Nav Three\"/>\n        </mu-tabs>\n      </div>\n    </div>\n    <div class=\"content\">\n      <div class=\"content-left\">\n        <mu-list @change=\"handleListChange\" :value=\"activeList\">\n          <mu-list-item title=\"Sent mail\" to=\"/list\" value=\"list1\" ><!--vue路由跳转-->\n            <mu-icon slot=\"left\" value=\"send\" />\n          </mu-list-item>\n          <mu-list-item title=\"Drafts\" value=\"list2\">\n            <mu-icon slot=\"left\" value=\"drafts\"/>\n          </mu-list-item>\n          <mu-list-item title=\"Inbox\" toggleNested value=\"list3\">\n            <mu-icon slot=\"left\" value=\"inbox\"/>\n            <mu-list-item slot=\"nested\" title=\"Starred\" value=\"list4\">\n              <mu-icon slot=\"left\" value=\"grade\"/>\n            </mu-list-item>\n            <mu-list-item slot=\"nested\" disabled title=\"Sent mail\" toggleNested value=\"list5\">\n              <mu-icon slot=\"left\" value=\"send\"/>\n              <mu-list-item title=\"Drafts\" slot=\"nested\" value=\"list6\">\n                <mu-icon slot=\"left\" value=\"drafts\"/>\n              </mu-list-item>\n            </mu-list-item>\n            <mu-list-item slot=\"nested\" title=\"Inbox\" toggleNested value=\"list7\">\n              <mu-icon slot=\"left\" value=\"inbox\"/>\n              <mu-list-item title=\"Drafts\" slot=\"nested\" value=\"list8\">\n                <mu-icon slot=\"left\" value=\"drafts\"/>\n              </mu-list-item>\n            </mu-list-item>\n          </mu-list-item>\n        </mu-list>\n      </div>\n      <div class=\"content-right\">\n        <div class=\"breadcrumb\">\n          <mu-breadcrumb>\n            <mu-breadcrumb-item href=\"/\">Home</mu-breadcrumb-item>\n            <mu-breadcrumb-item href=\"/\">VideoGame</mu-breadcrumb-item>\n            <mu-breadcrumb-item>Download</mu-breadcrumb-item>\n          </mu-breadcrumb>\n        </div>\n        <div class=\"body\">\n          <mu-sub-header>阳光</mu-sub-header>\n          <mu-content-block>\n            散落在指尖的阳光，我试着轻轻抓住光影的踪迹，它却在眉宇间投下一片淡淡的阴影。调皮的阳光掀动了四月的心帘，温暖如约的歌声渐起。似乎在诉说着，我也可以在漆黑的角落里，找到阴影背后的阳光，找到阳光与阴影奏出和谐的旋律。我要用一颗敏感赤诚的心迎接每一缕滑过指尖的阳光！\n          </mu-content-block>\n        </div>\n      </div>\n    </div>\n    <div class=\"footer\">\n      Muse-UI ©2017 Created by Muse-UI\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      activeTab: 'tab1',\n      activeList: 'list1'\n    }\n  },\n  methods: {\n    handleTabChange (val) {\n      this.activeTab = val\n    },\n    handleListChange (val) {\n      this.activeList = val\n    }\n  }\n}\n</script>\n<style scoped>\n.layout{\n  background-color: rgb(236, 236, 236);\n}\n\n.header{\n  background-color: #7e57c2;\n}\n\n.logo{\n  font-size: 24px;\n  color: white;\n  display: inline-block;\n  padding: 10px 20px;\n}\n\n.nav{\n  display: inline-block;\n  width: calc(100% - 150px);\n  margin: 0 auto;\n}\n\n.tab{\n  margin: 0 auto;\n  width: 400px;\n  background-color: rgba(0, 0, 0, 0);\n}\n\n.content{\n  overflow: hidden;\n}\n\n.content-left{\n  width: 30%;\n  float: left;\n  background-color: white;\n  margin-bottom: -4000px;\n  padding-bottom: 4000px;\n}\n\n.content-right{\n  width: 70%;\n  display: inline-block;\n  float: right;\n  padding: 10px 20px;\n  background-color: rgba(0, 0, 0, 0)\n}\n\n.breadcrumb{\n  margin: 10px 0;\n}\n\n.body{\n  background-color: white;\n  border-radius: 5px;\n  min-height: 500px;\n}\n\n.footer{\n  padding: 20px 0;\n  text-align: center;\n}\n</style>\n```\n### List\n``` html\n<template>\n<div>\n  <mu-raised-button label=\"unselect\" @click=\"unselect\"/>\n  <mu-table multiSelectable enableSelectAll ref=\"table\">\n    <mu-thead>\n      <mu-tr>\n        <mu-th>ID</mu-th>\n        <mu-th>Name</mu-th>\n        <mu-th>Status</mu-th>\n      </mu-tr>\n    </mu-thead>\n    <mu-tbody>\n      <mu-tr>\n        <mu-td>1</mu-td>\n        <mu-td>John Smith</mu-td>\n        <mu-td>Employed</mu-td>\n      </mu-tr>\n      <mu-tr>\n        <mu-td>2</mu-td>\n        <mu-td>Randal White</mu-td>\n        <mu-td>Unemployed</mu-td>\n      </mu-tr>\n      <mu-tr>\n        <mu-td>3</mu-td>\n        <mu-td>Stephanie Sanders</mu-td>\n        <mu-td>Employed</mu-td>\n      </mu-tr>\n      <mu-tr>\n        <mu-td>4</mu-td>\n        <mu-td>Steve Brown</mu-td>\n        <mu-td>Employed</mu-td>\n      </mu-tr>\n    </mu-tbody>\n  </mu-table>\n</div>\n</template>\n<script>\nexport default {\n    methods: {\n    unselect () {\n      this.$refs.table.unSelectAll()\n    }\n  }\n}\n</script>\n```\n\n## 修改router文件夹下index.js\n路由使用了vue得嵌套路由模板routes后内容为路由跳转逻辑\n``` javascript\nimport Vue from 'vue'\nimport Router from 'vue-router'\nimport MuseUI from 'muse-ui'\nimport 'muse-ui/dist/muse-ui.css'\nimport 'muse-ui/dist/theme-carbon.css' // 使用 carbon 主题\nimport Lists from '@/components/List'//<--从components目录下引入模板页面\nimport Home from '@/components/home'//<--从components目录下引入模板页面\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'indexPage',\n      component: Home,\n      children:[\n                {\n                    path:'list',\n                    name: 'list',\n                    component: Lists,\n                }\n            ]\n    },\n    {\n        path:'*',\n        redirect: '/'\n    }\n  ]\n})\n```\n目前页面暂时搭载完成，后期会继续更新\n\n# 跨域问题\n由于本地调试需要前后台关联所以在vue 搭建的目录里config中的index.js\n``` javascript\ndev: {\n    env: require('./dev.env'),\n    port: process.env.PORT || 8080,\n    autoOpenBrowser: true,\n    assetsSubDirectory: 'static',\n    assetsPublicPath: '/',\n    proxyTable: {\n      '/users': {\n        target:'http://127.0.0.1:3000',\n        changeOrigin: true\n      }\n    }\n```\n\n`Access-Control-Allow-Origin`问题\n在Express服务器文件夹里添加：\n``` javascript\n// var app = require('express')();\napp.all(\"*\", function (req, res, next) {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header(\"Access-Control-Allow-Headers\", \"Content-Type,Content-Length, Authorization, Accept,X-Requested-With\");\n  res.header(\"Access-Control-Allow-Methods\",\"PUT,POST,GET,DELETE,OPTIONS\");\n  next();\n});\n```\n# node获取axios post传值问题(express)\n由于axios post传值方法是json 所以很多后台读取不到。查了很多资料。。 具体原因就是headers的方式问题(4种表头传值方法 看的有点蒙比，不过大概知道是什么问题了)\n后来发现express其实提供了解决方法：'bodyParser'插件\n用express搭建的话会生成如下代码:\n``` javascript\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n```\n\n具体到路由的话 直接使用res.body获取取值就可以了！\n\n前台axios用qs\n``` javascript\nimport axios from 'axios';\nimport qs from 'qs';//axios自带 不用在安装了\n\naxios.post('http://127.0.0.1:3000/users/findAdmin',qs.stringify({ \n        'username': name ,\n        'pwd': pwd\n      }))\n      .then((res)=>{\n        if(res.data.rs.length === 0){\n          alert(\"请输入正确的用户名\");\n        }else{\n          alert(200);\n          this.$router.push('/admin');\n        }\n        console.log(res);\n      }).catch((res)=>{\n        alert(\"系统错误\");\n      })\n```\n","slug":"vue","published":1,"updated":"2017-11-06T10:29:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1k7001ncdonw63cq0f4","content":"<blockquote>\n<p>vue搭建后台管理页面(刚接触，踩了很多坑，好记性不如烂笔头，还是需要多多总结)</p>\n</blockquote>\n<p>转载请注明出处</p>\n<p>参考资料：<br><a href=\"https://cn.vuejs.org/v2/guide/installation.html\" target=\"_blank\" rel=\"external\">Vue</a>，<a href=\"https://router.vuejs.org/zh-cn/\" target=\"_blank\" rel=\"external\">Vue-router</a>，<a href=\"http://www.muse-ui.org/#/install\" target=\"_blank\" rel=\"external\">muse-ui</a></p>\n<h1 id=\"用vue-cli脚手架创建一个基于webpack的Vue项目\"><a href=\"#用vue-cli脚手架创建一个基于webpack的Vue项目\" class=\"headerlink\" title=\"用vue-cli脚手架创建一个基于webpack的Vue项目\"></a>用vue-cli脚手架创建一个基于webpack的Vue项目</h1><p>环境：node<br>全局安装vue-cli脚手架：<code>npm install -g vue-cli</code>(安装过慢请尝试使用淘宝镜像)<br>新建文件夹后，命令行输入<code>vue init webpack 项目名</code>.<br><code>npm install</code>安装依赖项，开发调试请使用<code>npm run dev</code><br><code>npm install --save muse-ui</code>安装页面插件<br><a id=\"more\"></a></p>\n<h1 id=\"使用muse-ui快速搭建页面\"><a href=\"#使用muse-ui快速搭建页面\" class=\"headerlink\" title=\"使用muse-ui快速搭建页面\"></a>使用muse-ui快速搭建页面</h1><h2 id=\"修改src目录下main-js\"><a href=\"#修改src目录下main-js\" class=\"headerlink\" title=\"修改src目录下main.js\"></a>修改src目录下main.js</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App'</span></div><div class=\"line\"><span class=\"keyword\">import</span> MuseUI <span class=\"keyword\">from</span> <span class=\"string\">'muse-ui'</span> <span class=\"comment\">//&lt;--引入MuseUI</span></div><div class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">'./router'</span></div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'muse-ui/dist/muse-ui.css'</span><span class=\"comment\">//&lt;--引入MuseUI主题</span></div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'muse-ui/dist/theme-carbon.css'</span> <span class=\"comment\">// 使用 carbon 主题</span></div><div class=\"line\"></div><div class=\"line\">Vue.use(MuseUI)<span class=\"comment\">//&lt;--引入MuseUI</span></div><div class=\"line\"></div><div class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/* eslint-disable no-new */</span></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  <span class=\"attr\">el</span>: <span class=\"string\">'#app'</span>,</div><div class=\"line\">  router,</div><div class=\"line\">  <span class=\"attr\">template</span>: <span class=\"string\">'&lt;App/&gt;'</span>,</div><div class=\"line\">  <span class=\"attr\">components</span>: &#123; App &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h2 id=\"components文件夹下新建home-vue-List-vue\"><a href=\"#components文件夹下新建home-vue-List-vue\" class=\"headerlink\" title=\"components文件夹下新建home.vue,List.vue\"></a>components文件夹下新建home.vue,List.vue</h2><p>引入muse-ui模板</p>\n<h3 id=\"home-vue\"><a href=\"#home-vue\" class=\"headerlink\" title=\"home.vue\"></a>home.vue</h3><p>由于要使用vue-router做路由内嵌套路由跳转，从官方issue中查到可以直接在标签添加<code>to=&quot;/&quot;</code>实现<br>如：<br><code>&lt;mu-list-item title=&quot;Sent mail&quot; to=&quot;/list&quot; value=&quot;list1&quot; &gt;</code><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layout\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"header\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"logo\"</span>&gt;</span></div><div class=\"line\">        Muse-UI</div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-tabs</span> <span class=\"attr\">:value</span>=<span class=\"string\">\"activeTab\"</span> @<span class=\"attr\">change</span>=<span class=\"string\">\"handleTabChange\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tab\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">mu-tab</span> <span class=\"attr\">value</span>=<span class=\"string\">\"tab1\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Nav One\"</span>/&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">mu-tab</span> <span class=\"attr\">value</span>=<span class=\"string\">\"tab2\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Nav TwO\"</span>/&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">mu-tab</span> <span class=\"attr\">value</span>=<span class=\"string\">\"tab3\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Nav Three\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">mu-tabs</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content-left\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-list</span> @<span class=\"attr\">change</span>=<span class=\"string\">\"handleListChange\"</span> <span class=\"attr\">:value</span>=<span class=\"string\">\"activeList\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">mu-list-item</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Sent mail\"</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/list\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list1\"</span> &gt;</span><span class=\"comment\">&lt;!--vue路由跳转--&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mu-icon</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"left\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"send\"</span> /&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">mu-list-item</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">mu-list-item</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Drafts\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list2\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mu-icon</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"left\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"drafts\"</span>/&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">mu-list-item</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">mu-list-item</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Inbox\"</span> <span class=\"attr\">toggleNested</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list3\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mu-icon</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"left\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"inbox\"</span>/&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mu-list-item</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"nested\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Starred\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list4\"</span>&gt;</span></div><div class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">mu-icon</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"left\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"grade\"</span>/&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">mu-list-item</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mu-list-item</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"nested\"</span> <span class=\"attr\">disabled</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Sent mail\"</span> <span class=\"attr\">toggleNested</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list5\"</span>&gt;</span></div><div class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">mu-icon</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"left\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"send\"</span>/&gt;</span></div><div class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">mu-list-item</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Drafts\"</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"nested\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list6\"</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">mu-icon</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"left\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"drafts\"</span>/&gt;</span></div><div class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">mu-list-item</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">mu-list-item</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mu-list-item</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"nested\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Inbox\"</span> <span class=\"attr\">toggleNested</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list7\"</span>&gt;</span></div><div class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">mu-icon</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"left\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"inbox\"</span>/&gt;</span></div><div class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">mu-list-item</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Drafts\"</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"nested\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list8\"</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">mu-icon</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"left\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"drafts\"</span>/&gt;</span></div><div class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">mu-list-item</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">mu-list-item</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">mu-list-item</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">mu-list</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content-right\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"breadcrumb\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">mu-breadcrumb</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mu-breadcrumb-item</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/\"</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">mu-breadcrumb-item</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mu-breadcrumb-item</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/\"</span>&gt;</span>VideoGame<span class=\"tag\">&lt;/<span class=\"name\">mu-breadcrumb-item</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mu-breadcrumb-item</span>&gt;</span>Download<span class=\"tag\">&lt;/<span class=\"name\">mu-breadcrumb-item</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">mu-breadcrumb</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"body\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">mu-sub-header</span>&gt;</span>阳光<span class=\"tag\">&lt;/<span class=\"name\">mu-sub-header</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">mu-content-block</span>&gt;</span></div><div class=\"line\">            散落在指尖的阳光，我试着轻轻抓住光影的踪迹，它却在眉宇间投下一片淡淡的阴影。调皮的阳光掀动了四月的心帘，温暖如约的歌声渐起。似乎在诉说着，我也可以在漆黑的角落里，找到阴影背后的阳光，找到阳光与阴影奏出和谐的旋律。我要用一颗敏感赤诚的心迎接每一缕滑过指尖的阳光！</div><div class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">mu-content-block</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"footer\"</span>&gt;</span></div><div class=\"line\">      Muse-UI ©2017 Created by Muse-UI</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  data () &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">      <span class=\"attr\">activeTab</span>: <span class=\"string\">'tab1'</span>,</div><div class=\"line\">      <span class=\"attr\">activeList</span>: <span class=\"string\">'list1'</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">methods</span>: &#123;</div><div class=\"line\">    handleTabChange (val) &#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.activeTab = val</div><div class=\"line\">    &#125;,</div><div class=\"line\">    handleListChange (val) &#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.activeList = val</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"css\"></span></div><div class=\"line\"><span class=\"selector-class\">.layout</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(236, 236, 236);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.header</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#7e57c2</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.logo</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">24px</span>;</div><div class=\"line\">  <span class=\"attribute\">color</span>: white;</div><div class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">20px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.nav</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"built_in\">calc</span>(100% - 150px);</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.tab</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(0, 0, 0, 0);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.content</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.content-left</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">30%</span>;</div><div class=\"line\">  <span class=\"attribute\">float</span>: left;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: white;</div><div class=\"line\">  <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">4000px</span>;</div><div class=\"line\">  <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">4000px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.content-right</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">70%</span>;</div><div class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">  <span class=\"attribute\">float</span>: right;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">20px</span>;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(0, 0, 0, 0)</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.breadcrumb</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.body</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: white;</div><div class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</div><div class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">500px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.footer</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span> <span class=\"number\">0</span>;</div><div class=\"line\">  <span class=\"attribute\">text-align</span>: center;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mu-raised-button</span> <span class=\"attr\">label</span>=<span class=\"string\">\"unselect\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"unselect\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mu-table</span> <span class=\"attr\">multiSelectable</span> <span class=\"attr\">enableSelectAll</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"table\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mu-thead</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-th</span>&gt;</span>ID<span class=\"tag\">&lt;/<span class=\"name\">mu-th</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-th</span>&gt;</span>Name<span class=\"tag\">&lt;/<span class=\"name\">mu-th</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-th</span>&gt;</span>Status<span class=\"tag\">&lt;/<span class=\"name\">mu-th</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mu-thead</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mu-tbody</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>John Smith<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>Employed<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>Randal White<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>Unemployed<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>Stephanie Sanders<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>Employed<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>Steve Brown<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>Employed<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mu-tbody</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">mu-table</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">    <span class=\"attr\">methods</span>: &#123;</div><div class=\"line\">    unselect () &#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.$refs.table.unSelectAll()</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"修改router文件夹下index-js\"><a href=\"#修改router文件夹下index-js\" class=\"headerlink\" title=\"修改router文件夹下index.js\"></a>修改router文件夹下index.js</h2><p>路由使用了vue得嵌套路由模板routes后内容为路由跳转逻辑<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> Router <span class=\"keyword\">from</span> <span class=\"string\">'vue-router'</span></div><div class=\"line\"><span class=\"keyword\">import</span> MuseUI <span class=\"keyword\">from</span> <span class=\"string\">'muse-ui'</span></div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'muse-ui/dist/muse-ui.css'</span></div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'muse-ui/dist/theme-carbon.css'</span> <span class=\"comment\">// 使用 carbon 主题</span></div><div class=\"line\"><span class=\"keyword\">import</span> Lists <span class=\"keyword\">from</span> <span class=\"string\">'@/components/List'</span><span class=\"comment\">//&lt;--从components目录下引入模板页面</span></div><div class=\"line\"><span class=\"keyword\">import</span> Home <span class=\"keyword\">from</span> <span class=\"string\">'@/components/home'</span><span class=\"comment\">//&lt;--从components目录下引入模板页面</span></div><div class=\"line\"></div><div class=\"line\">Vue.use(Router)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Router(&#123;</div><div class=\"line\">  <span class=\"attr\">routes</span>: [</div><div class=\"line\">    &#123;</div><div class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">'/'</span>,</div><div class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">'indexPage'</span>,</div><div class=\"line\">      <span class=\"attr\">component</span>: Home,</div><div class=\"line\">      <span class=\"attr\">children</span>:[</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"attr\">path</span>:<span class=\"string\">'list'</span>,</div><div class=\"line\">                    <span class=\"attr\">name</span>: <span class=\"string\">'list'</span>,</div><div class=\"line\">                    <span class=\"attr\">component</span>: Lists,</div><div class=\"line\">                &#125;</div><div class=\"line\">            ]</div><div class=\"line\">    &#125;,</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"attr\">path</span>:<span class=\"string\">'*'</span>,</div><div class=\"line\">        <span class=\"attr\">redirect</span>: <span class=\"string\">'/'</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  ]</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<p>目前页面暂时搭载完成，后期会继续更新</p>\n<h1 id=\"跨域问题\"><a href=\"#跨域问题\" class=\"headerlink\" title=\"跨域问题\"></a>跨域问题</h1><p>由于本地调试需要前后台关联所以在vue 搭建的目录里config中的index.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">dev: &#123;</div><div class=\"line\">    <span class=\"attr\">env</span>: <span class=\"built_in\">require</span>(<span class=\"string\">'./dev.env'</span>),</div><div class=\"line\">    <span class=\"attr\">port</span>: process.env.PORT || <span class=\"number\">8080</span>,</div><div class=\"line\">    <span class=\"attr\">autoOpenBrowser</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">    <span class=\"attr\">assetsSubDirectory</span>: <span class=\"string\">'static'</span>,</div><div class=\"line\">    <span class=\"attr\">assetsPublicPath</span>: <span class=\"string\">'/'</span>,</div><div class=\"line\">    <span class=\"attr\">proxyTable</span>: &#123;</div><div class=\"line\">      <span class=\"string\">'/users'</span>: &#123;</div><div class=\"line\">        <span class=\"attr\">target</span>:<span class=\"string\">'http://127.0.0.1:3000'</span>,</div><div class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span></div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p><code>Access-Control-Allow-Origin</code>问题<br>在Express服务器文件夹里添加：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// var app = require('express')();</span></div><div class=\"line\">app.all(<span class=\"string\">\"*\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  res.header(<span class=\"string\">'Access-Control-Allow-Origin'</span>, <span class=\"string\">'*'</span>);</div><div class=\"line\">  res.header(<span class=\"string\">\"Access-Control-Allow-Headers\"</span>, <span class=\"string\">\"Content-Type,Content-Length, Authorization, Accept,X-Requested-With\"</span>);</div><div class=\"line\">  res.header(<span class=\"string\">\"Access-Control-Allow-Methods\"</span>,<span class=\"string\">\"PUT,POST,GET,DELETE,OPTIONS\"</span>);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<h1 id=\"node获取axios-post传值问题-express\"><a href=\"#node获取axios-post传值问题-express\" class=\"headerlink\" title=\"node获取axios post传值问题(express)\"></a>node获取axios post传值问题(express)</h1><p>由于axios post传值方法是json 所以很多后台读取不到。查了很多资料。。 具体原因就是headers的方式问题(4种表头传值方法 看的有点蒙比，不过大概知道是什么问题了)<br>后来发现express其实提供了解决方法：’bodyParser’插件<br>用express搭建的话会生成如下代码:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.use(bodyParser.json());</div><div class=\"line\">app.use(bodyParser.urlencoded(&#123; <span class=\"attr\">extended</span>: <span class=\"literal\">false</span> &#125;));</div></pre></td></tr></table></figure></p>\n<p>具体到路由的话 直接使用res.body获取取值就可以了！</p>\n<p>前台axios用qs<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> qs <span class=\"keyword\">from</span> <span class=\"string\">'qs'</span>;<span class=\"comment\">//axios自带 不用在安装了</span></div><div class=\"line\"></div><div class=\"line\">axios.post(<span class=\"string\">'http://127.0.0.1:3000/users/findAdmin'</span>,qs.stringify(&#123; </div><div class=\"line\">        <span class=\"string\">'username'</span>: name ,</div><div class=\"line\">        <span class=\"string\">'pwd'</span>: pwd</div><div class=\"line\">      &#125;))</div><div class=\"line\">      .then(<span class=\"function\">(<span class=\"params\">res</span>)=&gt;</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(res.data.rs.length === <span class=\"number\">0</span>)&#123;</div><div class=\"line\">          alert(<span class=\"string\">\"请输入正确的用户名\"</span>);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">          alert(<span class=\"number\">200</span>);</div><div class=\"line\">          <span class=\"keyword\">this</span>.$router.push(<span class=\"string\">'/admin'</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(res);</div><div class=\"line\">      &#125;).catch(<span class=\"function\">(<span class=\"params\">res</span>)=&gt;</span>&#123;</div><div class=\"line\">        alert(<span class=\"string\">\"系统错误\"</span>);</div><div class=\"line\">      &#125;)</div></pre></td></tr></table></figure></p>\n","excerpt":"<blockquote>\n<p>vue搭建后台管理页面(刚接触，踩了很多坑，好记性不如烂笔头，还是需要多多总结)</p>\n</blockquote>\n<p>转载请注明出处</p>\n<p>参考资料：<br><a href=\"https://cn.vuejs.org/v2/guide/installation.html\">Vue</a>，<a href=\"https://router.vuejs.org/zh-cn/\">Vue-router</a>，<a href=\"http://www.muse-ui.org/#/install\">muse-ui</a></p>\n<h1 id=\"用vue-cli脚手架创建一个基于webpack的Vue项目\"><a href=\"#用vue-cli脚手架创建一个基于webpack的Vue项目\" class=\"headerlink\" title=\"用vue-cli脚手架创建一个基于webpack的Vue项目\"></a>用vue-cli脚手架创建一个基于webpack的Vue项目</h1><p>环境：node<br>全局安装vue-cli脚手架：<code>npm install -g vue-cli</code>(安装过慢请尝试使用淘宝镜像)<br>新建文件夹后，命令行输入<code>vue init webpack 项目名</code>.<br><code>npm install</code>安装依赖项，开发调试请使用<code>npm run dev</code><br><code>npm install --save muse-ui</code>安装页面插件<br>","more":"</p>\n<h1 id=\"使用muse-ui快速搭建页面\"><a href=\"#使用muse-ui快速搭建页面\" class=\"headerlink\" title=\"使用muse-ui快速搭建页面\"></a>使用muse-ui快速搭建页面</h1><h2 id=\"修改src目录下main-js\"><a href=\"#修改src目录下main-js\" class=\"headerlink\" title=\"修改src目录下main.js\"></a>修改src目录下main.js</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App'</span></div><div class=\"line\"><span class=\"keyword\">import</span> MuseUI <span class=\"keyword\">from</span> <span class=\"string\">'muse-ui'</span> <span class=\"comment\">//&lt;--引入MuseUI</span></div><div class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">'./router'</span></div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'muse-ui/dist/muse-ui.css'</span><span class=\"comment\">//&lt;--引入MuseUI主题</span></div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'muse-ui/dist/theme-carbon.css'</span> <span class=\"comment\">// 使用 carbon 主题</span></div><div class=\"line\"></div><div class=\"line\">Vue.use(MuseUI)<span class=\"comment\">//&lt;--引入MuseUI</span></div><div class=\"line\"></div><div class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/* eslint-disable no-new */</span></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">  <span class=\"attr\">el</span>: <span class=\"string\">'#app'</span>,</div><div class=\"line\">  router,</div><div class=\"line\">  <span class=\"attr\">template</span>: <span class=\"string\">'&lt;App/&gt;'</span>,</div><div class=\"line\">  <span class=\"attr\">components</span>: &#123; App &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h2 id=\"components文件夹下新建home-vue-List-vue\"><a href=\"#components文件夹下新建home-vue-List-vue\" class=\"headerlink\" title=\"components文件夹下新建home.vue,List.vue\"></a>components文件夹下新建home.vue,List.vue</h2><p>引入muse-ui模板</p>\n<h3 id=\"home-vue\"><a href=\"#home-vue\" class=\"headerlink\" title=\"home.vue\"></a>home.vue</h3><p>由于要使用vue-router做路由内嵌套路由跳转，从官方issue中查到可以直接在标签添加<code>to=&quot;/&quot;</code>实现<br>如：<br><code>&lt;mu-list-item title=&quot;Sent mail&quot; to=&quot;/list&quot; value=&quot;list1&quot; &gt;</code><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"layout\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"header\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"logo\"</span>&gt;</span></div><div class=\"line\">        Muse-UI</div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-tabs</span> <span class=\"attr\">:value</span>=<span class=\"string\">\"activeTab\"</span> @<span class=\"attr\">change</span>=<span class=\"string\">\"handleTabChange\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tab\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">mu-tab</span> <span class=\"attr\">value</span>=<span class=\"string\">\"tab1\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Nav One\"</span>/&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">mu-tab</span> <span class=\"attr\">value</span>=<span class=\"string\">\"tab2\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Nav TwO\"</span>/&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">mu-tab</span> <span class=\"attr\">value</span>=<span class=\"string\">\"tab3\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Nav Three\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">mu-tabs</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content-left\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-list</span> @<span class=\"attr\">change</span>=<span class=\"string\">\"handleListChange\"</span> <span class=\"attr\">:value</span>=<span class=\"string\">\"activeList\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">mu-list-item</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Sent mail\"</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/list\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list1\"</span> &gt;</span><span class=\"comment\">&lt;!--vue路由跳转--&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mu-icon</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"left\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"send\"</span> /&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">mu-list-item</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">mu-list-item</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Drafts\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list2\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mu-icon</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"left\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"drafts\"</span>/&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">mu-list-item</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">mu-list-item</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Inbox\"</span> <span class=\"attr\">toggleNested</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list3\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mu-icon</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"left\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"inbox\"</span>/&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mu-list-item</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"nested\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Starred\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list4\"</span>&gt;</span></div><div class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">mu-icon</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"left\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"grade\"</span>/&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">mu-list-item</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mu-list-item</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"nested\"</span> <span class=\"attr\">disabled</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Sent mail\"</span> <span class=\"attr\">toggleNested</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list5\"</span>&gt;</span></div><div class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">mu-icon</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"left\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"send\"</span>/&gt;</span></div><div class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">mu-list-item</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Drafts\"</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"nested\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list6\"</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">mu-icon</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"left\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"drafts\"</span>/&gt;</span></div><div class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">mu-list-item</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">mu-list-item</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mu-list-item</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"nested\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Inbox\"</span> <span class=\"attr\">toggleNested</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list7\"</span>&gt;</span></div><div class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">mu-icon</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"left\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"inbox\"</span>/&gt;</span></div><div class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">mu-list-item</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Drafts\"</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"nested\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"list8\"</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">mu-icon</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"left\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"drafts\"</span>/&gt;</span></div><div class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">mu-list-item</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">mu-list-item</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">mu-list-item</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">mu-list</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content-right\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"breadcrumb\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">mu-breadcrumb</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mu-breadcrumb-item</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/\"</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">mu-breadcrumb-item</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mu-breadcrumb-item</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/\"</span>&gt;</span>VideoGame<span class=\"tag\">&lt;/<span class=\"name\">mu-breadcrumb-item</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mu-breadcrumb-item</span>&gt;</span>Download<span class=\"tag\">&lt;/<span class=\"name\">mu-breadcrumb-item</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">mu-breadcrumb</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"body\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">mu-sub-header</span>&gt;</span>阳光<span class=\"tag\">&lt;/<span class=\"name\">mu-sub-header</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">mu-content-block</span>&gt;</span></div><div class=\"line\">            散落在指尖的阳光，我试着轻轻抓住光影的踪迹，它却在眉宇间投下一片淡淡的阴影。调皮的阳光掀动了四月的心帘，温暖如约的歌声渐起。似乎在诉说着，我也可以在漆黑的角落里，找到阴影背后的阳光，找到阳光与阴影奏出和谐的旋律。我要用一颗敏感赤诚的心迎接每一缕滑过指尖的阳光！</div><div class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">mu-content-block</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"footer\"</span>&gt;</span></div><div class=\"line\">      Muse-UI ©2017 Created by Muse-UI</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  data () &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">      <span class=\"attr\">activeTab</span>: <span class=\"string\">'tab1'</span>,</div><div class=\"line\">      <span class=\"attr\">activeList</span>: <span class=\"string\">'list1'</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">methods</span>: &#123;</div><div class=\"line\">    handleTabChange (val) &#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.activeTab = val</div><div class=\"line\">    &#125;,</div><div class=\"line\">    handleListChange (val) &#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.activeList = val</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"css\"></div><div class=\"line\"><span class=\"selector-class\">.layout</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(236, 236, 236);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.header</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#7e57c2</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.logo</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">24px</span>;</div><div class=\"line\">  <span class=\"attribute\">color</span>: white;</div><div class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">20px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.nav</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"built_in\">calc</span>(100% - 150px);</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.tab</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(0, 0, 0, 0);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.content</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.content-left</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">30%</span>;</div><div class=\"line\">  <span class=\"attribute\">float</span>: left;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: white;</div><div class=\"line\">  <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">4000px</span>;</div><div class=\"line\">  <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">4000px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.content-right</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">70%</span>;</div><div class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">  <span class=\"attribute\">float</span>: right;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">20px</span>;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(0, 0, 0, 0)</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.breadcrumb</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.body</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">background-color</span>: white;</div><div class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</div><div class=\"line\">  <span class=\"attribute\">min-height</span>: <span class=\"number\">500px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.footer</span>&#123;</div><div class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span> <span class=\"number\">0</span>;</div><div class=\"line\">  <span class=\"attribute\">text-align</span>: center;</div><div class=\"line\">&#125;</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mu-raised-button</span> <span class=\"attr\">label</span>=<span class=\"string\">\"unselect\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"unselect\"</span>/&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mu-table</span> <span class=\"attr\">multiSelectable</span> <span class=\"attr\">enableSelectAll</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"table\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mu-thead</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-th</span>&gt;</span>ID<span class=\"tag\">&lt;/<span class=\"name\">mu-th</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-th</span>&gt;</span>Name<span class=\"tag\">&lt;/<span class=\"name\">mu-th</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-th</span>&gt;</span>Status<span class=\"tag\">&lt;/<span class=\"name\">mu-th</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mu-thead</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mu-tbody</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>John Smith<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>Employed<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>Randal White<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>Unemployed<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>Stephanie Sanders<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>Employed<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>Steve Brown<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mu-td</span>&gt;</span>Employed<span class=\"tag\">&lt;/<span class=\"name\">mu-td</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">mu-tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mu-tbody</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">mu-table</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">    <span class=\"attr\">methods</span>: &#123;</div><div class=\"line\">    unselect () &#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.$refs.table.unSelectAll()</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"修改router文件夹下index-js\"><a href=\"#修改router文件夹下index-js\" class=\"headerlink\" title=\"修改router文件夹下index.js\"></a>修改router文件夹下index.js</h2><p>路由使用了vue得嵌套路由模板routes后内容为路由跳转逻辑<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> Router <span class=\"keyword\">from</span> <span class=\"string\">'vue-router'</span></div><div class=\"line\"><span class=\"keyword\">import</span> MuseUI <span class=\"keyword\">from</span> <span class=\"string\">'muse-ui'</span></div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'muse-ui/dist/muse-ui.css'</span></div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'muse-ui/dist/theme-carbon.css'</span> <span class=\"comment\">// 使用 carbon 主题</span></div><div class=\"line\"><span class=\"keyword\">import</span> Lists <span class=\"keyword\">from</span> <span class=\"string\">'@/components/List'</span><span class=\"comment\">//&lt;--从components目录下引入模板页面</span></div><div class=\"line\"><span class=\"keyword\">import</span> Home <span class=\"keyword\">from</span> <span class=\"string\">'@/components/home'</span><span class=\"comment\">//&lt;--从components目录下引入模板页面</span></div><div class=\"line\"></div><div class=\"line\">Vue.use(Router)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Router(&#123;</div><div class=\"line\">  <span class=\"attr\">routes</span>: [</div><div class=\"line\">    &#123;</div><div class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">'/'</span>,</div><div class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">'indexPage'</span>,</div><div class=\"line\">      <span class=\"attr\">component</span>: Home,</div><div class=\"line\">      <span class=\"attr\">children</span>:[</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"attr\">path</span>:<span class=\"string\">'list'</span>,</div><div class=\"line\">                    <span class=\"attr\">name</span>: <span class=\"string\">'list'</span>,</div><div class=\"line\">                    <span class=\"attr\">component</span>: Lists,</div><div class=\"line\">                &#125;</div><div class=\"line\">            ]</div><div class=\"line\">    &#125;,</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"attr\">path</span>:<span class=\"string\">'*'</span>,</div><div class=\"line\">        <span class=\"attr\">redirect</span>: <span class=\"string\">'/'</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  ]</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<p>目前页面暂时搭载完成，后期会继续更新</p>\n<h1 id=\"跨域问题\"><a href=\"#跨域问题\" class=\"headerlink\" title=\"跨域问题\"></a>跨域问题</h1><p>由于本地调试需要前后台关联所以在vue 搭建的目录里config中的index.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">dev: &#123;</div><div class=\"line\">    <span class=\"attr\">env</span>: <span class=\"built_in\">require</span>(<span class=\"string\">'./dev.env'</span>),</div><div class=\"line\">    <span class=\"attr\">port</span>: process.env.PORT || <span class=\"number\">8080</span>,</div><div class=\"line\">    <span class=\"attr\">autoOpenBrowser</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">    <span class=\"attr\">assetsSubDirectory</span>: <span class=\"string\">'static'</span>,</div><div class=\"line\">    <span class=\"attr\">assetsPublicPath</span>: <span class=\"string\">'/'</span>,</div><div class=\"line\">    <span class=\"attr\">proxyTable</span>: &#123;</div><div class=\"line\">      <span class=\"string\">'/users'</span>: &#123;</div><div class=\"line\">        <span class=\"attr\">target</span>:<span class=\"string\">'http://127.0.0.1:3000'</span>,</div><div class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span></div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p><code>Access-Control-Allow-Origin</code>问题<br>在Express服务器文件夹里添加：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// var app = require('express')();</span></div><div class=\"line\">app.all(<span class=\"string\">\"*\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</div><div class=\"line\">  res.header(<span class=\"string\">'Access-Control-Allow-Origin'</span>, <span class=\"string\">'*'</span>);</div><div class=\"line\">  res.header(<span class=\"string\">\"Access-Control-Allow-Headers\"</span>, <span class=\"string\">\"Content-Type,Content-Length, Authorization, Accept,X-Requested-With\"</span>);</div><div class=\"line\">  res.header(<span class=\"string\">\"Access-Control-Allow-Methods\"</span>,<span class=\"string\">\"PUT,POST,GET,DELETE,OPTIONS\"</span>);</div><div class=\"line\">  next();</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<h1 id=\"node获取axios-post传值问题-express\"><a href=\"#node获取axios-post传值问题-express\" class=\"headerlink\" title=\"node获取axios post传值问题(express)\"></a>node获取axios post传值问题(express)</h1><p>由于axios post传值方法是json 所以很多后台读取不到。查了很多资料。。 具体原因就是headers的方式问题(4种表头传值方法 看的有点蒙比，不过大概知道是什么问题了)<br>后来发现express其实提供了解决方法：’bodyParser’插件<br>用express搭建的话会生成如下代码:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">app.use(bodyParser.json());</div><div class=\"line\">app.use(bodyParser.urlencoded(&#123; <span class=\"attr\">extended</span>: <span class=\"literal\">false</span> &#125;));</div></pre></td></tr></table></figure></p>\n<p>具体到路由的话 直接使用res.body获取取值就可以了！</p>\n<p>前台axios用qs<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> qs <span class=\"keyword\">from</span> <span class=\"string\">'qs'</span>;<span class=\"comment\">//axios自带 不用在安装了</span></div><div class=\"line\"></div><div class=\"line\">axios.post(<span class=\"string\">'http://127.0.0.1:3000/users/findAdmin'</span>,qs.stringify(&#123; </div><div class=\"line\">        <span class=\"string\">'username'</span>: name ,</div><div class=\"line\">        <span class=\"string\">'pwd'</span>: pwd</div><div class=\"line\">      &#125;))</div><div class=\"line\">      .then(<span class=\"function\">(<span class=\"params\">res</span>)=&gt;</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(res.data.rs.length === <span class=\"number\">0</span>)&#123;</div><div class=\"line\">          alert(<span class=\"string\">\"请输入正确的用户名\"</span>);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">          alert(<span class=\"number\">200</span>);</div><div class=\"line\">          <span class=\"keyword\">this</span>.$router.push(<span class=\"string\">'/admin'</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(res);</div><div class=\"line\">      &#125;).catch(<span class=\"function\">(<span class=\"params\">res</span>)=&gt;</span>&#123;</div><div class=\"line\">        alert(<span class=\"string\">\"系统错误\"</span>);</div><div class=\"line\">      &#125;)</div></pre></td></tr></table></figure></p>"},{"_content":"作者：周立\n链接：https://zhuanlan.zhihu.com/p/28515841\n来源：知乎\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n\nJava 的三大特性封装、继承、多态抽象类和接口的区别 Java 抽象类： 使用关键字 abstract 修饰的类叫做抽象类。 用 abstract 来修饰的方法叫做抽象方法。 特点： 1 含有抽象方法的类必须被声明为抽象类（不管是否还包含其他一般方法）（否则编译通不过）； 2 抽象类可以没有抽象方法，可以有普通方法。 3 抽象类必须被继承，抽象方法必须被重写： 若子类还是一个抽象类，不需要重写；否则必须要重写（override）。 抽象类不能被实例化（不能直接构造一个该类的对象）；抽象方法： 在类中没有方法体（抽象方法只需声明，而不需实现某些功能）； 抽象类中的抽象方法必须被实现； 如果一个子类没有实现父类中的抽象方法，则子类也变成了一个抽象类；虚方法： 虚函数的存在是为了多态。 Java 中没有虚函数的概念。它的普通函数就相当于 c++的虚函数，动态绑定是 java 的默认行为。如果 java 中不希望某个函数具有虚函数特性，可以加上 final 关键字变为非虚函数。Java 接口： 是一系列方法的声明。 1 只有声明没有实现； 2 在不同的类中有不同的方法实现；共同点 1、接口和抽象类都不能被实例化，他们都位于继承树的顶端，用于被其他类实现和继承。 2、接口和抽象类都可以包含抽象方法，实现接口或继承抽象类的普通子类都必须实现这些方法。不同点 1、接口里只能包含抽象方法和默认方法，不能为普通方法提供方法实现；抽象类则完全可以包含普通方法。 2、接口里不能定义静态方法，抽象类里可以定义静态方法。 3、接口里只能定义静态常量，不能定义普通成员变量；抽象类里则既可以定义普通成员变量，也可以定义静态常量。 4、接口里不包含构造器，抽象类里可以包含构造器，抽象类里的构造器并不是用于创建对象，而是让其子类调用这些构造器来完成属于抽象类的初始化操作。 5、接口里不能包含初始化块，但抽象类则完全可以包含初始化块。 6、一个类最多只能有一个直接父类，包括抽象类；但一个类可以直接实现多个接口，通过实现多个接口可以弥补 Java 单继承的不足。栈内存和堆内存，引用和值传递栈内存、堆内存在函数中定义的一些基本类型的变量和对象的引用变量都是在函数的栈内存中分配。当在一段代码块中定义一个变量时，java 就在栈中为这个变量分配内存空间，当超过变量的作用域后，java 会自动释放掉为该变量分配的内存空间，该内存空间可以立刻被另作他用。 堆内存用于存放由 new 创建的对象和数组。在堆中分配的内存，由 java 虚拟机自动垃圾回收器来管理。在数组和对象在没有引用变量指向它的时候，才变成垃圾，不能再被使用，但是仍然占着内存，在随后的一个不确定的时间被垃圾回收器释放掉。这个也是 java 比较占内存的主要原因。引用、值传递值传递：方法调用时，实际参数把它的值传递给对应的形式参数，方法执行中形式参数值的改变不影响实际参数的值。引用传递：也称为传地址。方法调用时，实际参数的引用(地址，而不是参数的值)被传递给方法中相对应的形式参数，在方法执行中，对形式参数的操作实际上就是对实际参数的操作，方法执行中形式参数值的改变将会影响实际参数的值。单例模式及好处构造函数私有化，用一个静态方法来获取对象实例。特点： 1）单例类只能有一个实例。 2）单例类必须自己创建自己的唯一实例。 3）单例类必须给所有其他对象提供这一实例。 主要优点： 1）提供了对唯一实例的受控访问。 2）由于在系统内存中只存在一个对象，因此可以节约系统资源，对于一些需要频繁创建和销毁的对象单例模式无疑可以提高系统的性能。 3）允许可变数目的实例。主要缺点： 1）由于单利模式中没有抽象层，因此单例类的扩展有很大的困难。 2）单例类的职责过重，在一定程度上违背了“单一职责原则”。 3）滥用单例将带来一些负面问题，如为了节省资源将数据库连接池对象设计为的单例类，可能会导致共享连接池对象的程序过多而出现连接池溢出；如果实例化的对象长时间不被利用，系统会认为是垃圾而被回收，这将导致对象状态的丢失。重载和重写重载：Overloading （1） Java 的方法重载，就是在类中可以创建多个方法，它们具有相同的名字，但具有不同的参数和不同的定义。调用方法时通过传递给它们的不同参数个数和参数类型来决定具体使用哪个方法, 这就是多态性。 （2） 重载的时候，方法名要一样，但是参数类型和个数不一样，返回值类型可以相同也可以不相同。无法以返回类型作为重载函数的区分标准。重写：Overriding 注意：当要重写父类方法时，要使用@Override 标签提醒编译器检查代码是否是重写，而不是重载了原来的方法。 （1） 父类与子类之间的多态性，对父类的函数进行重新定义。如果在子类中定义某方法与其父类有相同的名称和参数，我们说该方法被重写 (Overriding)。在 Java 中，子类可继承父类中的方法，而不需要重新编写相同的方法。但有时子类并不想原封不动地继承父类的方法，而是想作一定的修改，这就需要采用方法的重写。方法重写又称方法覆盖。 （2）若子类中的方法与父类中的某一方法具有相同的方法名、返回类型和参数表，则新方法将覆盖原有的方法。如需父类中原有的方法，可使用 super 关键字，该关键字引用了当前类的父类。 （3）子类函数的访问修饰权限不能少于父类的。子类、父类间的转换和构造顺序子类、父类间的转换： 子类能够自动转换成父类类型。 当创建子类对象的时候： ① 先调用了子类的构造函数 ② 调用了父类的构造函数 ③ 执行了父类的构造函数 ④ 执行了子类的构造函数 Final、finally、finalizefinal 用于声明属性，方法和类，分别表示属性不可变，方法不可覆盖，类不可继承。 finally 是异常处理语句结构的一部分，表示总是执行。 finalize 是 Object 类的一个方法，在垃圾收集器执行的时候会调用被回收对象的此方法，可以覆盖此方法提供垃圾收集时的其他资源回收，例如关闭文件等 Synchronized 和 volatile 的区别 volatile 只作用于在多个线程之间能够被共享的变量。如果一个字段被声明成 volatile，java 线程内存模型确保所有线程看到这个变量的值是一致的。Volatile 变量修饰符如果使用恰当的话，它比 synchronized 的使用和执行成本会更低，因为它不会引起线程上下文的切换和调度。 synchronized 获得并释放监视器——如果两个线程使用了同一个对象锁，监视器能强制保证代码块同时只被一个线程所执行——这是众所周知的事实。但是，synchronized 也同步内存：事实上，synchronized 在“ 主”内存区域同步整个线程的内存。 因此 volatile 只是在线程内存和“主”内存间同步某个变量的值，而 synchronized 通过锁定和解锁某个监视器同步所有变量的值。显然 synchronized 要比 volatile 消耗更多资源。1）volatile 本质是在告诉 jvm 当前变量在寄存器（工作内存）中的值是不确定的，需要从主存中读取，没有互斥锁；synchronized 则是锁定当前变量，只有当前线程可以访问该变量，其他线程被阻塞住。 2）volatile 仅能使用在变量级别；synchronized 则可以使用在变量、方法、和类级别的 3）volatile 只是在线程内存和“主”内存间同步某个变量的值，而 synchronized 通过锁定和解锁某个监视器同步所有变量的值；显然 synchronized 要比 volatile 消耗更多资源。 4）volatile 不会造成线程的阻塞；synchronized 可能会造成线程的阻塞。 5）volatile 标记的变量不会被编译器优化；synchronized 标记的变量可以被编译器优化 。集合 Collection：代表一组对象，每一个对象都是它的子元素。 Set：不包含重复元素的 Collection。 List：有顺序的 Collection，并且可以包含重复元素。 Map：可以把键（key）映射到值（value）的对象，键不能重复。集合类没有实现 Cloneable 和 Serializable 接口的原因 Collection 接口指定一组对象，对象即为它的元素。如何维护这些元素由 Collection 的具体实现决定。例如，一些如 List 的 Collection 实现允许重复的元素，而其它的如 Set 就不允许。很多 Collection 实现有一个公有的 clone 方法。然而，把它放到集合的所有实现中也是没有意义的。这是因为 Collection 是一个抽象表现。重要的是实现。 当与具体实现打交道的时候，克隆或序列化的语义和含义才发挥作用。所以，具体实现应该决定如何对它进行克隆或序列化，或它是否可以被克隆或序列化。 在所有的实现中授权克隆和序列化，最终导致更少的灵活性和更多的限制。特定的实现应该决定它是否可以被克隆和序列化。hashCode()和 equals()方法的重要性体现在什么地方？HashMap 使用 Key 对象的 hashCode()和 equals()方法去决定 key-value 对的索引。当我们试着从 HashMap 中获取值的时候，这些方法也会被用到。如果这些方法没有被正确地实现，在这种情况下，两个不同 Key 也许会产生相同的 hashCode()和 equals()输出，HashMap 将会认为它们是相同的，然后覆盖它们，而非把它们存储到不同的地方。同样的，所有不允许存储重复数据的集合类都使用 hashCode()和 equals()去查找重复，所以正确实现它们非常重要。 equals()和 hashCode()的实现应该遵循以下规则： （1）如果 o1.equals(o2)，那么 o1.hashCode() == o2.hashCode()总是为 true 的。 （2）如果 o1.hashCode() == o2.hashCode()，并不意味着 o1.equals(o2)会为 true。 Java 中的 HashMap 使用 hashCode()和 equals()方法来确定键值对的索引，当根据键获取值的时候也会用到这两个方法。如果没有正确的实现这两个方法，两个不同的键可能会有相同的 hash 值，因此，可能会被集合认为是相等的。而且，这两个方法也用来发现重复元素。所以这两个方法的实现对 HashMap 的精确性和正确性是至关重要的。HashMap 和 HashTabel 的区别 HashMap 和 Hashtable 都实现了 Map 接口，因此很多特性非常相似。但是，他们有以下不同点： 1）HashMap 允许键和值是 null，而 Hashtable 不允许键或者值是 null。 2）Hashtable 是同步的，而 HashMap 不是。因此，HashMap 更适合于单线程环境，而 Hashtable 适合于多线程环境。 3）HashMap 提供了可供应用迭代的键的集合，因此，HashMap 是快速失败的。另一方面，Hashtable 提供了对键的列举(Enumeration)。 一般认为 Hashtable 是一个遗留的类。Comparable 和 Comparator 接口 Comparable 和 Comparator 都是用来实现集合中的排序的，只是 Comparable 是在集合内部定义的方法实现的排序，Comparator 是在集合外部实现的排序，所以，如想实现排序，就需要在集合外定义 Comparator 接口的方法 compare()或在集合内实现 Comparable 接口的方法 compareTo()。 comparable 是支持自比较，而后者是支持外部比较； Comparable 是一个对象本身就已经支持自比较所需要实现的接口（如 String、Integer 自己就可以完成比较大小操作） 而 Comparator 是一个专用的比较器，当这个对象不支持自比较或者自比较函数不能满足你的要求时，你可以写一个比较器来完成两个对象之间大小的比较。 也就是说当你需要对一个自定义的类的一个数组或者集合进行比较的时候可以实现 Comparable 接口，当你需要对一个已有的类的数组或者集合进行比较的时候就一定要实现 Comparator 接口。另外，这两个接口是支持泛型的，所以我们应该在实现接口的同时定义比较类型。Java 中 HashMap 的工作原理是？Java 中的 HashMap 是以键值对(key-value)的形式存储元素的。HashMap 需要一个 hash 函数，它使用 hashCode()和 equals()方法来向集合/从集合添加和检索元素。当调用 put()方法的时候，HashMap 会计算 key 的 hash 值，然后把键值对存储在集合中合适的索引上。如果 key 已经存在了，value 会被更新成新值。HashMap 的一些重要的特性是它的容量(capacity)，负载因子(load factor)和扩容极限(threshold resizing)。 1)HashMap 有一个叫做 Entry 的内部类，它用来存储 key-value 对。 2)上面的 Entry 对象是存储在一个叫做 table 的 Entry 数组中。 3)table 的索引在逻辑上叫做“桶”(bucket)，它存储了链表的第一个元素。 4)key 的 hashcode()方法用来找到 Entry 对象所在的桶。 5)如果两个 key 有相同的 hash 值，他们会被放在 table 数组的同一个桶里面。 6)key 的 equals()方法用来确保 key 的唯一性。 7)value 对象的 equals()和 hashcode()方法根本一点用也没有。 重点内容 Put：根据 key 的 hashcode()方法计算出来的 hash 值来决定 key 在 Entry 数组的索引。 Get：通过 hashcode 找到数组中的某一个元素 EntryHashcode 的实现 hashCode 的常规协定是： 在 Java 应用程序执行期间，在同一对象上多次调用 hashCode 方法时，必须一致地返回相同的整数，前提是对象上 equals 比较中所用的信息没有被修改。从某一应用程序的一次执行到同一应用程序的另一次执行，该整数无需保持一致。 如果根据 equals(Object) 方法，两个对象是相等的，那么在两个对象中的每个对象上调用 hashCode 方法都必须生成相同的整数结果。 当 equals 方法被重写时，通常有必要重写 hashCode 方法，以维护 hashCode 方法的常规协定，该协定声明相等对象必须具有相等的哈希码。String、StringBffer、StringBuilder 的区别 1）可变与不可变 String 类中使用字符数组保存字符串，如下就是，因为有“final”修饰符，所以可以知道 string 对象是不可变的。 　　　　 private final char value[]; StringBuilder 与 StringBuffer 都继承自 AbstractStringBuilder 类，在 AbstractStringBuilder 中也是使用字符数组保存字符串，如下就是，可知这两种对象都是可变的。 　　　　 char[] value; 2）是否多线程安全 String 中的对象是不可变的，也就可以理解为常量，显然线程安全。 AbstractStringBuilder 是 StringBuilder 与 StringBuffer 的公共父类，定义了一些字符串的基本操作，如 expandCapacity、append、insert、indexOf 等公共方法。 　　 StringBuffer 对方法加了同步锁或者对调用的方法加了同步锁，所以是线程安全的 1、具有 1-5 工作经验的，面对目前流行的技术不知从何下手，需要突破技术瓶颈的可以加群。2、在公司待久了，过得很安逸，但跳槽时面试碰壁。需要在短时间内进修、跳槽拿高薪的可以加群。3、如果没有工作经验，但基础非常扎实，对 java 工作机制，常用设计思想，常用 java 开发框架掌握熟练的，可以加群。4、觉得自己很牛 B，一般需求都能搞定。但是所学的知识点没有系统化，很难在技术领域继续突破的可以加群。5. 群号：高级架构群 647631030 点击链接加入群【JAVA 高级开发】：申请加入 QQ 群 备注好信息！6.阿里 Java 高级大牛直播讲解知识点，分享知识，多年工作经验的梳理和总结，带着大家全面、科学地建立自己的技术体系和技术认知！HashMap、HashSet、HashTable 的区别 HashSet 和 HashMap 的区别 1)HashSet 是 set 的一个实现类,hashMap 是 Map 的一个实现类,同时 hashMap 是 hashTable 的替代品. 2)HashSet 以对象作为元素,而 HashMap 以(key-value)的一组对象作为元素,且 HashSet 拒绝接受重复的对象.HashMap 可以看作三个视图：key 的 Set，value 的 Collection，Entry 的 Set。HashSet 其实就是 HashMap 的一个视图。HashSet 内部就是使用 Hashmap 实现的，和 Hashmap 不同的是它不需要 Key 和 Value 两个值。 往 hashset 中插入对象其实只不过是内部做了 public boolean add(Object o) { return map.put(o, PRESENT)==null; }hastTable 和 hashMap 的区别: 1)Hashtable 是基于陈旧的 Dictionary 类的，HashMap 是 Java 1.2 引进的 Map 接口的一个实现。 2)这个不同即是最重要的一点:Hashtable 中的方法是同步的，而 HashMap 方法(在缺省情况下)是非同步的。即是说，在多线程应用程序中，不用专门的操作就安全地可以使用 Hashtable 了；而对于 HashMap，则需要额外的同步机制。 3)只有 HashMap 可以让你将空值作为一个表的条目的 key 或 value。HashMap 中只有一条记录可以是一个空的 key，但任意数量的条目可以是空的 value。这就是说，如果在表中没有发现搜索键，或者如果发现了搜索键，但它是一个空的值，那么 get()将返回 null。如果有必要，用 containKey()方法来区别这两种情况。线程安全的 HashMap —— java.util.concurrent.ConcurrentHashMap ConcurrentHashMap 增加了 Segment 层，每个 Segment 原理上等同于一个 Hashtable， ConcurrentHashMap 为 Segment 的数组。 向 ConcurrentHashMap 中插入数据或者读取数据，首先都要讲相应的 Key 映射到对应的 Segment，因此不用锁定整个类， 只要对单个的 Segment 操作进行上锁操作就可以了。理论上如果有 n 个 Segment，那么最多可以同时支持 n 个线程的并发访问，从而大大提高了并发访问的效率。另外 rehash() 操作也是对单个的 Segment 进行的，所以由 Map 中的数据量增加导致的 rehash 的成本也是比较低的。附一篇博客：线程安全的 HashMap 实现方法及原理 http://liqianglv2005.iteye.com/blog/2025016ArrayList和LingkedList的区别1）ArrayList：底层用数组实现的List 特点：查询效率高，增删效率低 轻量级 线程不安全 2）LinkedList：底层用双向循环链表 实现的 List 特点：查询效率低，增删效率高垃圾回收机制 Java 的垃圾回收机制是 Java 虚拟机提供的能力，用于在空闲时间以不定时的方式动态回收无任何引用的对象占据的内存空间。 需要注意的是：垃圾回收回收的是无任何引用的对象占据的内存空间而不是对象本身。 两种常用的方法是引用计数和对象引用遍历。 引用计数：在这种方法中，堆中每个对象（不是引用）都有一个引用计数。当一个对象被创建时，且将该对象分配给一个变量，该变量计数设置为 1。当任何其它变量被赋值为这个对象的引用时，计数加 1（a = b,则 b 引用的对象+1），但当一个对象的某个引用超过了生命周期或者被设置为一个新值时，对象的引用计数减 1。任何引用计数为 0 的对象可以被当作垃圾收集。当一个对象被垃圾收集时，它引用的任何对象计数减 1。 对象引用遍历：从一组对象开始，沿着整个对象图上的每条链接，递归确定可到达（reachable）的对象。如果某对象不能从这些根对象的一个（至少一个）到达，则将它作为垃圾收集。序列化和反序列化序列化是将对象状态转换为可保持或传输的格式的过程。与序列化相对的是反序列化，它将流转换为对象。这两个过程结合起来，可以轻松地存储和传输数据。 序列化的目的　　 1、以某种存储形式使自定义对象持久化；　　 2、将对象从一个地方传递到另一个地方。　　 3、使程序更具维护性 当两个进程在进行远程通信时，彼此可以发送各种类型的数据。无论是何种类型的数据，都会以二进制序列的形式在网络上传送。发送方需要把这个对象转换为字节序列，才能在网络上传送；接收方则需要把字节序列再恢复为对象。 把对象转换为字节序列的过程称为对象的序列化。 把字节序列恢复为对象的过程称为对象的反序列化。 说的再直接点，序列化的目的就是为了跨进程传递格式化数据 Java 的灵活性体现在什么机制上？反射机制 Sleep 和 wait 的区别 1、sleep()方法，是属于 Thread 类中的。而 wait()方法，则是属于 Object 类中的。 2、在调用 sleep()方法的过程中，线程不会释放对象锁。而当调用 wait()方法的时候，线程会放弃对象锁。 sleep()方法导致了程序暂停执行指定的时间，让出 cpu 给其他线程，但是他的监控状态依然保持着，当指定的时间到了又会自动恢复运行状态。而当调用 wait()方法的时候，线程会放弃对象锁，进入等待此对象的等待锁定池，只有针对此对象调用 notify()方法后本线程才进入对象锁定池准备。IO 和 NIO1、IO 是面向流的，NIO 是面向缓冲区的。 Java IO 面向流意味着每次从流中读一个或多个字节，直至读取所有字节，它们没有被缓存在任何地方。此外，它不能前后移动流中的数据。如果需要前后移动从流中读取的数据，需要先将它缓存到一个缓冲区。 Java NIO 的缓冲导向方法略有不同。数据读取到一个它稍后处理的缓冲区，需要时可在缓冲区中前后移动。这就增加了处理过程中的灵活性。但是，还需要检查是否该缓冲区中包含所有您需要处理的数据。而且，需确保当更多的数据读入缓冲区时，不要覆盖缓冲区里尚未处理的数据。 2、Java IO 的各种流是阻塞的，Java NIO 的非阻塞模式。 Java IO 的各种流是阻塞的。这意味着，当一个线程调用 read() 或 write()时，该线程被阻塞，直到有一些数据被读取，或数据完全写入。该线程在此期间不能再干任何事情了。 Java NIO 的非阻塞模式，使一个线程从某通道发送请求读取数据，但是它仅能得到目前可用的数据，如果目前没有数据可用时，就什么都不会获取。而不是保持线程阻塞，所以直至数据变的可以读取之前，该线程可以继续做其他的事情。 非阻塞写也是如此。一个线程请求写入一些数据到某通道，但不需要等待它完全写入，这个线程同时可以去做别的事情。 线程通常将非阻塞 IO 的空闲时间用于在其它通道上执行 IO 操作，所以一个单独的线程现在可以管理多个输入和输出通道（channel）。 3、Java NIO 的选择器允许一个单独的线程来监视多个输入通道，你可以注册多个通道使用一个选择器，然后使用一个单独的线程来“选择”通道：这些通道里已经有可以处理的输入，或者选择已准备写入的通道。这种选择机制，使得一个单独的线程很容易来管理多个通道。而 Java IO 无选择器。Scoket 对于一个功能齐全的 Socket，都要包含以下基本结构，其工作过程包含以下四个基本的步骤： 　　（1） 创建 Socket； 　　（2） 打开连接到 Socket 的输入/出流； 　　（3） 按照一定的协议对 Socket 进行读/写操作； 　　（4） 关闭 Socket. 　　可参考博客： http://www.cnblogs.com/linzheng/archive/2011/01/23/1942328.html深克隆、浅克隆浅复制仅仅复制所考虑的对象，而不复制它所引用的对象。 深复制把要复制的对象所引用的对象都复制了一遍。在 java 中只有单继承，如果要让一个类赋予新的特性，通常是使用接口来实现。 在 c++中支持多继承，允许一个子类同时具有多个父类的接口和功能。UDP 和 TCPUDP 和 TCP 都属于传输层协议。 TCP 协议：面向连接的、可靠的、基于字节流 UDP 协议：无连接、不可靠、基于报文 1、TCP 协议中包含了专门的传递保证机制，当数据接收方收到发送方传来的信息时，会自动向发送方发出确认消息；发送方只有在接收到该确认消息之后才继续传送其它信息，否则将一直等待直到收到确认信息为止。 与 TCP 不同，UDP 协议并不提供数据传送的保证机制。如果在从发送方到接收方的传递过程中出现数据报的丢失，协议本身并不能做出任何检测或提示。因此，通常人们把 UDP 协议称为不可靠的传输协议。 2、相对于 TCP 协议，UDP 协议的另外一个不同之处在于如何接收突发性的多个数据报。不同于 TCP，UDP 并不能确保数据的发送和接收顺序。红黑树是一种自平衡二叉查找树，红黑树是一种很有意思的平衡检索树；每次插入的时候都要进行计算，保证二叉树的平衡；如果有 2 的 N 次方数据量级，查询的时候只需要查询 N 次即可。 我们对任何有效的红黑树加以如下增补要求: 1.节点是红色或黑色。 2.根是黑色。 3.所有叶子（外部节点）都是黑色。 4.每个红色节点的两个子节点都是黑色。(从每个叶子到根的所有路径上不能有两个连续的红色节点) 5.从每个叶子到根的所有路径都包含相同数目的黑色节点。 这些约束强制了红黑树的关键属性: 从根到叶子的最长的可能路径不多于最短的可能路径的两倍长。结果是这个树大致上是平衡的。反射反射机制指的是程序在运行时能够获取自身的信息。 用反射机制实现对数据库数据的增、查例子 。 基本原理：保存数据时，把需要保存的对象的属性值全部取出来再拼凑 sql 语句；查询时，将查询到的数据全部包装成一个 java 对象。 1）数据库的每一个表对应一个 pojo 类，表中的每一个字段对应 pojo 类的中的一个属性。 并且 pojo 类的名字和表的名字相同，属性名和字段名相同，大小写没有关系，因为数据库一般不区分大小写 2）为 pojo 类中的每一个属性添加标准的 set 和 get 方法。三次握手和四次挥手三次握手：首先 Client 端发送连接请求报文，Server 段接受连接后回复 ACK 报文，并为这次连接分配资源。Client 端接收到 ACK 报文后也向 Server 段发送 ACK 报文，并分配资源，这样 TCP 连接就建立了。四次握手： 由于 TCP 连接是全双工的，因此每个方向都必须单独进行关闭。这原则是当一方完成它的数据发送任务后就能发送一个 FIN 来终止这个方向的连接。收到一个 FIN 只意味着这一方向上没有数据流动，一个 TCP 连接在收到一个 FIN 后仍能发送数据。首先进行关闭的一方将执行主动关闭，而另一方执行被动关闭。 （1） TCP 客户端发送一个 FIN，用来关闭客户到服务器的数据传送。 （2） 服务器收到这个 FIN，它发回一个 ACK，确认序号为收到的序号加 1。和 SYN 一样，一个 FIN 将占用一个序号。 （3） 服务器关闭客户端的连接，发送一个 FIN 给客户端。 （4） 客户端发回 ACK 报文确认，并将确认序号设置为收到序号加 1。Equals()和==　　 1、java 中 equals 和==的区别 值类型是存储在内存中的堆栈（简称栈），而引用类型的变量在栈中仅仅是存储引用类型变量的地址，而其本身则存储在堆中。 　　 2、==操作比较的是两个变量的值是否相等，对于引用型变量表示的是两个变量在堆中存储的地址是否相同，即栈中的内容是否相同。 　　 3、equals 操作表示的两个变量是否是对同一个对象的引用，即堆中的内容是否相同。 　　 4、==比较的是 2 个对象的地址，而 equals 比较的是 2 个对象的内容，显然，当 equals 为 true 时，==不一定为 true。\n","source":"_drafts/javamianshi.md","raw":"作者：周立\n链接：https://zhuanlan.zhihu.com/p/28515841\n来源：知乎\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n\nJava 的三大特性封装、继承、多态抽象类和接口的区别 Java 抽象类： 使用关键字 abstract 修饰的类叫做抽象类。 用 abstract 来修饰的方法叫做抽象方法。 特点： 1 含有抽象方法的类必须被声明为抽象类（不管是否还包含其他一般方法）（否则编译通不过）； 2 抽象类可以没有抽象方法，可以有普通方法。 3 抽象类必须被继承，抽象方法必须被重写： 若子类还是一个抽象类，不需要重写；否则必须要重写（override）。 抽象类不能被实例化（不能直接构造一个该类的对象）；抽象方法： 在类中没有方法体（抽象方法只需声明，而不需实现某些功能）； 抽象类中的抽象方法必须被实现； 如果一个子类没有实现父类中的抽象方法，则子类也变成了一个抽象类；虚方法： 虚函数的存在是为了多态。 Java 中没有虚函数的概念。它的普通函数就相当于 c++的虚函数，动态绑定是 java 的默认行为。如果 java 中不希望某个函数具有虚函数特性，可以加上 final 关键字变为非虚函数。Java 接口： 是一系列方法的声明。 1 只有声明没有实现； 2 在不同的类中有不同的方法实现；共同点 1、接口和抽象类都不能被实例化，他们都位于继承树的顶端，用于被其他类实现和继承。 2、接口和抽象类都可以包含抽象方法，实现接口或继承抽象类的普通子类都必须实现这些方法。不同点 1、接口里只能包含抽象方法和默认方法，不能为普通方法提供方法实现；抽象类则完全可以包含普通方法。 2、接口里不能定义静态方法，抽象类里可以定义静态方法。 3、接口里只能定义静态常量，不能定义普通成员变量；抽象类里则既可以定义普通成员变量，也可以定义静态常量。 4、接口里不包含构造器，抽象类里可以包含构造器，抽象类里的构造器并不是用于创建对象，而是让其子类调用这些构造器来完成属于抽象类的初始化操作。 5、接口里不能包含初始化块，但抽象类则完全可以包含初始化块。 6、一个类最多只能有一个直接父类，包括抽象类；但一个类可以直接实现多个接口，通过实现多个接口可以弥补 Java 单继承的不足。栈内存和堆内存，引用和值传递栈内存、堆内存在函数中定义的一些基本类型的变量和对象的引用变量都是在函数的栈内存中分配。当在一段代码块中定义一个变量时，java 就在栈中为这个变量分配内存空间，当超过变量的作用域后，java 会自动释放掉为该变量分配的内存空间，该内存空间可以立刻被另作他用。 堆内存用于存放由 new 创建的对象和数组。在堆中分配的内存，由 java 虚拟机自动垃圾回收器来管理。在数组和对象在没有引用变量指向它的时候，才变成垃圾，不能再被使用，但是仍然占着内存，在随后的一个不确定的时间被垃圾回收器释放掉。这个也是 java 比较占内存的主要原因。引用、值传递值传递：方法调用时，实际参数把它的值传递给对应的形式参数，方法执行中形式参数值的改变不影响实际参数的值。引用传递：也称为传地址。方法调用时，实际参数的引用(地址，而不是参数的值)被传递给方法中相对应的形式参数，在方法执行中，对形式参数的操作实际上就是对实际参数的操作，方法执行中形式参数值的改变将会影响实际参数的值。单例模式及好处构造函数私有化，用一个静态方法来获取对象实例。特点： 1）单例类只能有一个实例。 2）单例类必须自己创建自己的唯一实例。 3）单例类必须给所有其他对象提供这一实例。 主要优点： 1）提供了对唯一实例的受控访问。 2）由于在系统内存中只存在一个对象，因此可以节约系统资源，对于一些需要频繁创建和销毁的对象单例模式无疑可以提高系统的性能。 3）允许可变数目的实例。主要缺点： 1）由于单利模式中没有抽象层，因此单例类的扩展有很大的困难。 2）单例类的职责过重，在一定程度上违背了“单一职责原则”。 3）滥用单例将带来一些负面问题，如为了节省资源将数据库连接池对象设计为的单例类，可能会导致共享连接池对象的程序过多而出现连接池溢出；如果实例化的对象长时间不被利用，系统会认为是垃圾而被回收，这将导致对象状态的丢失。重载和重写重载：Overloading （1） Java 的方法重载，就是在类中可以创建多个方法，它们具有相同的名字，但具有不同的参数和不同的定义。调用方法时通过传递给它们的不同参数个数和参数类型来决定具体使用哪个方法, 这就是多态性。 （2） 重载的时候，方法名要一样，但是参数类型和个数不一样，返回值类型可以相同也可以不相同。无法以返回类型作为重载函数的区分标准。重写：Overriding 注意：当要重写父类方法时，要使用@Override 标签提醒编译器检查代码是否是重写，而不是重载了原来的方法。 （1） 父类与子类之间的多态性，对父类的函数进行重新定义。如果在子类中定义某方法与其父类有相同的名称和参数，我们说该方法被重写 (Overriding)。在 Java 中，子类可继承父类中的方法，而不需要重新编写相同的方法。但有时子类并不想原封不动地继承父类的方法，而是想作一定的修改，这就需要采用方法的重写。方法重写又称方法覆盖。 （2）若子类中的方法与父类中的某一方法具有相同的方法名、返回类型和参数表，则新方法将覆盖原有的方法。如需父类中原有的方法，可使用 super 关键字，该关键字引用了当前类的父类。 （3）子类函数的访问修饰权限不能少于父类的。子类、父类间的转换和构造顺序子类、父类间的转换： 子类能够自动转换成父类类型。 当创建子类对象的时候： ① 先调用了子类的构造函数 ② 调用了父类的构造函数 ③ 执行了父类的构造函数 ④ 执行了子类的构造函数 Final、finally、finalizefinal 用于声明属性，方法和类，分别表示属性不可变，方法不可覆盖，类不可继承。 finally 是异常处理语句结构的一部分，表示总是执行。 finalize 是 Object 类的一个方法，在垃圾收集器执行的时候会调用被回收对象的此方法，可以覆盖此方法提供垃圾收集时的其他资源回收，例如关闭文件等 Synchronized 和 volatile 的区别 volatile 只作用于在多个线程之间能够被共享的变量。如果一个字段被声明成 volatile，java 线程内存模型确保所有线程看到这个变量的值是一致的。Volatile 变量修饰符如果使用恰当的话，它比 synchronized 的使用和执行成本会更低，因为它不会引起线程上下文的切换和调度。 synchronized 获得并释放监视器——如果两个线程使用了同一个对象锁，监视器能强制保证代码块同时只被一个线程所执行——这是众所周知的事实。但是，synchronized 也同步内存：事实上，synchronized 在“ 主”内存区域同步整个线程的内存。 因此 volatile 只是在线程内存和“主”内存间同步某个变量的值，而 synchronized 通过锁定和解锁某个监视器同步所有变量的值。显然 synchronized 要比 volatile 消耗更多资源。1）volatile 本质是在告诉 jvm 当前变量在寄存器（工作内存）中的值是不确定的，需要从主存中读取，没有互斥锁；synchronized 则是锁定当前变量，只有当前线程可以访问该变量，其他线程被阻塞住。 2）volatile 仅能使用在变量级别；synchronized 则可以使用在变量、方法、和类级别的 3）volatile 只是在线程内存和“主”内存间同步某个变量的值，而 synchronized 通过锁定和解锁某个监视器同步所有变量的值；显然 synchronized 要比 volatile 消耗更多资源。 4）volatile 不会造成线程的阻塞；synchronized 可能会造成线程的阻塞。 5）volatile 标记的变量不会被编译器优化；synchronized 标记的变量可以被编译器优化 。集合 Collection：代表一组对象，每一个对象都是它的子元素。 Set：不包含重复元素的 Collection。 List：有顺序的 Collection，并且可以包含重复元素。 Map：可以把键（key）映射到值（value）的对象，键不能重复。集合类没有实现 Cloneable 和 Serializable 接口的原因 Collection 接口指定一组对象，对象即为它的元素。如何维护这些元素由 Collection 的具体实现决定。例如，一些如 List 的 Collection 实现允许重复的元素，而其它的如 Set 就不允许。很多 Collection 实现有一个公有的 clone 方法。然而，把它放到集合的所有实现中也是没有意义的。这是因为 Collection 是一个抽象表现。重要的是实现。 当与具体实现打交道的时候，克隆或序列化的语义和含义才发挥作用。所以，具体实现应该决定如何对它进行克隆或序列化，或它是否可以被克隆或序列化。 在所有的实现中授权克隆和序列化，最终导致更少的灵活性和更多的限制。特定的实现应该决定它是否可以被克隆和序列化。hashCode()和 equals()方法的重要性体现在什么地方？HashMap 使用 Key 对象的 hashCode()和 equals()方法去决定 key-value 对的索引。当我们试着从 HashMap 中获取值的时候，这些方法也会被用到。如果这些方法没有被正确地实现，在这种情况下，两个不同 Key 也许会产生相同的 hashCode()和 equals()输出，HashMap 将会认为它们是相同的，然后覆盖它们，而非把它们存储到不同的地方。同样的，所有不允许存储重复数据的集合类都使用 hashCode()和 equals()去查找重复，所以正确实现它们非常重要。 equals()和 hashCode()的实现应该遵循以下规则： （1）如果 o1.equals(o2)，那么 o1.hashCode() == o2.hashCode()总是为 true 的。 （2）如果 o1.hashCode() == o2.hashCode()，并不意味着 o1.equals(o2)会为 true。 Java 中的 HashMap 使用 hashCode()和 equals()方法来确定键值对的索引，当根据键获取值的时候也会用到这两个方法。如果没有正确的实现这两个方法，两个不同的键可能会有相同的 hash 值，因此，可能会被集合认为是相等的。而且，这两个方法也用来发现重复元素。所以这两个方法的实现对 HashMap 的精确性和正确性是至关重要的。HashMap 和 HashTabel 的区别 HashMap 和 Hashtable 都实现了 Map 接口，因此很多特性非常相似。但是，他们有以下不同点： 1）HashMap 允许键和值是 null，而 Hashtable 不允许键或者值是 null。 2）Hashtable 是同步的，而 HashMap 不是。因此，HashMap 更适合于单线程环境，而 Hashtable 适合于多线程环境。 3）HashMap 提供了可供应用迭代的键的集合，因此，HashMap 是快速失败的。另一方面，Hashtable 提供了对键的列举(Enumeration)。 一般认为 Hashtable 是一个遗留的类。Comparable 和 Comparator 接口 Comparable 和 Comparator 都是用来实现集合中的排序的，只是 Comparable 是在集合内部定义的方法实现的排序，Comparator 是在集合外部实现的排序，所以，如想实现排序，就需要在集合外定义 Comparator 接口的方法 compare()或在集合内实现 Comparable 接口的方法 compareTo()。 comparable 是支持自比较，而后者是支持外部比较； Comparable 是一个对象本身就已经支持自比较所需要实现的接口（如 String、Integer 自己就可以完成比较大小操作） 而 Comparator 是一个专用的比较器，当这个对象不支持自比较或者自比较函数不能满足你的要求时，你可以写一个比较器来完成两个对象之间大小的比较。 也就是说当你需要对一个自定义的类的一个数组或者集合进行比较的时候可以实现 Comparable 接口，当你需要对一个已有的类的数组或者集合进行比较的时候就一定要实现 Comparator 接口。另外，这两个接口是支持泛型的，所以我们应该在实现接口的同时定义比较类型。Java 中 HashMap 的工作原理是？Java 中的 HashMap 是以键值对(key-value)的形式存储元素的。HashMap 需要一个 hash 函数，它使用 hashCode()和 equals()方法来向集合/从集合添加和检索元素。当调用 put()方法的时候，HashMap 会计算 key 的 hash 值，然后把键值对存储在集合中合适的索引上。如果 key 已经存在了，value 会被更新成新值。HashMap 的一些重要的特性是它的容量(capacity)，负载因子(load factor)和扩容极限(threshold resizing)。 1)HashMap 有一个叫做 Entry 的内部类，它用来存储 key-value 对。 2)上面的 Entry 对象是存储在一个叫做 table 的 Entry 数组中。 3)table 的索引在逻辑上叫做“桶”(bucket)，它存储了链表的第一个元素。 4)key 的 hashcode()方法用来找到 Entry 对象所在的桶。 5)如果两个 key 有相同的 hash 值，他们会被放在 table 数组的同一个桶里面。 6)key 的 equals()方法用来确保 key 的唯一性。 7)value 对象的 equals()和 hashcode()方法根本一点用也没有。 重点内容 Put：根据 key 的 hashcode()方法计算出来的 hash 值来决定 key 在 Entry 数组的索引。 Get：通过 hashcode 找到数组中的某一个元素 EntryHashcode 的实现 hashCode 的常规协定是： 在 Java 应用程序执行期间，在同一对象上多次调用 hashCode 方法时，必须一致地返回相同的整数，前提是对象上 equals 比较中所用的信息没有被修改。从某一应用程序的一次执行到同一应用程序的另一次执行，该整数无需保持一致。 如果根据 equals(Object) 方法，两个对象是相等的，那么在两个对象中的每个对象上调用 hashCode 方法都必须生成相同的整数结果。 当 equals 方法被重写时，通常有必要重写 hashCode 方法，以维护 hashCode 方法的常规协定，该协定声明相等对象必须具有相等的哈希码。String、StringBffer、StringBuilder 的区别 1）可变与不可变 String 类中使用字符数组保存字符串，如下就是，因为有“final”修饰符，所以可以知道 string 对象是不可变的。 　　　　 private final char value[]; StringBuilder 与 StringBuffer 都继承自 AbstractStringBuilder 类，在 AbstractStringBuilder 中也是使用字符数组保存字符串，如下就是，可知这两种对象都是可变的。 　　　　 char[] value; 2）是否多线程安全 String 中的对象是不可变的，也就可以理解为常量，显然线程安全。 AbstractStringBuilder 是 StringBuilder 与 StringBuffer 的公共父类，定义了一些字符串的基本操作，如 expandCapacity、append、insert、indexOf 等公共方法。 　　 StringBuffer 对方法加了同步锁或者对调用的方法加了同步锁，所以是线程安全的 1、具有 1-5 工作经验的，面对目前流行的技术不知从何下手，需要突破技术瓶颈的可以加群。2、在公司待久了，过得很安逸，但跳槽时面试碰壁。需要在短时间内进修、跳槽拿高薪的可以加群。3、如果没有工作经验，但基础非常扎实，对 java 工作机制，常用设计思想，常用 java 开发框架掌握熟练的，可以加群。4、觉得自己很牛 B，一般需求都能搞定。但是所学的知识点没有系统化，很难在技术领域继续突破的可以加群。5. 群号：高级架构群 647631030 点击链接加入群【JAVA 高级开发】：申请加入 QQ 群 备注好信息！6.阿里 Java 高级大牛直播讲解知识点，分享知识，多年工作经验的梳理和总结，带着大家全面、科学地建立自己的技术体系和技术认知！HashMap、HashSet、HashTable 的区别 HashSet 和 HashMap 的区别 1)HashSet 是 set 的一个实现类,hashMap 是 Map 的一个实现类,同时 hashMap 是 hashTable 的替代品. 2)HashSet 以对象作为元素,而 HashMap 以(key-value)的一组对象作为元素,且 HashSet 拒绝接受重复的对象.HashMap 可以看作三个视图：key 的 Set，value 的 Collection，Entry 的 Set。HashSet 其实就是 HashMap 的一个视图。HashSet 内部就是使用 Hashmap 实现的，和 Hashmap 不同的是它不需要 Key 和 Value 两个值。 往 hashset 中插入对象其实只不过是内部做了 public boolean add(Object o) { return map.put(o, PRESENT)==null; }hastTable 和 hashMap 的区别: 1)Hashtable 是基于陈旧的 Dictionary 类的，HashMap 是 Java 1.2 引进的 Map 接口的一个实现。 2)这个不同即是最重要的一点:Hashtable 中的方法是同步的，而 HashMap 方法(在缺省情况下)是非同步的。即是说，在多线程应用程序中，不用专门的操作就安全地可以使用 Hashtable 了；而对于 HashMap，则需要额外的同步机制。 3)只有 HashMap 可以让你将空值作为一个表的条目的 key 或 value。HashMap 中只有一条记录可以是一个空的 key，但任意数量的条目可以是空的 value。这就是说，如果在表中没有发现搜索键，或者如果发现了搜索键，但它是一个空的值，那么 get()将返回 null。如果有必要，用 containKey()方法来区别这两种情况。线程安全的 HashMap —— java.util.concurrent.ConcurrentHashMap ConcurrentHashMap 增加了 Segment 层，每个 Segment 原理上等同于一个 Hashtable， ConcurrentHashMap 为 Segment 的数组。 向 ConcurrentHashMap 中插入数据或者读取数据，首先都要讲相应的 Key 映射到对应的 Segment，因此不用锁定整个类， 只要对单个的 Segment 操作进行上锁操作就可以了。理论上如果有 n 个 Segment，那么最多可以同时支持 n 个线程的并发访问，从而大大提高了并发访问的效率。另外 rehash() 操作也是对单个的 Segment 进行的，所以由 Map 中的数据量增加导致的 rehash 的成本也是比较低的。附一篇博客：线程安全的 HashMap 实现方法及原理 http://liqianglv2005.iteye.com/blog/2025016ArrayList和LingkedList的区别1）ArrayList：底层用数组实现的List 特点：查询效率高，增删效率低 轻量级 线程不安全 2）LinkedList：底层用双向循环链表 实现的 List 特点：查询效率低，增删效率高垃圾回收机制 Java 的垃圾回收机制是 Java 虚拟机提供的能力，用于在空闲时间以不定时的方式动态回收无任何引用的对象占据的内存空间。 需要注意的是：垃圾回收回收的是无任何引用的对象占据的内存空间而不是对象本身。 两种常用的方法是引用计数和对象引用遍历。 引用计数：在这种方法中，堆中每个对象（不是引用）都有一个引用计数。当一个对象被创建时，且将该对象分配给一个变量，该变量计数设置为 1。当任何其它变量被赋值为这个对象的引用时，计数加 1（a = b,则 b 引用的对象+1），但当一个对象的某个引用超过了生命周期或者被设置为一个新值时，对象的引用计数减 1。任何引用计数为 0 的对象可以被当作垃圾收集。当一个对象被垃圾收集时，它引用的任何对象计数减 1。 对象引用遍历：从一组对象开始，沿着整个对象图上的每条链接，递归确定可到达（reachable）的对象。如果某对象不能从这些根对象的一个（至少一个）到达，则将它作为垃圾收集。序列化和反序列化序列化是将对象状态转换为可保持或传输的格式的过程。与序列化相对的是反序列化，它将流转换为对象。这两个过程结合起来，可以轻松地存储和传输数据。 序列化的目的　　 1、以某种存储形式使自定义对象持久化；　　 2、将对象从一个地方传递到另一个地方。　　 3、使程序更具维护性 当两个进程在进行远程通信时，彼此可以发送各种类型的数据。无论是何种类型的数据，都会以二进制序列的形式在网络上传送。发送方需要把这个对象转换为字节序列，才能在网络上传送；接收方则需要把字节序列再恢复为对象。 把对象转换为字节序列的过程称为对象的序列化。 把字节序列恢复为对象的过程称为对象的反序列化。 说的再直接点，序列化的目的就是为了跨进程传递格式化数据 Java 的灵活性体现在什么机制上？反射机制 Sleep 和 wait 的区别 1、sleep()方法，是属于 Thread 类中的。而 wait()方法，则是属于 Object 类中的。 2、在调用 sleep()方法的过程中，线程不会释放对象锁。而当调用 wait()方法的时候，线程会放弃对象锁。 sleep()方法导致了程序暂停执行指定的时间，让出 cpu 给其他线程，但是他的监控状态依然保持着，当指定的时间到了又会自动恢复运行状态。而当调用 wait()方法的时候，线程会放弃对象锁，进入等待此对象的等待锁定池，只有针对此对象调用 notify()方法后本线程才进入对象锁定池准备。IO 和 NIO1、IO 是面向流的，NIO 是面向缓冲区的。 Java IO 面向流意味着每次从流中读一个或多个字节，直至读取所有字节，它们没有被缓存在任何地方。此外，它不能前后移动流中的数据。如果需要前后移动从流中读取的数据，需要先将它缓存到一个缓冲区。 Java NIO 的缓冲导向方法略有不同。数据读取到一个它稍后处理的缓冲区，需要时可在缓冲区中前后移动。这就增加了处理过程中的灵活性。但是，还需要检查是否该缓冲区中包含所有您需要处理的数据。而且，需确保当更多的数据读入缓冲区时，不要覆盖缓冲区里尚未处理的数据。 2、Java IO 的各种流是阻塞的，Java NIO 的非阻塞模式。 Java IO 的各种流是阻塞的。这意味着，当一个线程调用 read() 或 write()时，该线程被阻塞，直到有一些数据被读取，或数据完全写入。该线程在此期间不能再干任何事情了。 Java NIO 的非阻塞模式，使一个线程从某通道发送请求读取数据，但是它仅能得到目前可用的数据，如果目前没有数据可用时，就什么都不会获取。而不是保持线程阻塞，所以直至数据变的可以读取之前，该线程可以继续做其他的事情。 非阻塞写也是如此。一个线程请求写入一些数据到某通道，但不需要等待它完全写入，这个线程同时可以去做别的事情。 线程通常将非阻塞 IO 的空闲时间用于在其它通道上执行 IO 操作，所以一个单独的线程现在可以管理多个输入和输出通道（channel）。 3、Java NIO 的选择器允许一个单独的线程来监视多个输入通道，你可以注册多个通道使用一个选择器，然后使用一个单独的线程来“选择”通道：这些通道里已经有可以处理的输入，或者选择已准备写入的通道。这种选择机制，使得一个单独的线程很容易来管理多个通道。而 Java IO 无选择器。Scoket 对于一个功能齐全的 Socket，都要包含以下基本结构，其工作过程包含以下四个基本的步骤： 　　（1） 创建 Socket； 　　（2） 打开连接到 Socket 的输入/出流； 　　（3） 按照一定的协议对 Socket 进行读/写操作； 　　（4） 关闭 Socket. 　　可参考博客： http://www.cnblogs.com/linzheng/archive/2011/01/23/1942328.html深克隆、浅克隆浅复制仅仅复制所考虑的对象，而不复制它所引用的对象。 深复制把要复制的对象所引用的对象都复制了一遍。在 java 中只有单继承，如果要让一个类赋予新的特性，通常是使用接口来实现。 在 c++中支持多继承，允许一个子类同时具有多个父类的接口和功能。UDP 和 TCPUDP 和 TCP 都属于传输层协议。 TCP 协议：面向连接的、可靠的、基于字节流 UDP 协议：无连接、不可靠、基于报文 1、TCP 协议中包含了专门的传递保证机制，当数据接收方收到发送方传来的信息时，会自动向发送方发出确认消息；发送方只有在接收到该确认消息之后才继续传送其它信息，否则将一直等待直到收到确认信息为止。 与 TCP 不同，UDP 协议并不提供数据传送的保证机制。如果在从发送方到接收方的传递过程中出现数据报的丢失，协议本身并不能做出任何检测或提示。因此，通常人们把 UDP 协议称为不可靠的传输协议。 2、相对于 TCP 协议，UDP 协议的另外一个不同之处在于如何接收突发性的多个数据报。不同于 TCP，UDP 并不能确保数据的发送和接收顺序。红黑树是一种自平衡二叉查找树，红黑树是一种很有意思的平衡检索树；每次插入的时候都要进行计算，保证二叉树的平衡；如果有 2 的 N 次方数据量级，查询的时候只需要查询 N 次即可。 我们对任何有效的红黑树加以如下增补要求: 1.节点是红色或黑色。 2.根是黑色。 3.所有叶子（外部节点）都是黑色。 4.每个红色节点的两个子节点都是黑色。(从每个叶子到根的所有路径上不能有两个连续的红色节点) 5.从每个叶子到根的所有路径都包含相同数目的黑色节点。 这些约束强制了红黑树的关键属性: 从根到叶子的最长的可能路径不多于最短的可能路径的两倍长。结果是这个树大致上是平衡的。反射反射机制指的是程序在运行时能够获取自身的信息。 用反射机制实现对数据库数据的增、查例子 。 基本原理：保存数据时，把需要保存的对象的属性值全部取出来再拼凑 sql 语句；查询时，将查询到的数据全部包装成一个 java 对象。 1）数据库的每一个表对应一个 pojo 类，表中的每一个字段对应 pojo 类的中的一个属性。 并且 pojo 类的名字和表的名字相同，属性名和字段名相同，大小写没有关系，因为数据库一般不区分大小写 2）为 pojo 类中的每一个属性添加标准的 set 和 get 方法。三次握手和四次挥手三次握手：首先 Client 端发送连接请求报文，Server 段接受连接后回复 ACK 报文，并为这次连接分配资源。Client 端接收到 ACK 报文后也向 Server 段发送 ACK 报文，并分配资源，这样 TCP 连接就建立了。四次握手： 由于 TCP 连接是全双工的，因此每个方向都必须单独进行关闭。这原则是当一方完成它的数据发送任务后就能发送一个 FIN 来终止这个方向的连接。收到一个 FIN 只意味着这一方向上没有数据流动，一个 TCP 连接在收到一个 FIN 后仍能发送数据。首先进行关闭的一方将执行主动关闭，而另一方执行被动关闭。 （1） TCP 客户端发送一个 FIN，用来关闭客户到服务器的数据传送。 （2） 服务器收到这个 FIN，它发回一个 ACK，确认序号为收到的序号加 1。和 SYN 一样，一个 FIN 将占用一个序号。 （3） 服务器关闭客户端的连接，发送一个 FIN 给客户端。 （4） 客户端发回 ACK 报文确认，并将确认序号设置为收到序号加 1。Equals()和==　　 1、java 中 equals 和==的区别 值类型是存储在内存中的堆栈（简称栈），而引用类型的变量在栈中仅仅是存储引用类型变量的地址，而其本身则存储在堆中。 　　 2、==操作比较的是两个变量的值是否相等，对于引用型变量表示的是两个变量在堆中存储的地址是否相同，即栈中的内容是否相同。 　　 3、equals 操作表示的两个变量是否是对同一个对象的引用，即堆中的内容是否相同。 　　 4、==比较的是 2 个对象的地址，而 equals 比较的是 2 个对象的内容，显然，当 equals 为 true 时，==不一定为 true。\n","slug":"javamianshi","published":0,"date":"2017-08-15T06:17:01.000Z","updated":"2018-06-22T09:42:34.007Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1ot0026cdon614s213o","content":"<p>作者：周立<br>链接：<a href=\"https://zhuanlan.zhihu.com/p/28515841\" target=\"_blank\" rel=\"external\">https://zhuanlan.zhihu.com/p/28515841</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>\n<p>Java 的三大特性封装、继承、多态抽象类和接口的区别 Java 抽象类： 使用关键字 abstract 修饰的类叫做抽象类。 用 abstract 来修饰的方法叫做抽象方法。 特点： 1 含有抽象方法的类必须被声明为抽象类（不管是否还包含其他一般方法）（否则编译通不过）； 2 抽象类可以没有抽象方法，可以有普通方法。 3 抽象类必须被继承，抽象方法必须被重写： 若子类还是一个抽象类，不需要重写；否则必须要重写（override）。 抽象类不能被实例化（不能直接构造一个该类的对象）；抽象方法： 在类中没有方法体（抽象方法只需声明，而不需实现某些功能）； 抽象类中的抽象方法必须被实现； 如果一个子类没有实现父类中的抽象方法，则子类也变成了一个抽象类；虚方法： 虚函数的存在是为了多态。 Java 中没有虚函数的概念。它的普通函数就相当于 c++的虚函数，动态绑定是 java 的默认行为。如果 java 中不希望某个函数具有虚函数特性，可以加上 final 关键字变为非虚函数。Java 接口： 是一系列方法的声明。 1 只有声明没有实现； 2 在不同的类中有不同的方法实现；共同点 1、接口和抽象类都不能被实例化，他们都位于继承树的顶端，用于被其他类实现和继承。 2、接口和抽象类都可以包含抽象方法，实现接口或继承抽象类的普通子类都必须实现这些方法。不同点 1、接口里只能包含抽象方法和默认方法，不能为普通方法提供方法实现；抽象类则完全可以包含普通方法。 2、接口里不能定义静态方法，抽象类里可以定义静态方法。 3、接口里只能定义静态常量，不能定义普通成员变量；抽象类里则既可以定义普通成员变量，也可以定义静态常量。 4、接口里不包含构造器，抽象类里可以包含构造器，抽象类里的构造器并不是用于创建对象，而是让其子类调用这些构造器来完成属于抽象类的初始化操作。 5、接口里不能包含初始化块，但抽象类则完全可以包含初始化块。 6、一个类最多只能有一个直接父类，包括抽象类；但一个类可以直接实现多个接口，通过实现多个接口可以弥补 Java 单继承的不足。栈内存和堆内存，引用和值传递栈内存、堆内存在函数中定义的一些基本类型的变量和对象的引用变量都是在函数的栈内存中分配。当在一段代码块中定义一个变量时，java 就在栈中为这个变量分配内存空间，当超过变量的作用域后，java 会自动释放掉为该变量分配的内存空间，该内存空间可以立刻被另作他用。 堆内存用于存放由 new 创建的对象和数组。在堆中分配的内存，由 java 虚拟机自动垃圾回收器来管理。在数组和对象在没有引用变量指向它的时候，才变成垃圾，不能再被使用，但是仍然占着内存，在随后的一个不确定的时间被垃圾回收器释放掉。这个也是 java 比较占内存的主要原因。引用、值传递值传递：方法调用时，实际参数把它的值传递给对应的形式参数，方法执行中形式参数值的改变不影响实际参数的值。引用传递：也称为传地址。方法调用时，实际参数的引用(地址，而不是参数的值)被传递给方法中相对应的形式参数，在方法执行中，对形式参数的操作实际上就是对实际参数的操作，方法执行中形式参数值的改变将会影响实际参数的值。单例模式及好处构造函数私有化，用一个静态方法来获取对象实例。特点： 1）单例类只能有一个实例。 2）单例类必须自己创建自己的唯一实例。 3）单例类必须给所有其他对象提供这一实例。 主要优点： 1）提供了对唯一实例的受控访问。 2）由于在系统内存中只存在一个对象，因此可以节约系统资源，对于一些需要频繁创建和销毁的对象单例模式无疑可以提高系统的性能。 3）允许可变数目的实例。主要缺点： 1）由于单利模式中没有抽象层，因此单例类的扩展有很大的困难。 2）单例类的职责过重，在一定程度上违背了“单一职责原则”。 3）滥用单例将带来一些负面问题，如为了节省资源将数据库连接池对象设计为的单例类，可能会导致共享连接池对象的程序过多而出现连接池溢出；如果实例化的对象长时间不被利用，系统会认为是垃圾而被回收，这将导致对象状态的丢失。重载和重写重载：Overloading （1） Java 的方法重载，就是在类中可以创建多个方法，它们具有相同的名字，但具有不同的参数和不同的定义。调用方法时通过传递给它们的不同参数个数和参数类型来决定具体使用哪个方法, 这就是多态性。 （2） 重载的时候，方法名要一样，但是参数类型和个数不一样，返回值类型可以相同也可以不相同。无法以返回类型作为重载函数的区分标准。重写：Overriding 注意：当要重写父类方法时，要使用@Override 标签提醒编译器检查代码是否是重写，而不是重载了原来的方法。 （1） 父类与子类之间的多态性，对父类的函数进行重新定义。如果在子类中定义某方法与其父类有相同的名称和参数，我们说该方法被重写 (Overriding)。在 Java 中，子类可继承父类中的方法，而不需要重新编写相同的方法。但有时子类并不想原封不动地继承父类的方法，而是想作一定的修改，这就需要采用方法的重写。方法重写又称方法覆盖。 （2）若子类中的方法与父类中的某一方法具有相同的方法名、返回类型和参数表，则新方法将覆盖原有的方法。如需父类中原有的方法，可使用 super 关键字，该关键字引用了当前类的父类。 （3）子类函数的访问修饰权限不能少于父类的。子类、父类间的转换和构造顺序子类、父类间的转换： 子类能够自动转换成父类类型。 当创建子类对象的时候： ① 先调用了子类的构造函数 ② 调用了父类的构造函数 ③ 执行了父类的构造函数 ④ 执行了子类的构造函数 Final、finally、finalizefinal 用于声明属性，方法和类，分别表示属性不可变，方法不可覆盖，类不可继承。 finally 是异常处理语句结构的一部分，表示总是执行。 finalize 是 Object 类的一个方法，在垃圾收集器执行的时候会调用被回收对象的此方法，可以覆盖此方法提供垃圾收集时的其他资源回收，例如关闭文件等 Synchronized 和 volatile 的区别 volatile 只作用于在多个线程之间能够被共享的变量。如果一个字段被声明成 volatile，java 线程内存模型确保所有线程看到这个变量的值是一致的。Volatile 变量修饰符如果使用恰当的话，它比 synchronized 的使用和执行成本会更低，因为它不会引起线程上下文的切换和调度。 synchronized 获得并释放监视器——如果两个线程使用了同一个对象锁，监视器能强制保证代码块同时只被一个线程所执行——这是众所周知的事实。但是，synchronized 也同步内存：事实上，synchronized 在“ 主”内存区域同步整个线程的内存。 因此 volatile 只是在线程内存和“主”内存间同步某个变量的值，而 synchronized 通过锁定和解锁某个监视器同步所有变量的值。显然 synchronized 要比 volatile 消耗更多资源。1）volatile 本质是在告诉 jvm 当前变量在寄存器（工作内存）中的值是不确定的，需要从主存中读取，没有互斥锁；synchronized 则是锁定当前变量，只有当前线程可以访问该变量，其他线程被阻塞住。 2）volatile 仅能使用在变量级别；synchronized 则可以使用在变量、方法、和类级别的 3）volatile 只是在线程内存和“主”内存间同步某个变量的值，而 synchronized 通过锁定和解锁某个监视器同步所有变量的值；显然 synchronized 要比 volatile 消耗更多资源。 4）volatile 不会造成线程的阻塞；synchronized 可能会造成线程的阻塞。 5）volatile 标记的变量不会被编译器优化；synchronized 标记的变量可以被编译器优化 。集合 Collection：代表一组对象，每一个对象都是它的子元素。 Set：不包含重复元素的 Collection。 List：有顺序的 Collection，并且可以包含重复元素。 Map：可以把键（key）映射到值（value）的对象，键不能重复。集合类没有实现 Cloneable 和 Serializable 接口的原因 Collection 接口指定一组对象，对象即为它的元素。如何维护这些元素由 Collection 的具体实现决定。例如，一些如 List 的 Collection 实现允许重复的元素，而其它的如 Set 就不允许。很多 Collection 实现有一个公有的 clone 方法。然而，把它放到集合的所有实现中也是没有意义的。这是因为 Collection 是一个抽象表现。重要的是实现。 当与具体实现打交道的时候，克隆或序列化的语义和含义才发挥作用。所以，具体实现应该决定如何对它进行克隆或序列化，或它是否可以被克隆或序列化。 在所有的实现中授权克隆和序列化，最终导致更少的灵活性和更多的限制。特定的实现应该决定它是否可以被克隆和序列化。hashCode()和 equals()方法的重要性体现在什么地方？HashMap 使用 Key 对象的 hashCode()和 equals()方法去决定 key-value 对的索引。当我们试着从 HashMap 中获取值的时候，这些方法也会被用到。如果这些方法没有被正确地实现，在这种情况下，两个不同 Key 也许会产生相同的 hashCode()和 equals()输出，HashMap 将会认为它们是相同的，然后覆盖它们，而非把它们存储到不同的地方。同样的，所有不允许存储重复数据的集合类都使用 hashCode()和 equals()去查找重复，所以正确实现它们非常重要。 equals()和 hashCode()的实现应该遵循以下规则： （1）如果 o1.equals(o2)，那么 o1.hashCode() == o2.hashCode()总是为 true 的。 （2）如果 o1.hashCode() == o2.hashCode()，并不意味着 o1.equals(o2)会为 true。 Java 中的 HashMap 使用 hashCode()和 equals()方法来确定键值对的索引，当根据键获取值的时候也会用到这两个方法。如果没有正确的实现这两个方法，两个不同的键可能会有相同的 hash 值，因此，可能会被集合认为是相等的。而且，这两个方法也用来发现重复元素。所以这两个方法的实现对 HashMap 的精确性和正确性是至关重要的。HashMap 和 HashTabel 的区别 HashMap 和 Hashtable 都实现了 Map 接口，因此很多特性非常相似。但是，他们有以下不同点： 1）HashMap 允许键和值是 null，而 Hashtable 不允许键或者值是 null。 2）Hashtable 是同步的，而 HashMap 不是。因此，HashMap 更适合于单线程环境，而 Hashtable 适合于多线程环境。 3）HashMap 提供了可供应用迭代的键的集合，因此，HashMap 是快速失败的。另一方面，Hashtable 提供了对键的列举(Enumeration)。 一般认为 Hashtable 是一个遗留的类。Comparable 和 Comparator 接口 Comparable 和 Comparator 都是用来实现集合中的排序的，只是 Comparable 是在集合内部定义的方法实现的排序，Comparator 是在集合外部实现的排序，所以，如想实现排序，就需要在集合外定义 Comparator 接口的方法 compare()或在集合内实现 Comparable 接口的方法 compareTo()。 comparable 是支持自比较，而后者是支持外部比较； Comparable 是一个对象本身就已经支持自比较所需要实现的接口（如 String、Integer 自己就可以完成比较大小操作） 而 Comparator 是一个专用的比较器，当这个对象不支持自比较或者自比较函数不能满足你的要求时，你可以写一个比较器来完成两个对象之间大小的比较。 也就是说当你需要对一个自定义的类的一个数组或者集合进行比较的时候可以实现 Comparable 接口，当你需要对一个已有的类的数组或者集合进行比较的时候就一定要实现 Comparator 接口。另外，这两个接口是支持泛型的，所以我们应该在实现接口的同时定义比较类型。Java 中 HashMap 的工作原理是？Java 中的 HashMap 是以键值对(key-value)的形式存储元素的。HashMap 需要一个 hash 函数，它使用 hashCode()和 equals()方法来向集合/从集合添加和检索元素。当调用 put()方法的时候，HashMap 会计算 key 的 hash 值，然后把键值对存储在集合中合适的索引上。如果 key 已经存在了，value 会被更新成新值。HashMap 的一些重要的特性是它的容量(capacity)，负载因子(load factor)和扩容极限(threshold resizing)。 1)HashMap 有一个叫做 Entry 的内部类，它用来存储 key-value 对。 2)上面的 Entry 对象是存储在一个叫做 table 的 Entry 数组中。 3)table 的索引在逻辑上叫做“桶”(bucket)，它存储了链表的第一个元素。 4)key 的 hashcode()方法用来找到 Entry 对象所在的桶。 5)如果两个 key 有相同的 hash 值，他们会被放在 table 数组的同一个桶里面。 6)key 的 equals()方法用来确保 key 的唯一性。 7)value 对象的 equals()和 hashcode()方法根本一点用也没有。 重点内容 Put：根据 key 的 hashcode()方法计算出来的 hash 值来决定 key 在 Entry 数组的索引。 Get：通过 hashcode 找到数组中的某一个元素 EntryHashcode 的实现 hashCode 的常规协定是： 在 Java 应用程序执行期间，在同一对象上多次调用 hashCode 方法时，必须一致地返回相同的整数，前提是对象上 equals 比较中所用的信息没有被修改。从某一应用程序的一次执行到同一应用程序的另一次执行，该整数无需保持一致。 如果根据 equals(Object) 方法，两个对象是相等的，那么在两个对象中的每个对象上调用 hashCode 方法都必须生成相同的整数结果。 当 equals 方法被重写时，通常有必要重写 hashCode 方法，以维护 hashCode 方法的常规协定，该协定声明相等对象必须具有相等的哈希码。String、StringBffer、StringBuilder 的区别 1）可变与不可变 String 类中使用字符数组保存字符串，如下就是，因为有“final”修饰符，所以可以知道 string 对象是不可变的。 　　　　 private final char value[]; StringBuilder 与 StringBuffer 都继承自 AbstractStringBuilder 类，在 AbstractStringBuilder 中也是使用字符数组保存字符串，如下就是，可知这两种对象都是可变的。 　　　　 char[] value; 2）是否多线程安全 String 中的对象是不可变的，也就可以理解为常量，显然线程安全。 AbstractStringBuilder 是 StringBuilder 与 StringBuffer 的公共父类，定义了一些字符串的基本操作，如 expandCapacity、append、insert、indexOf 等公共方法。 　　 StringBuffer 对方法加了同步锁或者对调用的方法加了同步锁，所以是线程安全的 1、具有 1-5 工作经验的，面对目前流行的技术不知从何下手，需要突破技术瓶颈的可以加群。2、在公司待久了，过得很安逸，但跳槽时面试碰壁。需要在短时间内进修、跳槽拿高薪的可以加群。3、如果没有工作经验，但基础非常扎实，对 java 工作机制，常用设计思想，常用 java 开发框架掌握熟练的，可以加群。4、觉得自己很牛 B，一般需求都能搞定。但是所学的知识点没有系统化，很难在技术领域继续突破的可以加群。5. 群号：高级架构群 647631030 点击链接加入群【JAVA 高级开发】：申请加入 QQ 群 备注好信息！6.阿里 Java 高级大牛直播讲解知识点，分享知识，多年工作经验的梳理和总结，带着大家全面、科学地建立自己的技术体系和技术认知！HashMap、HashSet、HashTable 的区别 HashSet 和 HashMap 的区别 1)HashSet 是 set 的一个实现类,hashMap 是 Map 的一个实现类,同时 hashMap 是 hashTable 的替代品. 2)HashSet 以对象作为元素,而 HashMap 以(key-value)的一组对象作为元素,且 HashSet 拒绝接受重复的对象.HashMap 可以看作三个视图：key 的 Set，value 的 Collection，Entry 的 Set。HashSet 其实就是 HashMap 的一个视图。HashSet 内部就是使用 Hashmap 实现的，和 Hashmap 不同的是它不需要 Key 和 Value 两个值。 往 hashset 中插入对象其实只不过是内部做了 public boolean add(Object o) { return map.put(o, PRESENT)==null; }hastTable 和 hashMap 的区别: 1)Hashtable 是基于陈旧的 Dictionary 类的，HashMap 是 Java 1.2 引进的 Map 接口的一个实现。 2)这个不同即是最重要的一点:Hashtable 中的方法是同步的，而 HashMap 方法(在缺省情况下)是非同步的。即是说，在多线程应用程序中，不用专门的操作就安全地可以使用 Hashtable 了；而对于 HashMap，则需要额外的同步机制。 3)只有 HashMap 可以让你将空值作为一个表的条目的 key 或 value。HashMap 中只有一条记录可以是一个空的 key，但任意数量的条目可以是空的 value。这就是说，如果在表中没有发现搜索键，或者如果发现了搜索键，但它是一个空的值，那么 get()将返回 null。如果有必要，用 containKey()方法来区别这两种情况。线程安全的 HashMap —— java.util.concurrent.ConcurrentHashMap ConcurrentHashMap 增加了 Segment 层，每个 Segment 原理上等同于一个 Hashtable， ConcurrentHashMap 为 Segment 的数组。 向 ConcurrentHashMap 中插入数据或者读取数据，首先都要讲相应的 Key 映射到对应的 Segment，因此不用锁定整个类， 只要对单个的 Segment 操作进行上锁操作就可以了。理论上如果有 n 个 Segment，那么最多可以同时支持 n 个线程的并发访问，从而大大提高了并发访问的效率。另外 rehash() 操作也是对单个的 Segment 进行的，所以由 Map 中的数据量增加导致的 rehash 的成本也是比较低的。附一篇博客：线程安全的 HashMap 实现方法及原理 <a href=\"http://liqianglv2005.iteye.com/blog/2025016ArrayList和LingkedList的区别1）ArrayList：底层用数组实现的List\" target=\"_blank\" rel=\"external\">http://liqianglv2005.iteye.com/blog/2025016ArrayList和LingkedList的区别1）ArrayList：底层用数组实现的List</a> 特点：查询效率高，增删效率低 轻量级 线程不安全 2）LinkedList：底层用双向循环链表 实现的 List 特点：查询效率低，增删效率高垃圾回收机制 Java 的垃圾回收机制是 Java 虚拟机提供的能力，用于在空闲时间以不定时的方式动态回收无任何引用的对象占据的内存空间。 需要注意的是：垃圾回收回收的是无任何引用的对象占据的内存空间而不是对象本身。 两种常用的方法是引用计数和对象引用遍历。 引用计数：在这种方法中，堆中每个对象（不是引用）都有一个引用计数。当一个对象被创建时，且将该对象分配给一个变量，该变量计数设置为 1。当任何其它变量被赋值为这个对象的引用时，计数加 1（a = b,则 b 引用的对象+1），但当一个对象的某个引用超过了生命周期或者被设置为一个新值时，对象的引用计数减 1。任何引用计数为 0 的对象可以被当作垃圾收集。当一个对象被垃圾收集时，它引用的任何对象计数减 1。 对象引用遍历：从一组对象开始，沿着整个对象图上的每条链接，递归确定可到达（reachable）的对象。如果某对象不能从这些根对象的一个（至少一个）到达，则将它作为垃圾收集。序列化和反序列化序列化是将对象状态转换为可保持或传输的格式的过程。与序列化相对的是反序列化，它将流转换为对象。这两个过程结合起来，可以轻松地存储和传输数据。 序列化的目的　　 1、以某种存储形式使自定义对象持久化；　　 2、将对象从一个地方传递到另一个地方。　　 3、使程序更具维护性 当两个进程在进行远程通信时，彼此可以发送各种类型的数据。无论是何种类型的数据，都会以二进制序列的形式在网络上传送。发送方需要把这个对象转换为字节序列，才能在网络上传送；接收方则需要把字节序列再恢复为对象。 把对象转换为字节序列的过程称为对象的序列化。 把字节序列恢复为对象的过程称为对象的反序列化。 说的再直接点，序列化的目的就是为了跨进程传递格式化数据 Java 的灵活性体现在什么机制上？反射机制 Sleep 和 wait 的区别 1、sleep()方法，是属于 Thread 类中的。而 wait()方法，则是属于 Object 类中的。 2、在调用 sleep()方法的过程中，线程不会释放对象锁。而当调用 wait()方法的时候，线程会放弃对象锁。 sleep()方法导致了程序暂停执行指定的时间，让出 cpu 给其他线程，但是他的监控状态依然保持着，当指定的时间到了又会自动恢复运行状态。而当调用 wait()方法的时候，线程会放弃对象锁，进入等待此对象的等待锁定池，只有针对此对象调用 notify()方法后本线程才进入对象锁定池准备。IO 和 NIO1、IO 是面向流的，NIO 是面向缓冲区的。 Java IO 面向流意味着每次从流中读一个或多个字节，直至读取所有字节，它们没有被缓存在任何地方。此外，它不能前后移动流中的数据。如果需要前后移动从流中读取的数据，需要先将它缓存到一个缓冲区。 Java NIO 的缓冲导向方法略有不同。数据读取到一个它稍后处理的缓冲区，需要时可在缓冲区中前后移动。这就增加了处理过程中的灵活性。但是，还需要检查是否该缓冲区中包含所有您需要处理的数据。而且，需确保当更多的数据读入缓冲区时，不要覆盖缓冲区里尚未处理的数据。 2、Java IO 的各种流是阻塞的，Java NIO 的非阻塞模式。 Java IO 的各种流是阻塞的。这意味着，当一个线程调用 read() 或 write()时，该线程被阻塞，直到有一些数据被读取，或数据完全写入。该线程在此期间不能再干任何事情了。 Java NIO 的非阻塞模式，使一个线程从某通道发送请求读取数据，但是它仅能得到目前可用的数据，如果目前没有数据可用时，就什么都不会获取。而不是保持线程阻塞，所以直至数据变的可以读取之前，该线程可以继续做其他的事情。 非阻塞写也是如此。一个线程请求写入一些数据到某通道，但不需要等待它完全写入，这个线程同时可以去做别的事情。 线程通常将非阻塞 IO 的空闲时间用于在其它通道上执行 IO 操作，所以一个单独的线程现在可以管理多个输入和输出通道（channel）。 3、Java NIO 的选择器允许一个单独的线程来监视多个输入通道，你可以注册多个通道使用一个选择器，然后使用一个单独的线程来“选择”通道：这些通道里已经有可以处理的输入，或者选择已准备写入的通道。这种选择机制，使得一个单独的线程很容易来管理多个通道。而 Java IO 无选择器。Scoket 对于一个功能齐全的 Socket，都要包含以下基本结构，其工作过程包含以下四个基本的步骤： 　　（1） 创建 Socket； 　　（2） 打开连接到 Socket 的输入/出流； 　　（3） 按照一定的协议对 Socket 进行读/写操作； 　　（4） 关闭 Socket. 　　可参考博客： <a href=\"http://www.cnblogs.com/linzheng/archive/2011/01/23/1942328.html深克隆、浅克隆浅复制仅仅复制所考虑的对象，而不复制它所引用的对象。\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/linzheng/archive/2011/01/23/1942328.html深克隆、浅克隆浅复制仅仅复制所考虑的对象，而不复制它所引用的对象。</a> 深复制把要复制的对象所引用的对象都复制了一遍。在 java 中只有单继承，如果要让一个类赋予新的特性，通常是使用接口来实现。 在 c++中支持多继承，允许一个子类同时具有多个父类的接口和功能。UDP 和 TCPUDP 和 TCP 都属于传输层协议。 TCP 协议：面向连接的、可靠的、基于字节流 UDP 协议：无连接、不可靠、基于报文 1、TCP 协议中包含了专门的传递保证机制，当数据接收方收到发送方传来的信息时，会自动向发送方发出确认消息；发送方只有在接收到该确认消息之后才继续传送其它信息，否则将一直等待直到收到确认信息为止。 与 TCP 不同，UDP 协议并不提供数据传送的保证机制。如果在从发送方到接收方的传递过程中出现数据报的丢失，协议本身并不能做出任何检测或提示。因此，通常人们把 UDP 协议称为不可靠的传输协议。 2、相对于 TCP 协议，UDP 协议的另外一个不同之处在于如何接收突发性的多个数据报。不同于 TCP，UDP 并不能确保数据的发送和接收顺序。红黑树是一种自平衡二叉查找树，红黑树是一种很有意思的平衡检索树；每次插入的时候都要进行计算，保证二叉树的平衡；如果有 2 的 N 次方数据量级，查询的时候只需要查询 N 次即可。 我们对任何有效的红黑树加以如下增补要求: 1.节点是红色或黑色。 2.根是黑色。 3.所有叶子（外部节点）都是黑色。 4.每个红色节点的两个子节点都是黑色。(从每个叶子到根的所有路径上不能有两个连续的红色节点) 5.从每个叶子到根的所有路径都包含相同数目的黑色节点。 这些约束强制了红黑树的关键属性: 从根到叶子的最长的可能路径不多于最短的可能路径的两倍长。结果是这个树大致上是平衡的。反射反射机制指的是程序在运行时能够获取自身的信息。 用反射机制实现对数据库数据的增、查例子 。 基本原理：保存数据时，把需要保存的对象的属性值全部取出来再拼凑 sql 语句；查询时，将查询到的数据全部包装成一个 java 对象。 1）数据库的每一个表对应一个 pojo 类，表中的每一个字段对应 pojo 类的中的一个属性。 并且 pojo 类的名字和表的名字相同，属性名和字段名相同，大小写没有关系，因为数据库一般不区分大小写 2）为 pojo 类中的每一个属性添加标准的 set 和 get 方法。三次握手和四次挥手三次握手：首先 Client 端发送连接请求报文，Server 段接受连接后回复 ACK 报文，并为这次连接分配资源。Client 端接收到 ACK 报文后也向 Server 段发送 ACK 报文，并分配资源，这样 TCP 连接就建立了。四次握手： 由于 TCP 连接是全双工的，因此每个方向都必须单独进行关闭。这原则是当一方完成它的数据发送任务后就能发送一个 FIN 来终止这个方向的连接。收到一个 FIN 只意味着这一方向上没有数据流动，一个 TCP 连接在收到一个 FIN 后仍能发送数据。首先进行关闭的一方将执行主动关闭，而另一方执行被动关闭。 （1） TCP 客户端发送一个 FIN，用来关闭客户到服务器的数据传送。 （2） 服务器收到这个 FIN，它发回一个 ACK，确认序号为收到的序号加 1。和 SYN 一样，一个 FIN 将占用一个序号。 （3） 服务器关闭客户端的连接，发送一个 FIN 给客户端。 （4） 客户端发回 ACK 报文确认，并将确认序号设置为收到序号加 1。Equals()和==　　 1、java 中 equals 和==的区别 值类型是存储在内存中的堆栈（简称栈），而引用类型的变量在栈中仅仅是存储引用类型变量的地址，而其本身则存储在堆中。 　　 2、==操作比较的是两个变量的值是否相等，对于引用型变量表示的是两个变量在堆中存储的地址是否相同，即栈中的内容是否相同。 　　 3、equals 操作表示的两个变量是否是对同一个对象的引用，即堆中的内容是否相同。 　　 4、==比较的是 2 个对象的地址，而 equals 比较的是 2 个对象的内容，显然，当 equals 为 true 时，==不一定为 true。</p>\n","excerpt":"","more":"<p>作者：周立<br>链接：<a href=\"https://zhuanlan.zhihu.com/p/28515841\">https://zhuanlan.zhihu.com/p/28515841</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>\n<p>Java 的三大特性封装、继承、多态抽象类和接口的区别 Java 抽象类： 使用关键字 abstract 修饰的类叫做抽象类。 用 abstract 来修饰的方法叫做抽象方法。 特点： 1 含有抽象方法的类必须被声明为抽象类（不管是否还包含其他一般方法）（否则编译通不过）； 2 抽象类可以没有抽象方法，可以有普通方法。 3 抽象类必须被继承，抽象方法必须被重写： 若子类还是一个抽象类，不需要重写；否则必须要重写（override）。 抽象类不能被实例化（不能直接构造一个该类的对象）；抽象方法： 在类中没有方法体（抽象方法只需声明，而不需实现某些功能）； 抽象类中的抽象方法必须被实现； 如果一个子类没有实现父类中的抽象方法，则子类也变成了一个抽象类；虚方法： 虚函数的存在是为了多态。 Java 中没有虚函数的概念。它的普通函数就相当于 c++的虚函数，动态绑定是 java 的默认行为。如果 java 中不希望某个函数具有虚函数特性，可以加上 final 关键字变为非虚函数。Java 接口： 是一系列方法的声明。 1 只有声明没有实现； 2 在不同的类中有不同的方法实现；共同点 1、接口和抽象类都不能被实例化，他们都位于继承树的顶端，用于被其他类实现和继承。 2、接口和抽象类都可以包含抽象方法，实现接口或继承抽象类的普通子类都必须实现这些方法。不同点 1、接口里只能包含抽象方法和默认方法，不能为普通方法提供方法实现；抽象类则完全可以包含普通方法。 2、接口里不能定义静态方法，抽象类里可以定义静态方法。 3、接口里只能定义静态常量，不能定义普通成员变量；抽象类里则既可以定义普通成员变量，也可以定义静态常量。 4、接口里不包含构造器，抽象类里可以包含构造器，抽象类里的构造器并不是用于创建对象，而是让其子类调用这些构造器来完成属于抽象类的初始化操作。 5、接口里不能包含初始化块，但抽象类则完全可以包含初始化块。 6、一个类最多只能有一个直接父类，包括抽象类；但一个类可以直接实现多个接口，通过实现多个接口可以弥补 Java 单继承的不足。栈内存和堆内存，引用和值传递栈内存、堆内存在函数中定义的一些基本类型的变量和对象的引用变量都是在函数的栈内存中分配。当在一段代码块中定义一个变量时，java 就在栈中为这个变量分配内存空间，当超过变量的作用域后，java 会自动释放掉为该变量分配的内存空间，该内存空间可以立刻被另作他用。 堆内存用于存放由 new 创建的对象和数组。在堆中分配的内存，由 java 虚拟机自动垃圾回收器来管理。在数组和对象在没有引用变量指向它的时候，才变成垃圾，不能再被使用，但是仍然占着内存，在随后的一个不确定的时间被垃圾回收器释放掉。这个也是 java 比较占内存的主要原因。引用、值传递值传递：方法调用时，实际参数把它的值传递给对应的形式参数，方法执行中形式参数值的改变不影响实际参数的值。引用传递：也称为传地址。方法调用时，实际参数的引用(地址，而不是参数的值)被传递给方法中相对应的形式参数，在方法执行中，对形式参数的操作实际上就是对实际参数的操作，方法执行中形式参数值的改变将会影响实际参数的值。单例模式及好处构造函数私有化，用一个静态方法来获取对象实例。特点： 1）单例类只能有一个实例。 2）单例类必须自己创建自己的唯一实例。 3）单例类必须给所有其他对象提供这一实例。 主要优点： 1）提供了对唯一实例的受控访问。 2）由于在系统内存中只存在一个对象，因此可以节约系统资源，对于一些需要频繁创建和销毁的对象单例模式无疑可以提高系统的性能。 3）允许可变数目的实例。主要缺点： 1）由于单利模式中没有抽象层，因此单例类的扩展有很大的困难。 2）单例类的职责过重，在一定程度上违背了“单一职责原则”。 3）滥用单例将带来一些负面问题，如为了节省资源将数据库连接池对象设计为的单例类，可能会导致共享连接池对象的程序过多而出现连接池溢出；如果实例化的对象长时间不被利用，系统会认为是垃圾而被回收，这将导致对象状态的丢失。重载和重写重载：Overloading （1） Java 的方法重载，就是在类中可以创建多个方法，它们具有相同的名字，但具有不同的参数和不同的定义。调用方法时通过传递给它们的不同参数个数和参数类型来决定具体使用哪个方法, 这就是多态性。 （2） 重载的时候，方法名要一样，但是参数类型和个数不一样，返回值类型可以相同也可以不相同。无法以返回类型作为重载函数的区分标准。重写：Overriding 注意：当要重写父类方法时，要使用@Override 标签提醒编译器检查代码是否是重写，而不是重载了原来的方法。 （1） 父类与子类之间的多态性，对父类的函数进行重新定义。如果在子类中定义某方法与其父类有相同的名称和参数，我们说该方法被重写 (Overriding)。在 Java 中，子类可继承父类中的方法，而不需要重新编写相同的方法。但有时子类并不想原封不动地继承父类的方法，而是想作一定的修改，这就需要采用方法的重写。方法重写又称方法覆盖。 （2）若子类中的方法与父类中的某一方法具有相同的方法名、返回类型和参数表，则新方法将覆盖原有的方法。如需父类中原有的方法，可使用 super 关键字，该关键字引用了当前类的父类。 （3）子类函数的访问修饰权限不能少于父类的。子类、父类间的转换和构造顺序子类、父类间的转换： 子类能够自动转换成父类类型。 当创建子类对象的时候： ① 先调用了子类的构造函数 ② 调用了父类的构造函数 ③ 执行了父类的构造函数 ④ 执行了子类的构造函数 Final、finally、finalizefinal 用于声明属性，方法和类，分别表示属性不可变，方法不可覆盖，类不可继承。 finally 是异常处理语句结构的一部分，表示总是执行。 finalize 是 Object 类的一个方法，在垃圾收集器执行的时候会调用被回收对象的此方法，可以覆盖此方法提供垃圾收集时的其他资源回收，例如关闭文件等 Synchronized 和 volatile 的区别 volatile 只作用于在多个线程之间能够被共享的变量。如果一个字段被声明成 volatile，java 线程内存模型确保所有线程看到这个变量的值是一致的。Volatile 变量修饰符如果使用恰当的话，它比 synchronized 的使用和执行成本会更低，因为它不会引起线程上下文的切换和调度。 synchronized 获得并释放监视器——如果两个线程使用了同一个对象锁，监视器能强制保证代码块同时只被一个线程所执行——这是众所周知的事实。但是，synchronized 也同步内存：事实上，synchronized 在“ 主”内存区域同步整个线程的内存。 因此 volatile 只是在线程内存和“主”内存间同步某个变量的值，而 synchronized 通过锁定和解锁某个监视器同步所有变量的值。显然 synchronized 要比 volatile 消耗更多资源。1）volatile 本质是在告诉 jvm 当前变量在寄存器（工作内存）中的值是不确定的，需要从主存中读取，没有互斥锁；synchronized 则是锁定当前变量，只有当前线程可以访问该变量，其他线程被阻塞住。 2）volatile 仅能使用在变量级别；synchronized 则可以使用在变量、方法、和类级别的 3）volatile 只是在线程内存和“主”内存间同步某个变量的值，而 synchronized 通过锁定和解锁某个监视器同步所有变量的值；显然 synchronized 要比 volatile 消耗更多资源。 4）volatile 不会造成线程的阻塞；synchronized 可能会造成线程的阻塞。 5）volatile 标记的变量不会被编译器优化；synchronized 标记的变量可以被编译器优化 。集合 Collection：代表一组对象，每一个对象都是它的子元素。 Set：不包含重复元素的 Collection。 List：有顺序的 Collection，并且可以包含重复元素。 Map：可以把键（key）映射到值（value）的对象，键不能重复。集合类没有实现 Cloneable 和 Serializable 接口的原因 Collection 接口指定一组对象，对象即为它的元素。如何维护这些元素由 Collection 的具体实现决定。例如，一些如 List 的 Collection 实现允许重复的元素，而其它的如 Set 就不允许。很多 Collection 实现有一个公有的 clone 方法。然而，把它放到集合的所有实现中也是没有意义的。这是因为 Collection 是一个抽象表现。重要的是实现。 当与具体实现打交道的时候，克隆或序列化的语义和含义才发挥作用。所以，具体实现应该决定如何对它进行克隆或序列化，或它是否可以被克隆或序列化。 在所有的实现中授权克隆和序列化，最终导致更少的灵活性和更多的限制。特定的实现应该决定它是否可以被克隆和序列化。hashCode()和 equals()方法的重要性体现在什么地方？HashMap 使用 Key 对象的 hashCode()和 equals()方法去决定 key-value 对的索引。当我们试着从 HashMap 中获取值的时候，这些方法也会被用到。如果这些方法没有被正确地实现，在这种情况下，两个不同 Key 也许会产生相同的 hashCode()和 equals()输出，HashMap 将会认为它们是相同的，然后覆盖它们，而非把它们存储到不同的地方。同样的，所有不允许存储重复数据的集合类都使用 hashCode()和 equals()去查找重复，所以正确实现它们非常重要。 equals()和 hashCode()的实现应该遵循以下规则： （1）如果 o1.equals(o2)，那么 o1.hashCode() == o2.hashCode()总是为 true 的。 （2）如果 o1.hashCode() == o2.hashCode()，并不意味着 o1.equals(o2)会为 true。 Java 中的 HashMap 使用 hashCode()和 equals()方法来确定键值对的索引，当根据键获取值的时候也会用到这两个方法。如果没有正确的实现这两个方法，两个不同的键可能会有相同的 hash 值，因此，可能会被集合认为是相等的。而且，这两个方法也用来发现重复元素。所以这两个方法的实现对 HashMap 的精确性和正确性是至关重要的。HashMap 和 HashTabel 的区别 HashMap 和 Hashtable 都实现了 Map 接口，因此很多特性非常相似。但是，他们有以下不同点： 1）HashMap 允许键和值是 null，而 Hashtable 不允许键或者值是 null。 2）Hashtable 是同步的，而 HashMap 不是。因此，HashMap 更适合于单线程环境，而 Hashtable 适合于多线程环境。 3）HashMap 提供了可供应用迭代的键的集合，因此，HashMap 是快速失败的。另一方面，Hashtable 提供了对键的列举(Enumeration)。 一般认为 Hashtable 是一个遗留的类。Comparable 和 Comparator 接口 Comparable 和 Comparator 都是用来实现集合中的排序的，只是 Comparable 是在集合内部定义的方法实现的排序，Comparator 是在集合外部实现的排序，所以，如想实现排序，就需要在集合外定义 Comparator 接口的方法 compare()或在集合内实现 Comparable 接口的方法 compareTo()。 comparable 是支持自比较，而后者是支持外部比较； Comparable 是一个对象本身就已经支持自比较所需要实现的接口（如 String、Integer 自己就可以完成比较大小操作） 而 Comparator 是一个专用的比较器，当这个对象不支持自比较或者自比较函数不能满足你的要求时，你可以写一个比较器来完成两个对象之间大小的比较。 也就是说当你需要对一个自定义的类的一个数组或者集合进行比较的时候可以实现 Comparable 接口，当你需要对一个已有的类的数组或者集合进行比较的时候就一定要实现 Comparator 接口。另外，这两个接口是支持泛型的，所以我们应该在实现接口的同时定义比较类型。Java 中 HashMap 的工作原理是？Java 中的 HashMap 是以键值对(key-value)的形式存储元素的。HashMap 需要一个 hash 函数，它使用 hashCode()和 equals()方法来向集合/从集合添加和检索元素。当调用 put()方法的时候，HashMap 会计算 key 的 hash 值，然后把键值对存储在集合中合适的索引上。如果 key 已经存在了，value 会被更新成新值。HashMap 的一些重要的特性是它的容量(capacity)，负载因子(load factor)和扩容极限(threshold resizing)。 1)HashMap 有一个叫做 Entry 的内部类，它用来存储 key-value 对。 2)上面的 Entry 对象是存储在一个叫做 table 的 Entry 数组中。 3)table 的索引在逻辑上叫做“桶”(bucket)，它存储了链表的第一个元素。 4)key 的 hashcode()方法用来找到 Entry 对象所在的桶。 5)如果两个 key 有相同的 hash 值，他们会被放在 table 数组的同一个桶里面。 6)key 的 equals()方法用来确保 key 的唯一性。 7)value 对象的 equals()和 hashcode()方法根本一点用也没有。 重点内容 Put：根据 key 的 hashcode()方法计算出来的 hash 值来决定 key 在 Entry 数组的索引。 Get：通过 hashcode 找到数组中的某一个元素 EntryHashcode 的实现 hashCode 的常规协定是： 在 Java 应用程序执行期间，在同一对象上多次调用 hashCode 方法时，必须一致地返回相同的整数，前提是对象上 equals 比较中所用的信息没有被修改。从某一应用程序的一次执行到同一应用程序的另一次执行，该整数无需保持一致。 如果根据 equals(Object) 方法，两个对象是相等的，那么在两个对象中的每个对象上调用 hashCode 方法都必须生成相同的整数结果。 当 equals 方法被重写时，通常有必要重写 hashCode 方法，以维护 hashCode 方法的常规协定，该协定声明相等对象必须具有相等的哈希码。String、StringBffer、StringBuilder 的区别 1）可变与不可变 String 类中使用字符数组保存字符串，如下就是，因为有“final”修饰符，所以可以知道 string 对象是不可变的。 　　　　 private final char value[]; StringBuilder 与 StringBuffer 都继承自 AbstractStringBuilder 类，在 AbstractStringBuilder 中也是使用字符数组保存字符串，如下就是，可知这两种对象都是可变的。 　　　　 char[] value; 2）是否多线程安全 String 中的对象是不可变的，也就可以理解为常量，显然线程安全。 AbstractStringBuilder 是 StringBuilder 与 StringBuffer 的公共父类，定义了一些字符串的基本操作，如 expandCapacity、append、insert、indexOf 等公共方法。 　　 StringBuffer 对方法加了同步锁或者对调用的方法加了同步锁，所以是线程安全的 1、具有 1-5 工作经验的，面对目前流行的技术不知从何下手，需要突破技术瓶颈的可以加群。2、在公司待久了，过得很安逸，但跳槽时面试碰壁。需要在短时间内进修、跳槽拿高薪的可以加群。3、如果没有工作经验，但基础非常扎实，对 java 工作机制，常用设计思想，常用 java 开发框架掌握熟练的，可以加群。4、觉得自己很牛 B，一般需求都能搞定。但是所学的知识点没有系统化，很难在技术领域继续突破的可以加群。5. 群号：高级架构群 647631030 点击链接加入群【JAVA 高级开发】：申请加入 QQ 群 备注好信息！6.阿里 Java 高级大牛直播讲解知识点，分享知识，多年工作经验的梳理和总结，带着大家全面、科学地建立自己的技术体系和技术认知！HashMap、HashSet、HashTable 的区别 HashSet 和 HashMap 的区别 1)HashSet 是 set 的一个实现类,hashMap 是 Map 的一个实现类,同时 hashMap 是 hashTable 的替代品. 2)HashSet 以对象作为元素,而 HashMap 以(key-value)的一组对象作为元素,且 HashSet 拒绝接受重复的对象.HashMap 可以看作三个视图：key 的 Set，value 的 Collection，Entry 的 Set。HashSet 其实就是 HashMap 的一个视图。HashSet 内部就是使用 Hashmap 实现的，和 Hashmap 不同的是它不需要 Key 和 Value 两个值。 往 hashset 中插入对象其实只不过是内部做了 public boolean add(Object o) { return map.put(o, PRESENT)==null; }hastTable 和 hashMap 的区别: 1)Hashtable 是基于陈旧的 Dictionary 类的，HashMap 是 Java 1.2 引进的 Map 接口的一个实现。 2)这个不同即是最重要的一点:Hashtable 中的方法是同步的，而 HashMap 方法(在缺省情况下)是非同步的。即是说，在多线程应用程序中，不用专门的操作就安全地可以使用 Hashtable 了；而对于 HashMap，则需要额外的同步机制。 3)只有 HashMap 可以让你将空值作为一个表的条目的 key 或 value。HashMap 中只有一条记录可以是一个空的 key，但任意数量的条目可以是空的 value。这就是说，如果在表中没有发现搜索键，或者如果发现了搜索键，但它是一个空的值，那么 get()将返回 null。如果有必要，用 containKey()方法来区别这两种情况。线程安全的 HashMap —— java.util.concurrent.ConcurrentHashMap ConcurrentHashMap 增加了 Segment 层，每个 Segment 原理上等同于一个 Hashtable， ConcurrentHashMap 为 Segment 的数组。 向 ConcurrentHashMap 中插入数据或者读取数据，首先都要讲相应的 Key 映射到对应的 Segment，因此不用锁定整个类， 只要对单个的 Segment 操作进行上锁操作就可以了。理论上如果有 n 个 Segment，那么最多可以同时支持 n 个线程的并发访问，从而大大提高了并发访问的效率。另外 rehash() 操作也是对单个的 Segment 进行的，所以由 Map 中的数据量增加导致的 rehash 的成本也是比较低的。附一篇博客：线程安全的 HashMap 实现方法及原理 <a href=\"http://liqianglv2005.iteye.com/blog/2025016ArrayList和LingkedList的区别1）ArrayList：底层用数组实现的List\">http://liqianglv2005.iteye.com/blog/2025016ArrayList和LingkedList的区别1）ArrayList：底层用数组实现的List</a> 特点：查询效率高，增删效率低 轻量级 线程不安全 2）LinkedList：底层用双向循环链表 实现的 List 特点：查询效率低，增删效率高垃圾回收机制 Java 的垃圾回收机制是 Java 虚拟机提供的能力，用于在空闲时间以不定时的方式动态回收无任何引用的对象占据的内存空间。 需要注意的是：垃圾回收回收的是无任何引用的对象占据的内存空间而不是对象本身。 两种常用的方法是引用计数和对象引用遍历。 引用计数：在这种方法中，堆中每个对象（不是引用）都有一个引用计数。当一个对象被创建时，且将该对象分配给一个变量，该变量计数设置为 1。当任何其它变量被赋值为这个对象的引用时，计数加 1（a = b,则 b 引用的对象+1），但当一个对象的某个引用超过了生命周期或者被设置为一个新值时，对象的引用计数减 1。任何引用计数为 0 的对象可以被当作垃圾收集。当一个对象被垃圾收集时，它引用的任何对象计数减 1。 对象引用遍历：从一组对象开始，沿着整个对象图上的每条链接，递归确定可到达（reachable）的对象。如果某对象不能从这些根对象的一个（至少一个）到达，则将它作为垃圾收集。序列化和反序列化序列化是将对象状态转换为可保持或传输的格式的过程。与序列化相对的是反序列化，它将流转换为对象。这两个过程结合起来，可以轻松地存储和传输数据。 序列化的目的　　 1、以某种存储形式使自定义对象持久化；　　 2、将对象从一个地方传递到另一个地方。　　 3、使程序更具维护性 当两个进程在进行远程通信时，彼此可以发送各种类型的数据。无论是何种类型的数据，都会以二进制序列的形式在网络上传送。发送方需要把这个对象转换为字节序列，才能在网络上传送；接收方则需要把字节序列再恢复为对象。 把对象转换为字节序列的过程称为对象的序列化。 把字节序列恢复为对象的过程称为对象的反序列化。 说的再直接点，序列化的目的就是为了跨进程传递格式化数据 Java 的灵活性体现在什么机制上？反射机制 Sleep 和 wait 的区别 1、sleep()方法，是属于 Thread 类中的。而 wait()方法，则是属于 Object 类中的。 2、在调用 sleep()方法的过程中，线程不会释放对象锁。而当调用 wait()方法的时候，线程会放弃对象锁。 sleep()方法导致了程序暂停执行指定的时间，让出 cpu 给其他线程，但是他的监控状态依然保持着，当指定的时间到了又会自动恢复运行状态。而当调用 wait()方法的时候，线程会放弃对象锁，进入等待此对象的等待锁定池，只有针对此对象调用 notify()方法后本线程才进入对象锁定池准备。IO 和 NIO1、IO 是面向流的，NIO 是面向缓冲区的。 Java IO 面向流意味着每次从流中读一个或多个字节，直至读取所有字节，它们没有被缓存在任何地方。此外，它不能前后移动流中的数据。如果需要前后移动从流中读取的数据，需要先将它缓存到一个缓冲区。 Java NIO 的缓冲导向方法略有不同。数据读取到一个它稍后处理的缓冲区，需要时可在缓冲区中前后移动。这就增加了处理过程中的灵活性。但是，还需要检查是否该缓冲区中包含所有您需要处理的数据。而且，需确保当更多的数据读入缓冲区时，不要覆盖缓冲区里尚未处理的数据。 2、Java IO 的各种流是阻塞的，Java NIO 的非阻塞模式。 Java IO 的各种流是阻塞的。这意味着，当一个线程调用 read() 或 write()时，该线程被阻塞，直到有一些数据被读取，或数据完全写入。该线程在此期间不能再干任何事情了。 Java NIO 的非阻塞模式，使一个线程从某通道发送请求读取数据，但是它仅能得到目前可用的数据，如果目前没有数据可用时，就什么都不会获取。而不是保持线程阻塞，所以直至数据变的可以读取之前，该线程可以继续做其他的事情。 非阻塞写也是如此。一个线程请求写入一些数据到某通道，但不需要等待它完全写入，这个线程同时可以去做别的事情。 线程通常将非阻塞 IO 的空闲时间用于在其它通道上执行 IO 操作，所以一个单独的线程现在可以管理多个输入和输出通道（channel）。 3、Java NIO 的选择器允许一个单独的线程来监视多个输入通道，你可以注册多个通道使用一个选择器，然后使用一个单独的线程来“选择”通道：这些通道里已经有可以处理的输入，或者选择已准备写入的通道。这种选择机制，使得一个单独的线程很容易来管理多个通道。而 Java IO 无选择器。Scoket 对于一个功能齐全的 Socket，都要包含以下基本结构，其工作过程包含以下四个基本的步骤： 　　（1） 创建 Socket； 　　（2） 打开连接到 Socket 的输入/出流； 　　（3） 按照一定的协议对 Socket 进行读/写操作； 　　（4） 关闭 Socket. 　　可参考博客： <a href=\"http://www.cnblogs.com/linzheng/archive/2011/01/23/1942328.html深克隆、浅克隆浅复制仅仅复制所考虑的对象，而不复制它所引用的对象。\">http://www.cnblogs.com/linzheng/archive/2011/01/23/1942328.html深克隆、浅克隆浅复制仅仅复制所考虑的对象，而不复制它所引用的对象。</a> 深复制把要复制的对象所引用的对象都复制了一遍。在 java 中只有单继承，如果要让一个类赋予新的特性，通常是使用接口来实现。 在 c++中支持多继承，允许一个子类同时具有多个父类的接口和功能。UDP 和 TCPUDP 和 TCP 都属于传输层协议。 TCP 协议：面向连接的、可靠的、基于字节流 UDP 协议：无连接、不可靠、基于报文 1、TCP 协议中包含了专门的传递保证机制，当数据接收方收到发送方传来的信息时，会自动向发送方发出确认消息；发送方只有在接收到该确认消息之后才继续传送其它信息，否则将一直等待直到收到确认信息为止。 与 TCP 不同，UDP 协议并不提供数据传送的保证机制。如果在从发送方到接收方的传递过程中出现数据报的丢失，协议本身并不能做出任何检测或提示。因此，通常人们把 UDP 协议称为不可靠的传输协议。 2、相对于 TCP 协议，UDP 协议的另外一个不同之处在于如何接收突发性的多个数据报。不同于 TCP，UDP 并不能确保数据的发送和接收顺序。红黑树是一种自平衡二叉查找树，红黑树是一种很有意思的平衡检索树；每次插入的时候都要进行计算，保证二叉树的平衡；如果有 2 的 N 次方数据量级，查询的时候只需要查询 N 次即可。 我们对任何有效的红黑树加以如下增补要求: 1.节点是红色或黑色。 2.根是黑色。 3.所有叶子（外部节点）都是黑色。 4.每个红色节点的两个子节点都是黑色。(从每个叶子到根的所有路径上不能有两个连续的红色节点) 5.从每个叶子到根的所有路径都包含相同数目的黑色节点。 这些约束强制了红黑树的关键属性: 从根到叶子的最长的可能路径不多于最短的可能路径的两倍长。结果是这个树大致上是平衡的。反射反射机制指的是程序在运行时能够获取自身的信息。 用反射机制实现对数据库数据的增、查例子 。 基本原理：保存数据时，把需要保存的对象的属性值全部取出来再拼凑 sql 语句；查询时，将查询到的数据全部包装成一个 java 对象。 1）数据库的每一个表对应一个 pojo 类，表中的每一个字段对应 pojo 类的中的一个属性。 并且 pojo 类的名字和表的名字相同，属性名和字段名相同，大小写没有关系，因为数据库一般不区分大小写 2）为 pojo 类中的每一个属性添加标准的 set 和 get 方法。三次握手和四次挥手三次握手：首先 Client 端发送连接请求报文，Server 段接受连接后回复 ACK 报文，并为这次连接分配资源。Client 端接收到 ACK 报文后也向 Server 段发送 ACK 报文，并分配资源，这样 TCP 连接就建立了。四次握手： 由于 TCP 连接是全双工的，因此每个方向都必须单独进行关闭。这原则是当一方完成它的数据发送任务后就能发送一个 FIN 来终止这个方向的连接。收到一个 FIN 只意味着这一方向上没有数据流动，一个 TCP 连接在收到一个 FIN 后仍能发送数据。首先进行关闭的一方将执行主动关闭，而另一方执行被动关闭。 （1） TCP 客户端发送一个 FIN，用来关闭客户到服务器的数据传送。 （2） 服务器收到这个 FIN，它发回一个 ACK，确认序号为收到的序号加 1。和 SYN 一样，一个 FIN 将占用一个序号。 （3） 服务器关闭客户端的连接，发送一个 FIN 给客户端。 （4） 客户端发回 ACK 报文确认，并将确认序号设置为收到序号加 1。Equals()和==　　 1、java 中 equals 和==的区别 值类型是存储在内存中的堆栈（简称栈），而引用类型的变量在栈中仅仅是存储引用类型变量的地址，而其本身则存储在堆中。 　　 2、==操作比较的是两个变量的值是否相等，对于引用型变量表示的是两个变量在堆中存储的地址是否相同，即栈中的内容是否相同。 　　 3、equals 操作表示的两个变量是否是对同一个对象的引用，即堆中的内容是否相同。 　　 4、==比较的是 2 个对象的地址，而 equals 比较的是 2 个对象的内容，显然，当 equals 为 true 时，==不一定为 true。</p>\n"},{"title":"Jsp学习记录","date":"2017-08-21T03:46:06.000Z","keywords":null,"_content":">Jsp学习笔记\n\n# JSP 页面元素\n\n- 静态内容 HTML静态文本\n- 指令 以\"<%@\"开始，以\"%\"\">结束\n- 小脚本 <%java代码 %>\n- 表达式 <%=java表达式 %>\n- 声明 <%! 方法%>\n- 注释 `<!--客户端可以查看到-->`,`<%--客户端不能查看到--%>`\n<!--  more  -->\n# JSP 生命周期\n翻译-编译-执行\n\n#对象的作用域\n\n- page 当前页面\n- request 在一个服务器请求范围内\n- session 在一次会话范围内容有效(存在服务器中)\n- application 在一个应用服务器范围内有效\n\n# servlet\n\n\n","source":"_posts/Jsp.md","raw":"---\ntitle: Jsp学习记录\ndate: 2017-08-21 11:46:06\ntags:\ncategories:\nkeywords:\n---\n>Jsp学习笔记\n\n# JSP 页面元素\n\n- 静态内容 HTML静态文本\n- 指令 以\"<%@\"开始，以\"%\"\">结束\n- 小脚本 <%java代码 %>\n- 表达式 <%=java表达式 %>\n- 声明 <%! 方法%>\n- 注释 `<!--客户端可以查看到-->`,`<%--客户端不能查看到--%>`\n<!--  more  -->\n# JSP 生命周期\n翻译-编译-执行\n\n#对象的作用域\n\n- page 当前页面\n- request 在一个服务器请求范围内\n- session 在一次会话范围内容有效(存在服务器中)\n- application 在一个应用服务器范围内有效\n\n# servlet\n\n\n","slug":"Jsp","published":1,"updated":"2017-09-06T09:24:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1ou0027cdondlsku9g4","content":"<blockquote>\n<p>Jsp学习笔记</p>\n</blockquote>\n<h1 id=\"JSP-页面元素\"><a href=\"#JSP-页面元素\" class=\"headerlink\" title=\"JSP 页面元素\"></a>JSP 页面元素</h1><ul>\n<li>静态内容 HTML静态文本</li>\n<li>指令 以”<a href=\"&#109;&#x61;&#105;&#x6c;&#116;&#111;&#58;&#x25;&#x40;&#x22;&#x5f00;&#22987;&#65292;&#x4ee5;&#x22;&#x25;&#x22;&#34;\">&#x25;&#x40;&#x22;&#x5f00;&#22987;&#65292;&#x4ee5;&#x22;&#x25;&#x22;&#34;</a>结束</li>\n<li>小脚本 &lt;%java代码 %&gt;</li>\n<li>表达式 &lt;%=java表达式 %&gt;</li>\n<li>声明 &lt;%! 方法%&gt;</li>\n<li>注释 <code>&lt;!--客户端可以查看到--&gt;</code>,<code>&lt;%--客户端不能查看到--%&gt;</code><a id=\"more\"></a>\n<h1 id=\"JSP-生命周期\"><a href=\"#JSP-生命周期\" class=\"headerlink\" title=\"JSP 生命周期\"></a>JSP 生命周期</h1>翻译-编译-执行</li>\n</ul>\n<p>#对象的作用域</p>\n<ul>\n<li>page 当前页面</li>\n<li>request 在一个服务器请求范围内</li>\n<li>session 在一次会话范围内容有效(存在服务器中)</li>\n<li>application 在一个应用服务器范围内有效</li>\n</ul>\n<h1 id=\"servlet\"><a href=\"#servlet\" class=\"headerlink\" title=\"servlet\"></a>servlet</h1>","excerpt":"<blockquote>\n<p>Jsp学习笔记</p>\n</blockquote>\n<h1 id=\"JSP-页面元素\"><a href=\"#JSP-页面元素\" class=\"headerlink\" title=\"JSP 页面元素\"></a>JSP 页面元素</h1><ul>\n<li>静态内容 HTML静态文本</li>\n<li>指令 以”<a href=\"&#109;&#x61;&#105;&#x6c;&#116;&#111;&#58;&#x25;&#x40;&#x22;&#x5f00;&#22987;&#65292;&#x4ee5;&#x22;&#x25;&#x22;&#34;\">&#x25;&#x40;&#x22;&#x5f00;&#22987;&#65292;&#x4ee5;&#x22;&#x25;&#x22;&#34;</a>结束</li>\n<li>小脚本 &lt;%java代码 %&gt;</li>\n<li>表达式 &lt;%=java表达式 %&gt;</li>\n<li>声明 &lt;%! 方法%&gt;</li>\n<li>注释 <code>&lt;!--客户端可以查看到--&gt;</code>,<code>&lt;%--客户端不能查看到--%&gt;</code>","more":"<h1 id=\"JSP-生命周期\"><a href=\"#JSP-生命周期\" class=\"headerlink\" title=\"JSP 生命周期\"></a>JSP 生命周期</h1>翻译-编译-执行</li>\n</ul>\n<p>#对象的作用域</p>\n<ul>\n<li>page 当前页面</li>\n<li>request 在一个服务器请求范围内</li>\n<li>session 在一次会话范围内容有效(存在服务器中)</li>\n<li>application 在一个应用服务器范围内有效</li>\n</ul>\n<h1 id=\"servlet\"><a href=\"#servlet\" class=\"headerlink\" title=\"servlet\"></a>servlet</h1>"},{"title":"分布式部署安装方案","date":"2018-06-18T17:08:10.000Z","keywords":"分布式","_content":"\n> 之前因为公司的产品需求，研究过分布式方案，最近抽空整理了下\n\n# 解决方案\n\n- 主要是以`nginx`搭载`keepalived`实现 web 业务服务器 `keepalives`防止单点故障\n- `reids`分布式缓存\n- `fastdfs`分布式文件\n- `postgre-xl`分布式数据库服务器\n\n> 简单说，分布式是以缩短单个任务的执行时间来提升效率的，而集群则是通过提高单位时间内执行的任务数来提升效率。\n\n[参考](https://segmentfault.com/a/1190000002418709)\n\n<!--  more  -->\n\n> 以下是实验中遇到的问题以及安装方法\n\n# CentOS7 安装问题集\n\n> 远程无法访问（防火墙问题）\n\n```bash\nfirewall-cmd --zone=public --add-port=80/tcp --permanent\n\nfirewall-cmd --reload\n\nsystemctl stop firewalld.service #停止\n\nsystemctl disable firewalld.service #禁用\n\nfirewall-cmd --state #查看默认防火墙状态（关闭后显示notrunning，开启后显示running）\n\n# liunx图形界面获得root权限\n直接 `sudo nautilus` （unity，gnome）或 `sudo dolphin` (kde) ,就可以以root权限打开文件管理器了\n\n# liunx 远程获取root权限\n`sudo vi /etc/ssh/sshd_config`\n将PermitRootLogin值改yes\n允许不输入密码登录\n将PermitEmptyPasswords yes前面的#号去掉\n重启服务：service sshd restart（/etc/initd.d/sshd restart）\n```\n\n# nginx\n\n参考另一篇[nginx 安装](https://rsl140.github.io/blog/2018/01/06/nginx/)\n\n# keepalives\n\n## 简介\n\nKeepalived 是一个基于 VRRP 协议来实现的服务高可用方案，可以利用其来避免 IP 单点故障，类似的工具还有 heartbeat、corosync、pacemaker。\n\n但是它一般不会单独出现，而是与其它负载均衡技术（如 lvs、haproxy、nginx）一起工作来达到集群的高可用。\n\nKeepalived 的作用是检测服务器的状态，如果有一台 web 服务器死机，或工作出现故障，Keepalived 将检测到，并将有故障的服务器从系统中剔除，同时使用其他服务器代替该服务器的工作；\n\n当服务器工作正常后 Keepalived 自动将服务器加入到服务器群中，这些工作全部自动完成，不需要人工干涉，需要人工做的只是修复故障的服务器。\n\n## 原理\n\n```mermaid\ngraph LR\n用户 --> 交换机\n交换机 --> Nginx1:负载均衡/keepalived:主\nNginx2:负载均衡/keepalived:备 --> 心跳检查\n心跳检查 --> Nginx1:负载均衡/keepalived:主\nNginx1:负载均衡/keepalived:主 --> tomact1\nNginx1:负载均衡/keepalived:主 --> tomact2\n```\n\n首先 Keepalived 可以在主机上产生一个虚拟的 ip, 这里叫做 vip(v 是 virtual 的意思):192.168.200.150, keepalived 会将这个 vip 绑定到交换机上.\n\n当用户访问主机:192.168.200.129 时, 交换机会通过这个 ip 和 vip 的对应找到 192.168.200.129 上的 Nginx 进行处理.\n\n如果当有一天 192.168.200.129 上的 Nginx 挂掉的时候, Keepalived 会立即在备机上生成一个相同的 vip: 192.168.200.150, 当用户继续访问 192.168.200.129 时, 交换机上已经绑定了 vip, 这时发现这个 vip 是存在于 192.168.200.130 上面的, 所以直接将请求转发到了备机上.\n\n如果主机被修复好能够继续对外提供服务时, 这时 keepalived 会将主机上继续生成这个 vip, 同时回收在备机上生成的 vip. 这个是通过心跳检查来判断主机已恢复使用.\n\n## 安装\n\n### 下载\n\nwget http://www.keepalived.org/software/keepalived-1.2.23.tar.gz\n\n### 解压\n\ntar -zxvf keepalived-1.2.23.tar.gz\ncd keepalived-1.2.23\n\n### 安装\n\n./configure --prefix=/usr/local/keepalived #prefix 指定安装目录\n\n如果提示错误 openssl 不存在\nsudo apt-get install openssl\nsudo apt-get install libssl-dev\n\nmake\nmake install\n\n### 配置\n\n``` bash\n【/usr/local/keepalived/etc/keepalived/keepalived.conf】\n   global_defs {\n       notification_email { #指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。\n           acassen@firewall.loc\n           failover@firewall.loc\n           sysadmin@firewall.loc\n       }\n       notification_email_from Alexandre.Cassen@firewall.loc #指定发件人\n       smtp_server 127.0.0.1 #发送email的smtp地址\n       smtp_connect_timeout 30 #超时时间\n       router_id nginx #运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同\n       vrrp_skip_check_adv_addr\n       vrrp_strict\n       vrrp_garp_interval 0\n       vrrp_gna_interval 0\n   }\n\n   vrrp_instance VI_1 {\n       state MASTER #指定当前节点为主节点 备用节点上设置为BACKUP即可\n       interface eth0 #绑定虚拟IP的网络接口,使用ip a 查看网卡名称2.网卡名称\n       virtual_router_id 51 #VRRP组名，两个节点的设置必须一样，以指明各个节点属于同一VRRP组\n       priority 100 #主节点的优先级（1-254之间），备用节点必须比主节点优先级低\n       advert_int 1\n       authentication { #设置验证信息，两个节点必须一致\n       　　auth_type PASS\n       　　auth_pass 1111\n       }\n       virtual_ipaddress { #指定虚拟IP, 两个节点设置必须一样\n       　　192.168.0.110/24\n       }\n   }\n\n   【/usr/local/keepalived/etc/sysconfig/keepalived】\n\n   KEEPALIVED_OPTIONS=\"-D -f /usr/local/keepalived/etc/keepalived/keepalived.conf\" #指定keepalived配置文件路径\n\n\n因为我们使用非默认路径（/usr/local）安装keepalived，需要设置一些软链接以保证keepalived能正常启动\n\nln -s /usr/local/keepalived/sbin/keepalived  /usr/bin #将keepalived主程序加入到环境变量\nln -s /usr/local/keepalived/etc/sysconfig/keepalived  /etc/sysconfig/ #keepalived启动脚本变量引用文件，默认文件路径是/etc/sysconfig/，也可以不做软链接，直接修改启动脚本中文件路径即可\ncp /usr/local/src/keepalived-1.4.0/keepalived/etc/init.d/keepalived /etc/init.d/\ncp -r ./keepalived/etc/keepalived  /etc/  #注意更新\n```\n\n\n### 启动\n``` bash\n   service keepalived start|stop|restart\n   systemctl daemon-reload\n   chkconfig keepalived on\n```\n默认的配置文件中，指定了虚拟可使用ip addr（或ip a）命令验证之。查看网卡下是否有虚拟ip\n如果虚拟ip ping不同\n1.vim /etc/keepalived/keepalived.conf\n把这个注释就可以了\nvrrp_strict\n\n2.可能上级交换机或路由器绑定了apr，也就是ip与mac地址绑定\n可以使用 arping -I [网卡名] -c 5 -s [本机IP或vip] [网关] 看一下接收情况\n\n\n\n应用\n\nkeepalived两种模式：主-备、主-主\n\n主-备\n\n`虚拟IP：192.168.0.110         主节点：192.168.0.50          备用节点：192.168.0.51`\n\n### 主配置文件\n\n   【/usr/local/keepalived/etc/keepalived/keepalived.conf】\n\n   global_defs {\n       notification_email { #指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。\n           acassen@firewall.loc\n           failover@firewall.loc\n           sysadmin@firewall.loc\n       }\n       notification_email_from Alexandre.Cassen@firewall.loc #指定发件人\n       smtp_server 127.0.0.1 #发送email的smtp地址\n       smtp_connect_timeout 30 #超时时间\n       router_id LVS_DEVEL #运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同\n       vrrp_skip_check_adv_addr\n       vrrp_strict\n       vrrp_garp_interval 0\n       vrrp_gna_interval 0\n   }\n\n   vrrp_instance VI_1 {\n       state MASTER #指定当前节点为主节点 备用节点上设置为BACKUP即可\n       interface eth0 #绑定虚拟IP的网络接口 使用ip a查看\n       virtual_router_id 51 #VRRP组名，两个节点的设置必须一样，以指明各个节点属于同一VRRP组\n       priority 100 #主节点的优先级（1-254之间），备用节点必须比主节点优先级低\n       advert_int 1\n       authentication { #设置验证信息，两个节点必须一致\n           auth_type PASS\n           auth_pass 1111\n       }\n       virtual_ipaddress { #指定虚拟IP, 两个节点设置必须一样\n           192.168.0.110/24\n       }\n   }\n\n\n### 备配置文件\n   【/usr/local/keepalived/etc/keepalived/keepalived.conf】\n\n   global_defs {\n       notification_email { #指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。\n           acassen@firewall.loc\n           failover@firewall.loc\n           sysadmin@firewall.loc\n       }\n       notification_email_from Alexandre.Cassen@firewall.loc #指定发件人\n       smtp_server 127.0.0.1 #发送email的smtp地址\n       smtp_connect_timeout 30 #超时时间\n       router_id LVS_DEVEL #运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同\n       vrrp_skip_check_adv_addr\n       vrrp_strict\n       vrrp_garp_interval 0\n       vrrp_gna_interval 0\n   }\n\n   vrrp_instance VI_1 {\n       state BACKUP #指定当前节点为主节点 备用节点上设置为BACKUP即可\n       interface eth0 #绑定虚拟IP的网络接口\n       virtual_router_id 51 #VRRP组名，两个节点的设置必须一样，以指明各个节点属于同一VRRP组\n       priority 99 #主节点的优先级（1-254之间），备用节点必须比主节点优先级低\n       advert_int 1\n       authentication { #设置验证信息，两个节点必须一致\n           auth_type PASS\n           auth_pass 1111\n       }\n       virtual_ipaddress { #指定虚拟IP, 两个节点设置必须一样\n           192.168.0.110/24\n       }\n   }\n\n\n\n\n主-主\n\n虚拟IP：192.168.1.21、192.168.1.22      A节点：192.168.1.23       B节点：192.168.1.24\n\n主备模式的缺点就是始终只有一台机器位于工作状态，另外一台机器永远是备用状态，存在资源浪费之问题。\n\n双主模式允许两台机器均处于工作状态并互相作为备份。搭建keepalived双方模式的要素：\n\n1.必须有两个虚拟IP, 分别绑定至两个节点上\n\n2.每个节点作为某个虚拟IP的主节点，并同时作为另外一个虚拟IP的备用节点。\n\n3.当某个节点产生故障时，两个虚拟IP自动绑定至正常节点上\n\n也就是说，两个节点的配置应该是交叉的，对同个虚拟IP，交叉互为主备。\n\n\n\n\n### 节点A配置文件\n\n   【/usr/local/keepalived/etc/keepalived/keepalived.conf】\n\n   global_defs {\n       notification_email { #指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。\n           acassen@firewall.loc\n           failover@firewall.loc\n           sysadmin@firewall.loc\n       }\n       notification_email_from Alexandre.Cassen@firewall.loc #指定发件人\n       smtp_server 127.0.0.1 #发送email的smtp地址\n       smtp_connect_timeout 30 #超时时间\n       router_id LVS_DEVEL #运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同\n       vrrp_skip_check_adv_addr\n       vrrp_strict\n       vrrp_garp_interval 0\n       vrrp_gna_interval 0\n   }\n\n   vrrp_instance VI_1 {\n       state MASTER\n       interface eth0\n       virtual_router_id 51 #本机两个vrrp_instance组的此值不能相同，但对应备用节点的此值必须相同\n       priority 100 #对应备用节点值应该比此值小\n       advert_int 1\n       authentication {\n           auth_type PASS\n           auth_pass 1111\n       }\n       virtual_ipaddress {\n           192.168.1.21/24\n       }\n   }\n\n   vrrp_instance VI_2 {\n       state BACKUP\n       interface eth0\n       virtual_router_id 52 #本机两个vrrp_instance组的此值不能相同，但对应备用节点的此值必须相同\n       priority 99 #主节点的值应该比此值大\n       advert_int 1\n       authentication {\n           auth_type PASS\n           auth_pass 1111\n       }\n       virtual_ipaddress {\n           192.168.1.22/24\n       }\n   }\n\n\n\n### 节点B配置文件\n   【/usr/local/keepalived/etc/keepalived/keepalived.conf】\n\n   global_defs {\n   　　　notification_email { #指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。\n   　　　　acassen@firewall.loc\n   　　　　failover@firewall.loc\n   　　　　sysadmin@firewall.loc\n   }\n   　　notification_email_from Alexandre.Cassen@firewall.loc #指定发件人\n   　　smtp_server 127.0.0.1 #发送email的smtp地址\n   　　smtp_connect_timeout 30 #超时时间\n   　　router_id LVS_DEVEL #运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同\n   　　vrrp_skip_check_adv_addr\n   　　vrrp_strict\n   　　vrrp_garp_interval 0\n   　　vrrp_gna_interval 0\n   }\n\n   vrrp_instance VI_1 {\n   　　state BACKUP\n   　　interface eth0\n   　　virtual_router_id 51 #本机两个vrrp_instance组的此值不能相同，但对应备用节点的此值必须相同\n   　　priority 99 #对应主节点值应该比此值大\n   　　advert_int 1\n   　　authentication {\n   　　　　auth_type PASS\n   　　　　auth_pass 1111\n   　　}\n   　　virtual_ipaddress {\n   　　　　192.168.1.21/24\n   　　}\n   }\n\n   vrrp_instance VI_2 {\n   　　state MASTER\n   　　interface eth0\n   　　virtual_router_id 52 #本机两个vrrp_instance组的此值不能相同，但对应备用节点的此值必须相同\n   　　priority 100 #对应备用节点的值应该比此值小\n   　　advert_int 1\n   　　authentication {\n   　　　　auth_type PASS\n   　　　　auth_pass 1111\n   　　}\n   　　virtual_ipaddress {\n   　　　　192.168.1.22/24\n   　　}\n   }\n\n\n## 问题\n\n两个节点实际都处于正常工作状态，但是无法接收到彼此的组播通知，这时两个节点均强行绑定虚拟IP，导致不可预料的后果。\n\n这时就需要设置仲裁，即每个节点必须判断自身的状态（应用服务状态及自身网络状态），要实现这两点可使用自定义shell脚本实现，通过周期性地检查自身应用服务状态，并不断ping网关（或其它可靠的参考IP）均可。当自身服务异常、或无法ping通网关，则认为自身出现故障，就应该移除掉虚拟IP(停止keepalived服务即可）。\n\n\n主要借助keepalived提供的vrrp_script及track_script实现：\n\n在keepalived的配置文件最前面加入以下代码，定义一个跟踪脚本：\n\nvrrp_script check_local { #定义一个名称为check_local的检查脚本\n　　script \"/usr/local/keepalived/bin/check_local.sh\" #shell脚本的路径\n　　interval 5 #运行间隔\n}\n\n再在vrrp_instance配置中加入以下代码使用上面定义的检测脚本：\n\ntrack_script {\n　　check_local\n}\n我们在/usr/local/keepalived/bin/check_local.sh定义的检测规则是：\n\n1. 自身web服务故障（超时，http返回状态不是200）\n\n2. 无法ping通网关\n\n3. 产生以上任何一个问题，均应该移除本机的虚拟IP(停止keepalived实例即可)\n\n\n但这里有个小问题，如果本机或是网关偶尔出现一次故障，那么我们不能认为是服务故障。更好的做法是如果连续N次检测本机服务不正常或连接N次无法ping通网关，才认为是故障产生，才需要进行故障转移。\n\n但这么做的缺点是，如果脚本检测到故障产生，并停止掉了keepalived服务，那么当故障恢复后，keepalived是无法自动恢复的。\n\n\n\n还可以利用独立的脚本以秒级的间隔检查自身服务及网关连接性，再根据故障情况控制keepalived的运行或是停止。\n\n在每个节点运行shell脚本（check_service.sh）检测本机的服务是否正常，一旦检测到服务异常时，停止掉本机的keepalived, 如此虚拟IP自动转移到备用机器之上，如每隔3秒检测一次本机服务状态，如果连接3次检测失败，则停止掉keepalived实例。同时如果本机服务是正常的，但是keepalived没有启动（故障恢复之后），则启动keepalived，以达到故障恢复之目的。\n\ncheck_service.sh文件的内容\n``` bash\n!/bin/bash\n\n   pidfile=/var/lock/subsys/`basename $0`.pid\n   if [ -f $pidfile ] && [ -e /proc/`cat $pidfile` ] ; then\n   　　exit 1\n   fi\n\n   trap \"rm -fr $pidfile ; exit 0\" 1 2 3 15\n   echo $$ > $pidfile\n\n   maxfails=3\n   fails=0\n   success=0\n\n   while [ 1 ]\n   do\n   　　/usr/bin/wget --timeout=3 --tries=1 http://127.0.0.1/ -q -O /dev/null\n   　　if [ $? -ne 0 ] ; then\n   　　　　let fails=$[$fails+1]\n   　　　　success=0\n   　　else\n   　　　　fails=0\n   　　　　let success=$[$success+1]\n   　　fi\n\n   　　if [ $fails -ge $maxfails ] ; then\n   　　　　fails=0\n   　　　　success=0\n\n   　　　　#check keepalived is running ? try to stop it\n   　　　　service keepalived status | grep running\n   　　　　if [ $? -eq 0 ] ; then\n   　　　　　　logger -is \"local service fails $maxfails times ... try to stop keepalived.\"\n   　　　　　　service keepalived stop 2>&1 | logger\n   　　　　fi\n   　　fi\n\n   　　if [ $success -gt $maxfails ] ; then\n   　　　　#check keepalived is stopped ? try to start it\n   　　　　service keepalived status | grep stopped\n   　　　　if [ $? -eq 0 ] ; then\n   　　　　　　logger -is \"service changes normal, try to start keepalived .\"\n   　　　　　　service keepalived start\n   　　　　fi\n   　　　　success=0\n   　　fi\n   　　sleep 3\n   done\n```\n\n两个节点上均应运行此脚本，请将此脚本加入到cron任务中（此程序已经作了单实例运行机制，加入计划任务的作用就是防止脚本意外中断后检测功能失效），可实现的功能：\n\n如果本地服务连续三次检测失败，就尝试停止keepalived服务（如果keepalived处于运行状态）\n\n如果本地服务连接三次检测成功，但keepalived没有启动，则启动之\n\n关键的执行点，均已经记录到系统日志中（/var/log/messages）\n\n执行crontab -e , 加入以下内容：\n\n*/1 * * * * root /home/testuser/check_local.sh\n\n\n\n停止掉本机的keepalived, 稍过一会，就会keepalived服务被自动启动了（这是因为本地服务检测正常）\n\n停止掉本机的nginx, 稍过一会，就会发现keepalived服务也被停止掉了\n\n再启动nginx, 稍过一会，发现keepalived也被正常启动，并绑定了正确的虚拟IP\n\n\n# redis\n\n## 1.下载解压安装redis\n\n### 1.1redis源文件\n将redis源文件放在目录`/usr/local/src/`下\n\n### 1.2解压redis\n移动到redis所在文件目录\n>cd /usr/local/src/\ntar -zxvf redis.tar.gz\n\n### 1.3编译安装redis\n移动到解压后reids目录\n>cd redis\nmake\n\n进入reids/src目录\nmake install\n\n\n\n## 2.Redis的部署\n安装成功后，下面对Redis 进行部署\n如果需使用tomcat来连接的话\n1.关闭安全模式\n2.设置密码\n### 2.1执行Redis-server 命令，启动Redis 服务\n\n> 注意：这里直接执行Redis-server 启动的Redis服务，是在前台直接运行的，也就是说，执行完该命令后，如果Lunix关闭当前会话，则Redis服务也随即关闭。正常情况下，启动Redis服务需要从后台启动，并且指定启动配置文件。\n3、后台启动redis服务\na)首先编辑conf文件，将daemonize属性改为yes（表明需要在后台运行）\ncd etc/\nvi redis.conf\n如果redis.conf文件不存在就从安装目录复制过去\nb)再次启动redis服务，并指定启动服务配置文件\nredis-server  /etc/redis.conf\n\n4、服务端启动成功后，启动Redis\n> `redis-cli`\n\n\n使用命令 config set requirepass admin\n为redis设置密码为admin\n输入验证密码\nauth admin\n保存密码设置信息到磁盘\nsave\n退出\nexit\n\n## 3.tomcat配置\n\n### 3.1 jar包\n    commons-logging-1.2.jar\n    commons-pool2-2.4.2.jar\n    jedis-2.9.0.jar\n    tomcat-redis-session-manager1.2.jar\n将以上4个jar包放入tomcat/lib下\n\n### 3.2 content.xml配置\n配置Tomcat的conf目录下的context.xml文件：\n\n> 1.单点Reids配置\n   ``` bash\n    <Valve className=\"com.orangefunction.tomcat.redissessions.RedisSessionHandlerValve\" />\n    <Manager className=\"com.orangefunction.tomcat.redissessions.RedisSessionManager\"\n    host=\"192.168.0.111\"\n    port=\"6379\"\n    password=\"admin\"//reids密码\n    database=\"0\"\n    maxInactiveInterval=\"60\" />\n```\n> 2.Sentinel集群配置：\n``` bash\n    <!-- Sentinel 配置 -->\n\n    <Valve className=\"reyo.redis.session.manager.tomcat8.RedisSessionHandlerValve\" />\n    <Manager className=\"reyo.redis.session.manager.tomcat8.RedisSessionManager\"\n\n    maxInactiveInterval=\"60\"\n\n    sentinelMaster=\"mymaster\"\n\n    sentinels=\"127.0.0.1:26379,127.0.0.1:26380,127.0.0.1:26381,127.0.0.1:26382\" />\n```\n案例：\n如果要监控两个redis实例，可以进行如下配置Redis安装目录下sentinel.conf文件：\n常规配置：\n``` bash\n    port 26379\n    daemonize yes\n    logfile \"/var/log/redis/sentinel.log\"\n\n    #master 7000\n    sentinel monitor master1 127.0.0.1 7000 2                #配置master名、ip、port、需要多少个sentinel才能判断[客观下线]（2）\n    sentinel down-after-milliseconds master-7000 30000      #配置sentinel向master发出ping，最大响应时间、超过则认为主观下线\n    sentinel parallel-syncs master-7000 1                   #配置在进行故障转移时，运行多少个slave进行数据备份同步(越少速度越快)\n    sentinel failover-timeout master-7000 180000            #配置当出现failover时下一个sentinel与上一个sentinel对[同一个master监测的时间间隔](最后设置为客观下线)\n\n    #master 7001\n    sentinel monitor master2 127.0.0.1 7001 1\n    sentinel down-after-milliseconds master-7001 30000\n    sentinel parallel-syncs master-7001 1\n    sentinel failover-timeout master-7001 180000\n```\n\n特殊配置：\n`min-slaves-to-write 1`\n`min-slaves-max-lag 10`\n通过上面的配置，当一个redis是master时，如果它不能向至少一个slave写数据(上面的min-slaves-to-write指定了slave的数量)，它将会拒绝接受客户端的写请求。由于复制是异步的，master无法向slave写数据意味着slave要么断开连接了，要么不在指定时间内向master发送同步数据的请求了(上面的min-slaves-max-lag指定了这个时间)。\n\n### 配置Redis能随系统启动:\n./utils/install_server.sh\n\n### Redis服务查看、开启、关闭:\na.通过ps -ef|grep redis命令查看Redis进程\nb.开启Redis服务操作通过/etc/init.d/redis_6379 start命令，也可通过（service redis_6379 start）\nc.关闭Redis服务操作通过/etc/init.d/redis_6379 stop命令，也可通过（service redis_6379 stop）\n\n# Postgres-XL\n\n## centos7安装：\n\n### 在所有主机上安装Postgres-XL\n\n#### 在每台机器的 /etc/hosts中加入以下内容：\n``` bash\n192.168.0.50 gtm\n192.168.0.51 gtm-bc\n192.168.0.120 datanode1\n192.168.0.121 datanode2\n```\n#### 关闭防火墙：\n``` bash\nsystemctl stop firewalld\nsystemctl disable firewalld\n```\n#### selinux设置\n``` bash\nsetenforce 0\nsed -i \"s/SELINUX=enforcing/SELINUX=disabled/\" /etc/selinux/config\n```\n#### 安装依赖包:\n``` bash\nyum -y install epel-release\nyum -y install lbzip2 gcc readline-devel zlib-devel flex\n```\n#### 新建用户\n> 每个节点都建立用户postgres，并且建立.ssh目录，并配置相应的root权限：\n\n``` bash\n[root@localhost ~]# useradd postgres\n[root@localhost ~]# passwd postgres\n[root@localhost ~]# su - postgres\n[root@localhost ~]# mkdir ~/.ssh\n[root@localhost ~]# chmod 700 ~/.ssh\n```\n#### ssh免密码登录(`只在gtm下做`)\n\n> 仅仅在`gtm`节点配置如下操作：\n\n``` bash\n[root@localhost ~]# su - postgres\n[postgres@localhost ~]# ssh-keygen -t rsa\n[postgres@localhost ~]# cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys\n[postgres@localhost ~]# chmod 600 ~/.ssh/authorized_keys\n```\n> 对所有提示都不要输入，直接enter下一步。\n\n> 将刚生成的认证文件拷贝到datanode1到datanode2中，使得gtm节点可以免密码登录datanode1~datanode2的任意一个节点：\n\n\n``` bash\n[postgres@localhost ~]# scp ~/.ssh/authorized_keys postgres@datanode1:~/.ssh/\n[postgres@localhost ~]# scp ~/.ssh/authorized_keys postgres@datanode2:~/.ssh/\n```\n\n> <mark>这里会提示如下内容 输入yes</mark>后会提示让你输入远程用户密码\n\n``` bash\nThe authenticity of host 'datanode1 (192.168.0.120)' can't be established.\nECDSA key fingerprint is f9:ad:48:ab:a8:b6:81:5b:e0:6f:75:e5:xx:xx:xx:xx.\nAre you sure you want to continue connecting (yes/no)? yes\n\n```\n#### Postgres-XL安装(每台服务器都要操作)\n\n``` bash\ncd /usr/local/src\ntar -zxvf  postgres-xl\ncd postgres-xl\n./configure\nmake && make install\ncd contrib/\nmake && make install\n```\n> cortrib中有很多postgres很牛的工具，一般要装上。如ltree,uuid,postgres_fdw等等。\n\n#### 配置环境变量\n\n进入postgres用户，修改其环境变量\n``` bash\nsu - postgres\nvi .bashrc\n```\n在打开的文件末尾，新增如下变量配置：\n\n``` js\nexport PGHOME=/usr/local/pgsql\nexport PGUSER=postgres\nexport LD_LIBRARY_PATH=$PGHOME/lib\nexport PATH=$PGHOME/bin:$PATH\n```\n\n 按住esc，然后输入:wq!保存退出\n\n 输入以下命令对更改重启生效:\n `source .bashrc`\n\n 检查配置是否已修改\n ``` bash\n [postgres@localhost ~]$ echo $PGHOME\n /usr/local/pgsql\n ```\n\n 检查ssh免密访问是否配置成功\n ``` bash\n    [root@gtm ~]# ssh datanode1\n    [root@datanode1 ~]# exit\n    logout\n    Connection to datanode1 closed.\n\n    [root@gtm ~]# ssh datanode2\n    [root@datanode2 ~]# exit\n    logout\n    Connection to datanode2 closed.\n ```\n\n#### 修改文件夹所有者\n将/home/postgres下所有文件的所有者变更为postgres用户\n`[root@gtm ~]# chown -R postgres /home/postgres`\n\n\n#### 生成pgxc_ctl配置文件(`只在gtm下做`)\n\n在/usr/local/src/postgres-xl/contrib/pgxc_ctl目录下\n运行命令\n\n`./pgxc_ctl`后进入操作界面后输入prepare之后使用Crtl+c退出PGXC操作界面\n\n``` bash\n[postgres@localhost ~]$ pgxc_ctl\n/bin/bash\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nERROR: File \"/home/postgres/pgxc_ctl/pgxc_ctl.conf\" not found or not a regular file. No such file or directory\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /home/postgres/pgxc_ctl\nPGXC prepare\nPGXC ^C\n\n```\n\n#### 编辑pgxc_ctl.conf文件\n`[postgres@localhost ~]$ vim /home/postgres/pgxc_ctl/pgxc_ctl.conf`\n\n\n#### 配置内容如下：\n``` bash\n#!/usr/bin/env bash\n#\n# Postgres-XC Configuration file for pgxc_ctl utility.\n#\n# Configuration file can be specified as -c option from pgxc_ctl command.   Default is\n# $PGXC_CTL_HOME/pgxc_ctl.org.\n#\n# This is bash script so you can make any addition for your convenience to configure\n# your Postgres-XC cluster.\n#\n# Please understand that pgxc_ctl provides only a subset of configuration which pgxc_ctl\n# provide.  Here's several several assumptions/restrictions pgxc_ctl depends on.\n#\n# 1) All the resources of pgxc nodes has to be owned by the same user.   Same user means\n#    user with the same user name.  User ID may be different from server to server.\n#    This must be specified as a variable $pgxcOwner.\n#\n# 2) All the servers must be reacheable via ssh without password.   It is highly recommended\n#    to setup key-based authentication among all the servers.\n#\n# 3) All the databases in coordinator/datanode has at least one same superuser.  Pgxc_ctl\n#    uses this user to connect to coordinators and datanodes.   Again, no password should\n#    be used to connect.  You have many options to do this, pg_hba.conf, pg_ident.conf and\n#    others.  Pgxc_ctl provides a way to configure pg_hba.conf but not pg_ident.conf.   This\n#    will be implemented in the later releases.\n#\n# 4) Gtm master and slave can have different port to listen, while coordinator and datanode\n#    slave should be assigned the same port number as master.\n#\n# 5) Port nuber of a coordinator slave must be the same as its master.\n#\n# 6) Master and slave are connected using synchronous replication.  Asynchronous replication\n#    have slight (almost none) chance to bring total cluster into inconsistent state.\n#    This chance is very low and may be negligible.  Support of asynchronous replication\n#    may be supported in the later release.\n#\n# 7) Each coordinator and datanode can have only one slave each.  Cascaded replication and\n#    multiple slave are not supported in the current pgxc_ctl.\n#\n# 8) Killing nodes may end up with IPC resource leak, such as semafor and shared memory.\n#    Only listening port (socket) will be cleaned with clean command.\n#\n# 9) Backup and restore are not supported in pgxc_ctl at present.   This is a big task and\n#    may need considerable resource.\n#\n#========================================================================================\n#\n#\n# pgxcInstallDir variable is needed if you invoke \"deploy\" command from pgxc_ctl utility.\n# If don't you don't need this variable.\npgxcInstallDir=$HOME\npgxlDATA=$HOME/data\n#---- OVERALL -----------------------------------------------------------------------------\n#\npgxcOwner=postgres\t\t\t# owner of the Postgres-XC databaseo cluster.  Here, we use this\n\t\t\t\t\t\t# both as linus user and database user.  This must be\n\t\t\t\t\t\t# the super user of each coordinator and datanode.\npgxcUser=$pgxcOwner\t\t# OS user of Postgres-XC owner\n\ntmpDir=/tmp\t\t\t\t\t# temporary dir used in XC servers\nlocalTmpDir=$tmpDir\t\t\t# temporary dir used here locally\n\nconfigBackup=n\t\t\t\t\t# If you want config file backup, specify y to this value.\nconfigBackupHost=pgxc-linker\t# host to backup config file\nconfigBackupDir=$HOME/pgxc\t\t# Backup directory\nconfigBackupFile=pgxc_ctl.bak\t# Backup file name --> Need to synchronize when original changed.\n\n#---- GTM ------------------------------------------------------------------------------------\n\n# GTM is mandatory.  You must have at least (and only) one GTM master in your Postgres-XC cluster.\n# If GTM crashes and you need to reconfigure it, you can do it by pgxc_update_gtm command to update\n# GTM master with others.   Of course, we provide pgxc_remove_gtm command to remove it.  This command\n# will not stop the current GTM.  It is up to the operator.\n\n\n#---- GTM Master -----------------------------------------------\n\n#---- Overall ----\ngtmName=gtm\ngtmMasterServer=gtm\ngtmMasterPort=6666\ngtmMasterDir=$pgxlDATA/nodes/gtm\n\n#---- Configuration ---\ngtmExtraConfig=none\t\t\t# Will be added gtm.conf for both Master and Slave (done at initilization only)\ngtmMasterSpecificExtraConfig=none\t# Will be added to Master's gtm.conf (done at initialization only)\n\n#---- GTM Slave -----------------------------------------------\n\n# Because GTM is a key component to maintain database consistency, you may want to configure GTM slave\n# for backup.\n\n#---- Overall ------\ngtmSlave=n\t\t\t\t\t# Specify y if you configure GTM Slave.   Otherwise, GTM slave will not be configured and\n\t\t\t\t\t\t\t# all the following variables will be reset.\ngtmSlaveName=gtmSlave\ngtmSlaveServer=gtm-bc\t\t# value none means GTM slave is not available.  Give none if you don't configure GTM Slave.\ngtmSlavePort=20001\t\t\t# Not used if you don't configure GTM slave.\ngtmSlaveDir=$pgxlDATA/nodes/gtmSlave\t# Not used if you don't configure GTM slave.\n# Please note that when you have GTM failover, then there will be no slave available until you configure the slave\n# again. (pgxc_add_gtm_slave function will handle it)\n\n#---- Configuration ----\ngtmSlaveSpecificExtraConfig=none # Will be added to Slave's gtm.conf (done at initialization only)\n\n#---- GTM Proxy -------------------------------------------------------------------------------------------------------\n# GTM proxy will be selected based upon which server each component runs on.\n# When fails over to the slave, the slave inherits its master's gtm proxy.  It should be\n# reconfigured based upon the new location.\n#\n# To do so, slave should be restarted.   So pg_ctl promote -> (edit postgresql.conf and recovery.conf) -> pg_ctl restart\n#\n# You don't have to configure GTM Proxy if you dont' configure GTM slave or you are happy if every component connects\n# to GTM Master directly.  If you configure GTL slave, you must configure GTM proxy too.\n\n#---- Shortcuts ------\ngtmProxyDir=$pgxlDATA/nodes/gtm_pxy\n\n#---- Overall -------\ngtmProxy=n\t\t\t\t# Specify y if you conifugre at least one GTM proxy.   You may not configure gtm proxies\n\t\t\t\t\t\t# only when you dont' configure GTM slaves.\n\t\t\t\t\t\t# If you specify this value not to y, the following parameters will be set to default empty values.\n\t\t\t\t\t\t# If we find there're no valid Proxy server names (means, every servers are specified\n\t\t\t\t\t\t# as none), then gtmProxy value will be set to \"n\" and all the entries will be set to\n\t\t\t\t\t\t# empty values.\ngtmProxyNames=(gtm_pxy1 gtm_pxy2)\t# No used if it is not configured\ngtmProxyServers=(datanode1 datanode2)\t\t\t# Specify none if you dont' configure it.\ngtmProxyPorts=(6666 6666)\t\t\t\t# Not used if it is not configured.\ngtmProxyDirs=($gtmProxyDir $gtmProxyDir)\t# Not used if it is not configured.\n\n#---- Configuration ----\ngtmPxyExtraConfig=none\t\t# Extra configuration parameter for gtm_proxy.  Coordinator section has an example.\ngtmPxySpecificExtraConfig=(none none none none)\n\n#---- Coordinators ----------------------------------------------------------------------------------------------------\n\n#---- shortcuts ----------\ncoordMasterDir=$pgxlDATA/nodes/coord\ncoordSlaveDir=$HOME/pgxc/nodes/coord_slave\ncoordArchLogDir=$HOME/pgxc/nodes/coord_archlog\n\n#---- Overall ------------\ncoordNames=(coord1 coord2)\t\t# Master and slave use the same name\ncoordPorts=(5432 5432)\t\t\t# Master ports\npoolerPorts=(6667 6667)\t\t\t# Master pooler ports\ncoordPgHbaEntries=(0.0.0.0/0)\t\t\t\t# Assumes that all the coordinator (master/slave) accepts\n\t\t\t\t\t\t\t\t\t\t\t\t# the same connection\n\t\t\t\t\t\t\t\t\t\t\t\t# This entry allows only $pgxcOwner to connect.\n\t\t\t\t\t\t\t\t\t\t\t\t# If you'd like to setup another connection, you should\n\t\t\t\t\t\t\t\t\t\t\t\t# supply these entries through files specified below.\n# Note: The above parameter is extracted as \"host all all 0.0.0.0/0 trust\".   If you don't want\n# such setups, specify the value () to this variable and suplly what you want using coordExtraPgHba\n# and/or coordSpecificExtraPgHba variables.\n#coordPgHbaEntries=(::1/128)\t# Same as above but for IPv6 addresses\n\n#---- Master -------------\ncoordMasterServers=(datanode1 datanode2)\t\t# none means this master is not available\ncoordMasterDirs=($coordMasterDir $coordMasterDir)\ncoordMaxWALsernder=0\t# max_wal_senders: needed to configure slave. If zero value is specified,\n\t\t\t\t\t\t# it is expected to supply this parameter explicitly by external files\n\t\t\t\t\t\t# specified in the following.\tIf you don't configure slaves, leave this value to zero.\ncoordMaxWALSenders=($coordMaxWALsernder $coordMaxWALsernder)\n\t\t\t\t\t\t# max_wal_senders configuration for each coordinator.\n\n#---- Slave -------------\ncoordSlave=n\t\t\t# Specify y if you configure at least one coordiantor slave.  Otherwise, the following\n\t\t\t\t\t\t# configuration parameters will be set to empty values.\n\t\t\t\t\t\t# If no effective server names are found (that is, every servers are specified as none),\n\t\t\t\t\t\t# then coordSlave value will be set to n and all the following values will be set to\n\t\t\t\t\t\t# empty values.\ncoordSlaveSync=y\t\t# Specify to connect with synchronized mode.\ncoordSlaveServers=(node07 node08 node09 node06)\t\t\t# none means this slave is not available\ncoordSlavePorts=(20004 20005 20004 20005)\t\t\t# Master ports\ncoordSlavePoolerPorts=(20010 20011 20010 20011)\t\t\t# Master pooler ports\ncoordSlaveDirs=($coordSlaveDir $coordSlaveDir $coordSlaveDir $coordSlaveDir)\ncoordArchLogDirs=($coordArchLogDir $coordArchLogDir $coordArchLogDir $coordArchLogDir)\n\n#---- Configuration files---\n# Need these when you'd like setup specific non-default configuration\n# These files will go to corresponding files for the master.\n# You may supply your bash script to setup extra config lines and extra pg_hba.conf entries\n# Or you may supply these files manually.\ncoordExtraConfig=coordExtraConfig\t# Extra configuration file for coordinators.\n\t\t\t\t\t\t# This file will be added to all the coordinators'\n\t\t\t\t\t\t# postgresql.conf\n# Pleae note that the following sets up minimum parameters which you may want to change.\n# You can put your postgresql.conf lines here.\ncat > $coordExtraConfig <<EOF\n#================================================\n# Added to all the coordinator postgresql.conf\n# Original: $coordExtraConfig\nlog_destination = 'stderr'\nlogging_collector = on\nlog_directory = 'pg_log'\nlisten_addresses = '*'\nmax_connections = 100\nEOF\n\n# Additional Configuration file for specific coordinator master.\n# You can define each setting by similar means as above.\ncoordSpecificExtraConfig=(none none none none)\ncoordExtraPgHba=none\t# Extra entry for pg_hba.conf.  This file will be added to all the coordinators' pg_hba.conf\ncoordSpecificExtraPgHba=(none none none none)\n\n#----- Additional Slaves -----\n#\n# Please note that this section is just a suggestion how we extend the configuration for\n# multiple and cascaded replication.   They're not used in the current version.\n#\ncoordAdditionalSlaves=n\t\t# Additional slave can be specified as follows: where you\ncoordAdditionalSlaveSet=(cad1)\t\t# Each specifies set of slaves.   This case, two set of slaves are\n\t\t\t\t\t\t\t\t\t\t\t# configured\ncad1_Sync=n\t\t  \t\t# All the slaves at \"cad1\" are connected with asynchronous mode.\n\t\t\t\t\t\t\t# If not, specify \"y\"\n\t\t\t\t\t\t\t# The following lines specifies detailed configuration for each\n\t\t\t\t\t\t\t# slave tag, cad1.  You can define cad2 similarly.\ncad1_Servers=(node08 node09 node06 node07)\t# Hosts\ncad1_dir=$HOME/pgxc/nodes/coord_slave_cad1\ncad1_Dirs=($cad1_dir $cad1_dir $cad1_dir $cad1_dir)\ncad1_ArchLogDir=$HOME/pgxc/nodes/coord_archlog_cad1\ncad1_ArchLogDirs=($cad1_ArchLogDir $cad1_ArchLogDir $cad1_ArchLogDir $cad1_ArchLogDir)\n\n\n#---- Datanodes -------------------------------------------------------------------------------------------------------\n\n#---- Shortcuts --------------\ndatanodeMasterDir=$pgxlDATA/nodes/dn_master\ndatanodeSlaveDir=$HOME/pgxc/nodes/dn_slave\ndatanodeArchLogDir=$HOME/pgxc/nodes/datanode_archlog\n\n#---- Overall ---------------\n#primaryDatanode=datanode1\t\t\t\t# Primary Node.\n# At present, xc has a priblem to issue ALTER NODE against the primay node.  Until it is fixed, the test will be done\n# without this feature.\nprimaryDatanode=node1\t\t\t\t# Primary Node.\ndatanodeNames=(node1 node2)\ndatanodePorts=(5433 5433)\t# Master ports\ndatanodePoolerPorts=(6668 6668)\t# Master pooler ports\ndatanodePgHbaEntries=(0.0.0.0/0)\t# Assumes that all the coordinator (master/slave) accepts\n\t\t\t\t\t\t\t\t\t\t# the same connection\n\t\t\t\t\t\t\t\t\t\t# This list sets up pg_hba.conf for $pgxcOwner user.\n\t\t\t\t\t\t\t\t\t\t# If you'd like to setup other entries, supply them\n\t\t\t\t\t\t\t\t\t\t# through extra configuration files specified below.\n# Note: The above parameter is extracted as \"host all all 0.0.0.0/0 trust\".   If you don't want\n# such setups, specify the value () to this variable and suplly what you want using datanodeExtraPgHba\n# and/or datanodeSpecificExtraPgHba variables.\n#datanodePgHbaEntries=(::1/128)\t# Same as above but for IPv6 addresses\n\n#---- Master ----------------\ndatanodeMasterServers=(datanode1 datanode2)\t# none means this master is not available.\n\t\t\t\t\t\t\t\t\t\t\t\t\t# This means that there should be the master but is down.\n\t\t\t\t\t\t\t\t\t\t\t\t\t# The cluster is not operational until the master is\n\t\t\t\t\t\t\t\t\t\t\t\t\t# recovered and ready to run.\ndatanodeMasterDirs=($datanodeMasterDir $datanodeMasterDir)\ndatanodeMaxWalSender=4\t\t\t\t\t\t\t\t# max_wal_senders: needed to configure slave. If zero value is\n\t\t\t\t\t\t\t\t\t\t\t\t\t# specified, it is expected this parameter is explicitly supplied\n\t\t\t\t\t\t\t\t\t\t\t\t\t# by external configuration files.\n\t\t\t\t\t\t\t\t\t\t\t\t\t# If you don't configure slaves, leave this value zero.\ndatanodeMaxWALSenders=($datanodeMaxWalSender $datanodeMaxWalSender)\n\t\t\t\t\t\t# max_wal_senders configuration for each datanode\n\n#---- Slave -----------------\ndatanodeSlave=n\t\t\t# Specify y if you configure at least one coordiantor slave.  Otherwise, the following\n\t\t\t\t\t\t# configuration parameters will be set to empty values.\n\t\t\t\t\t\t# If no effective server names are found (that is, every servers are specified as none),\n\t\t\t\t\t\t# then datanodeSlave value will be set to n and all the following values will be set to\n\t\t\t\t\t\t# empty values.\ndatanodeSlaveServers=(datanode2 datanode1)\t# value none means this slave is not available\ndatanodeSlavePorts=(15433 15433)\t# value none means this slave is not available\ndatanodeSlavePoolerPorts=(20012 20012)\t# value none means this slave is not available\ndatanodeSlaveSync=y\t\t# If datanode slave is connected in synchronized mode\ndatanodeSlaveDirs=($datanodeSlaveDir $datanodeSlaveDir)\ndatanodeArchLogDirs=( $datanodeArchLogDir $datanodeArchLogDir )\n\n# ---- Configuration files ---\n# You may supply your bash script to setup extra config lines and extra pg_hba.conf entries here.\n# These files will go to corresponding files for the master.\n# Or you may supply these files manually.\ndatanodeExtraConfig=none\t# Extra configuration file for datanodes.  This file will be added to all the\n\t\t\t\t\t\t\t# datanodes' postgresql.conf\ndatanodeSpecificExtraConfig=(none none none none)\ndatanodeExtraPgHba=none\t\t# Extra entry for pg_hba.conf.  This file will be added to all the datanodes' postgresql.conf\ndatanodeSpecificExtraPgHba=(none none none none)\n\n#----- Additional Slaves -----\ndatanodeAdditionalSlaves=n\t# Additional slave can be specified as follows: where you\n# datanodeAdditionalSlaveSet=(dad1 dad2)\t\t# Each specifies set of slaves.   This case, two set of slaves are\n\t\t\t\t\t\t\t\t\t\t\t# configured\n# dad1_Sync=n\t\t  \t\t# All the slaves at \"cad1\" are connected with asynchronous mode.\n\t\t\t\t\t\t\t# If not, specify \"y\"\n\t\t\t\t\t\t\t# The following lines specifies detailed configuration for each\n\t\t\t\t\t\t\t# slave tag, cad1.  You can define cad2 similarly.\n# dad1_Servers=(node08 node09 node06 node07)\t# Hosts\n# dad1_dir=$HOME/pgxc/nodes/coord_slave_cad1\n# dad1_Dirs=($cad1_dir $cad1_dir $cad1_dir $cad1_dir)\n# dad1_ArchLogDir=$HOME/pgxc/nodes/coord_archlog_cad1\n# dad1_ArchLogDirs=($cad1_ArchLogDir $cad1_ArchLogDir $cad1_ArchLogDir $cad1_ArchLogDir)\n\n#---- WAL archives -------------------------------------------------------------------------------------------------\nwalArchive=n\t# If you'd like to configure WAL archive, edit this section.\n\t\t\t\t# Pgxc_ctl assumes that if you configure WAL archive, you configure it\n\t\t\t\t# for all the coordinators and datanodes.\n\t\t\t\t# Default is \"no\".   Please specify \"y\" here to turn it on.\n#\n#\t\tEnd of Configuration Section\n#\n#==========================================================================================================================\n\n#========================================================================================================================\n# The following is for extension.  Just demonstrate how to write such extension.  There's no code\n# which takes care of them so please ignore the following lines.  They are simply ignored by pgxc_ctl.\n# No side effects.\n#=============<< Beginning of future extension demonistration >> ========================================================\n# You can setup more than one backup set for various purposes, such as disaster recovery.\nwalArchiveSet=(war1 war2)\nwar1_source=(master)\t# you can specify master, slave or ano other additional slaves as a source of WAL archive.\n\t\t\t\t\t# Default is the master\nwal1_source=(slave)\nwal1_source=(additiona_coordinator_slave_set additional_datanode_slave_set)\nwar1_host=node10\t# All the nodes are backed up at the same host for a given archive set\nwar1_backupdir=$HOME/pgxc/backup_war1\nwal2_source=(master)\nwar2_host=node11\nwar2_backupdir=$HOME/pgxc/backup_war2\n#=============<< End of future extension demonistration >> ========================================================\n\n```\n\n#### 初始化集群\n`pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf init all`启动\n`pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf stop all`关闭\n\n初始化提示内容如下：\n``` bash\n[postgres@localhost ~]$ pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf init all\n/bin/bash\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /home/postgres/pgxc_ctl\nInitialize GTM master\nThe authenticity of host 'gtm (192.168.230.143)' can't be established.\nECDSA key fingerprint is cd:7e:a2:7d:9b:a9:13:10:96:e9:a4:1a:30:ab:ed:a6.\nAre you sure you want to continue connecting (yes/no)? yes\nmkdir: cannot create directory ‘/home/postgres/pgxl/data’: Permission denied\nThe files belonging to this GTM system will be owned by user \"postgres\".\nThis user must also own the server process.\n\n\ncreating directory /home/postgres/pgxl/data/nodes/gtm ... initgtm: could not create directory \"/home/postgres/pgxl/data\": Permission denied\nbash: /home/postgres/pgxl/data/nodes/gtm/gtm.conf: No such file or directory\ngtm cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtm/gtm.conf\": No such file or directory\ngtm_ctl: PID file \"/home/postgres/pgxl/data/nodes/gtm/gtm.pid\" does not exist\nIs server running?\nDone.\nStart GTM master\nserver starting\ngtm cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtm/gtm.conf\": No such file or directory\nInitialize GTM slave\nmkdir: cannot create directory ‘/home/postgres/pgxl/data’: Permission denied\nThe files belonging to this GTM system will be owned by user \"postgres\".\nThis user must also own the server process.\n\n\ncreating directory /home/postgres/pgxl/data/nodes/gtmSlave ... initgtm: could not create directory \"/home/postgres/pgxl/data\": Permission denied\nbash: /home/postgres/pgxl/data/nodes/gtmSlave/gtm.conf: No such file or directory\nDone.\nStart GTM slaveserver starting\ngtm cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtmSlave/gtm.conf\": No such file or directory\nDone.\nInitialize all the gtm proxies.\nInitializing gtm proxy gtm_pxy1.\nInitializing gtm proxy gtm_pxy2.\nmkdir: cannot create directory ‘/home/postgres/pgxl/data’: Permission denied\nThe files belonging to this GTM system will be owned by user \"postgres\".\nThis user must also own the server process.\n\n\ncreating directory /home/postgres/pgxl/data/nodes/gtm_pxy ... initgtm: could not create directory \"/home/postgres/pgxl/data\": Permission denied\nbash: /home/postgres/pgxl/data/nodes/gtm_pxy/gtm_proxy.conf: No such file or directory\nmkdir: cannot create directory ‘/home/postgres/pgxl/data’: Permission denied\nThe files belonging to this GTM system will be owned by user \"postgres\".\nThis user must also own the server process.\n\n\ncreating directory /home/postgres/pgxl/data/nodes/gtm_pxy ... initgtm: could not create directory \"/home/postgres/pgxl/data\": Permission denied\nbash: /home/postgres/pgxl/data/nodes/gtm_pxy/gtm_proxy.conf: No such file or directory\nDone.\nStarting all the gtm proxies.\nStarting gtm proxy gtm_pxy1.\nStarting gtm proxy gtm_pxy2.\nserver starting\ngtm_proxy cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtm_pxy/gtm_proxy.conf\": No such file or directory\nserver starting\ngtm_proxy cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtm_pxy/gtm_proxy.conf\": No such file or directory\nDone.\nInitialize all the coordinator masters.\nInitialize coordinator master coord1.\nInitialize coordinator master coord2.\n\n[postgres@gtm ~]$ pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf init all\n/bin/bash\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /home/postgres/pgxc_ctl\nInitialize GTM master\nERROR: target directory (/home/postgres/pgxl/data/nodes/gtm) exists and not empty. Skip GTM initilialization\n1:4221830976:2017-10-26 02:15:06.915 PDT -FATAL:  lock file \"gtm.pid\" already exists\n2:4221830976:2017-10-26 02:15:06.915 PDT -HINT:  Is another GTM (PID 14702) running in data directory \"/home/postgres/pgxl/data/nodes/gtm\"?\nLOCATION:  CreateLockFile, main.c:2099\nwaiting for server to shut down.... done\nserver stopped\nDone.\nStart GTM master\nserver starting\nInitialize GTM slave\nwaiting for server to shut down.... done\nserver stopped\nThe files belonging to this GTM system will be owned by user \"postgres\".\nThis user must also own the server process.\n\n\nfixing permissions on existing directory /home/postgres/pgxl/data/nodes/gtmSlave ... ok\ncreating configuration files ... ok\ncreating control file ... ok\n\nSuccess.\nDone.\nStart GTM slaveserver starting\nDone.\nInitialize all the gtm proxies.\nInitializing gtm proxy gtm_pxy1.\nInitializing gtm proxy gtm_pxy2.\nThe files belonging to this GTM system will be owned by user \"postgres\".\nThis user must also own the server process.\n\n\nfixing permissions on existing directory /home/postgres/pgxl/data/nodes/gtm_pxy ... ok\ncreating configuration files ... ok\n\nSuccess.\nThe files belonging to this GTM system will be owned by user \"postgres\".\nThis user must also own the server process.\n\n\nfixing permissions on existing directory /home/postgres/pgxl/data/nodes/gtm_pxy ... ok\ncreating configuration files ... ok\n\nSuccess.\nDone.\nStarting all the gtm proxies.\nStarting gtm proxy gtm_pxy1.\nStarting gtm proxy gtm_pxy2.\nserver starting\nserver starting\nDone.\nInitialize all the coordinator masters.\nInitialize coordinator master coord1.\nInitialize coordinator master coord2.\nThe files belonging to this database system will be owned by user \"postgres\".\nThis user must also own the server process.\n\nThe database cluster will be initialized with locale \"en_US.UTF-8\".\nThe default database encoding has accordingly been set to \"UTF8\".\nThe default text search configuration will be set to \"english\".\n\nData page checksums are disabled.\n\nfixing permissions on existing directory /home/postgres/pgxl/data/nodes/coord ... ok\ncreating subdirectories ... ok\nselecting default max_connections ... 100\nselecting default shared_buffers ... 128MB\nselecting dynamic shared memory implementation ... posix\ncreating configuration files ... ok\nrunning bootstrap script ... ok\nperforming post-bootstrap initialization ... creating cluster information ... ok\nsyncing data to disk ... ok\nfreezing database template0 ... ok\nfreezing database template1 ... ok\nfreezing database postgres ... ok\n\nWARNING: enabling \"trust\" authentication for local connections\nYou can change this by editing pg_hba.conf or using the option -A, or\n--auth-local and --auth-host, the next time you run initdb.\n\nSuccess.\nThe files belonging to this database system will be owned by user \"postgres\".\nThis user must also own the server process.\n\nThe database cluster will be initialized with locale \"en_US.UTF-8\".\nThe default database encoding has accordingly been set to \"UTF8\".\nThe default text search configuration will be set to \"english\".\n\nData page checksums are disabled.\n\nfixing permissions on existing directory /home/postgres/pgxl/data/nodes/coord ... ok\ncreating subdirectories ... ok\nselecting default max_connections ... 100\nselecting default shared_buffers ... 128MB\nselecting dynamic shared memory implementation ... posix\ncreating configuration files ... ok\nrunning bootstrap script ... ok\nperforming post-bootstrap initialization ... creating cluster information ... ok\nsyncing data to disk ... ok\nfreezing database template0 ... ok\nfreezing database template1 ... ok\nfreezing database postgres ... ok\n\nWARNING: enabling \"trust\" authentication for local connections\nYou can change this by editing pg_hba.conf or using the option -A, or\n--auth-local and --auth-host, the next time you run initdb.\n\nSuccess.\nDone.\nStarting coordinator master.\nStarting coordinator master coord1\nStarting coordinator master coord2\n2017-10-26 02:15:25.296 PDT [15951] LOG:  listening on IPv4 address \"0.0.0.0\", port 5432\n2017-10-26 02:15:25.296 PDT [15951] LOG:  listening on IPv6 address \"::\", port 5432\n2017-10-26 02:15:25.297 PDT [15951] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5432\"\n2017-10-26 02:15:25.304 PDT [15951] LOG:  redirecting log output to logging collector process\n2017-10-26 02:15:25.304 PDT [15951] HINT:  Future log output will appear in directory \"pg_log\".\n2017-10-26 02:15:25.321 PDT [15847] LOG:  listening on IPv4 address \"0.0.0.0\", port 5432\n2017-10-26 02:15:25.321 PDT [15847] LOG:  listening on IPv6 address \"::\", port 5432\n2017-10-26 02:15:25.323 PDT [15847] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5432\"\n2017-10-26 02:15:25.330 PDT [15847] LOG:  redirecting log output to logging collector process\n2017-10-26 02:15:25.330 PDT [15847] HINT:  Future log output will appear in directory \"pg_log\".\nDone.\nInitialize all the datanode masters.\nInitialize the datanode master node1.\nInitialize the datanode master node2.\nThe files belonging to this database system will be owned by user \"postgres\".\nThis user must also own the server process.\n\nThe database cluster will be initialized with locale \"en_US.UTF-8\".\nThe default database encoding has accordingly been set to \"UTF8\".\nThe default text search configuration will be set to \"english\".\n\nData page checksums are disabled.\n\nfixing permissions on existing directory /home/postgres/pgxl/data/nodes/dn_master ... ok\ncreating subdirectories ... ok\nselecting default max_connections ... 100\nselecting default shared_buffers ... 128MB\nselecting dynamic shared memory implementation ... posix\ncreating configuration files ... ok\nrunning bootstrap script ... ok\nperforming post-bootstrap initialization ... creating cluster information ... ok\nsyncing data to disk ... ok\nfreezing database template0 ... ok\nfreezing database template1 ... ok\nfreezing database postgres ... ok\n\nWARNING: enabling \"trust\" authentication for local connections\nYou can change this by editing pg_hba.conf or using the option -A, or\n--auth-local and --auth-host, the next time you run initdb.\n\nSuccess.\nThe files belonging to this database system will be owned by user \"postgres\".\nThis user must also own the server process.\n\nThe database cluster will be initialized with locale \"en_US.UTF-8\".\nThe default database encoding has accordingly been set to \"UTF8\".\nThe default text search configuration will be set to \"english\".\n\nData page checksums are disabled.\n\nfixing permissions on existing directory /home/postgres/pgxl/data/nodes/dn_master ... ok\ncreating subdirectories ... ok\nselecting default max_connections ... 100\nselecting default shared_buffers ... 128MB\nselecting dynamic shared memory implementation ... posix\ncreating configuration files ... ok\nrunning bootstrap script ... ok\nperforming post-bootstrap initialization ... creating cluster information ... ok\nsyncing data to disk ... ok\nfreezing database template0 ... ok\nfreezing database template1 ... ok\nfreezing database postgres ... ok\n\nWARNING: enabling \"trust\" authentication for local connections\nYou can change this by editing pg_hba.conf or using the option -A, or\n--auth-local and --auth-host, the next time you run initdb.\n\nSuccess.\nDone.\nStarting all the datanode masters.\nStarting datanode master node1.\nStarting datanode master node2.\n2017-10-26 02:15:32.075 PDT [16427] LOG:  listening on IPv4 address \"0.0.0.0\", port 5433\n2017-10-26 02:15:32.075 PDT [16427] LOG:  listening on IPv6 address \"::\", port 5433\n2017-10-26 02:15:32.077 PDT [16427] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5433\"\n2017-10-26 02:15:32.083 PDT [16427] LOG:  redirecting log output to logging collector process\n2017-10-26 02:15:32.083 PDT [16427] HINT:  Future log output will appear in directory \"pg_log\".\n2017-10-26 02:15:32.109 PDT [16323] LOG:  listening on IPv4 address \"0.0.0.0\", port 5433\n2017-10-26 02:15:32.109 PDT [16323] LOG:  listening on IPv6 address \"::\", port 5433\n2017-10-26 02:15:32.111 PDT [16323] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5433\"\n2017-10-26 02:15:32.116 PDT [16323] LOG:  redirecting log output to logging collector process\n2017-10-26 02:15:32.116 PDT [16323] HINT:  Future log output will appear in directory \"pg_log\".\nDone.\nALTER NODE coord1 WITH (HOST='datanode1', PORT=5432);\nALTER NODE\nCREATE NODE coord2 WITH (TYPE='coordinator', HOST='datanode2', PORT=5432);\nCREATE NODE\nCREATE NODE node1 WITH (TYPE='datanode', HOST='datanode1', PORT=5433, PRIMARY, PREFERRED);\nCREATE NODE\nCREATE NODE node2 WITH (TYPE='datanode', HOST='datanode2', PORT=5433);\nCREATE NODE\nSELECT pgxc_pool_reload();\n pgxc_pool_reload\n------------------\n t\n(1 row)\n\nCREATE NODE coord1 WITH (TYPE='coordinator', HOST='datanode1', PORT=5432);\nCREATE NODE\nALTER NODE coord2 WITH (HOST='datanode2', PORT=5432);\nALTER NODE\nCREATE NODE node1 WITH (TYPE='datanode', HOST='datanode1', PORT=5433, PRIMARY);\nCREATE NODE\nCREATE NODE node2 WITH (TYPE='datanode', HOST='datanode2', PORT=5433, PREFERRED);\nCREATE NODE\nSELECT pgxc_pool_reload();\n pgxc_pool_reload\n------------------\n t\n(1 row)\n\nDone.\nEXECUTE DIRECT ON (node1) 'CREATE NODE coord1 WITH (TYPE=''coordinator'', HOST=''datanode1'', PORT=5432)';\nEXECUTE DIRECT\nEXECUTE DIRECT ON (node1) 'CREATE NODE coord2 WITH (TYPE=''coordinator'', HOST=''datanode2'', PORT=5432)';\nEXECUTE DIRECT\nEXECUTE DIRECT ON (node1) 'ALTER NODE node1 WITH (TYPE=''datanode'', HOST=''datanode1'', PORT=5433, PRIMARY, PREFERRED)';\nEXECUTE DIRECT\nEXECUTE DIRECT ON (node1) 'CREATE NODE node2 WITH (TYPE=''datanode'', HOST=''datanode2'', PORT=5433, PREFERRED)';\nEXECUTE DIRECT\nEXECUTE DIRECT ON (node1) 'SELECT pgxc_pool_reload()';\n pgxc_pool_reload\n------------------\n t\n(1 row)\n\nEXECUTE DIRECT ON (node2) 'CREATE NODE coord1 WITH (TYPE=''coordinator'', HOST=''datanode1'', PORT=5432)';\nEXECUTE DIRECT\nEXECUTE DIRECT ON (node2) 'CREATE NODE coord2 WITH (TYPE=''coordinator'', HOST=''datanode2'', PORT=5432)';\nEXECUTE DIRECT\nEXECUTE DIRECT ON (node2) 'CREATE NODE node1 WITH (TYPE=''datanode'', HOST=''datanode1'', PORT=5433, PRIMARY, PREFERRED)';\nEXECUTE DIRECT\nEXECUTE DIRECT ON (node2) 'ALTER NODE node2 WITH (TYPE=''datanode'', HOST=''datanode2'', PORT=5433, PREFERRED)';\nEXECUTE DIRECT\nEXECUTE DIRECT ON (node2) 'SELECT pgxc_pool_reload()';\n pgxc_pool_reload\n------------------\n t\n(1 row)\n\nDone.\n```\n- 遇到的问题\n安装时出现`permission denied`\n是因为权限不足 使用`sudo chmod -R 777 /usr `\n或`sudo pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf init all`\n\n### 集群验证\n在datanode1节点上\n连接上5432端口，即node1上的coordinator，查看集群节点状态\n\n``` bash\n[postgres@datanode1 ~]$ psql -p 5432\npsql (PGXL 9.5r1.4, based on PG 9.5.5 (Postgres-XL 9.5r1.4))\nType \"help\" for help.\n\npostgres=# select * from pgxc_node;\n node_name | node_type | node_port | node_host | nodeis_primary | nodeis_preferred |   node_id\n-----------+-----------+-----------+-----------+----------------+------------------+-------------\n coord1    | C         |      5432 | datanode1 | f              | f                |  1885696643\n coord2    | C         |      5432 | datanode2 | f              | f                | -1197102633\n node1     | D         |      5433 | datanode1 | t              | t                |  1148549230\n node2     | D         |      5433 | datanode2 | f              | f                |  -927910690\n(4 rows)\n```\n\n如上面所示，可看到2个coordinator，2个node。集群状态正常\n尝试创建测试表test1，并插入数据\n\n``` bash\npostgres=# create table test1(id int,name text);\nCREATE TABLE\npostgres=# insert into test1(id,name) select generate_series(1,8),'test';\nINSERT 0 8\npostgres=# select * from test1;\n id | name\n----+------\n  1 | test\n  2 | test\n  5 | test\n  6 | test\n  8 | test\n  3 | test\n  4 | test\n  7 | test\n(8 rows)\n\npostgres=# exit\npostgres-# \\q\n```\n\n\n连接到datanode1服务器的5433端口，即node1，查看测试表的数据\n``` bash\n[postgres@datanode1 ~]$ psql -p 5433\npsql (PGXL 9.5r1.4, based on PG 9.5.5 (Postgres-XL 9.5r1.4))\nType \"help\" for help.\n\npostgres=# select * from test1;\n id | name\n----+------\n  1 | test\n  2 | test\n  5 | test\n  6 | test\n  8 | test\n(5 rows)\n```\n可看到表中数据是不全的\n再去datanode2服务器查看\n先连接到5432端口，即coordinator\n``` bash\n[postgres@datanode2 ~]$ psql -p 5432\npsql (PGXL 9.5r1.4, based on PG 9.5.5 (Postgres-XL 9.5r1.4))\nType \"help\" for help.\n\npostgres=# select * from test1;\n id | name\n----+------\n  1 | test\n  2 | test\n  5 | test\n  6 | test\n  8 | test\n  3 | test\n  4 | test\n  7 | test\n(8 rows)\n\npostgres=# \\q\n```\n再切换到5433端口，即node2\n``` bash\n[postgres@datanode2 ~]$ psql -p 5433\npsql (PGXL 9.5r1.4, based on PG 9.5.5 (Postgres-XL 9.5r1.4))\nType \"help\" for help.\n\npostgres=# select * from test1;\n id | name\n----+------\n  3 | test\n  4 | test\n  7 | test\n(3 rows)\n```\n正好是node1中缺少的那部分数据\n证实分布式数据库集群搭建完成\n\n### 数据库集群日常操作\n关闭集群\n在gtm服务器上执行\n``` bash\n[postgres@gtm ~]$ pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf stop all\n/bin/bash\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /home/postgres/pgxc_ctl\nStopping all the coordinator masters.\nStopping coordinator master coord1.\nStopping coordinator master coord2.\nDone.\nStopping all the datanode masters.\nStopping datanode master node1.\nStopping datanode master node2.\nDone.\nStopping all the gtm proxies.\nStopping gtm proxy gtm_pxy1.\nStopping gtm proxy gtm_pxy2.\nwaiting for server to shut down.... done\nserver stopped\nwaiting for server to shut down.... done\nserver stopped\nDone.\nStop GTM slave\nwaiting for server to shut down.... done\nserver stopped\nStop GTM master\nwaiting for server to shut down.... done\nserver stopped\n```\n### 开启集群\n在gtm服务器上执行\n\n``` bash\n[postgres@gtm ~]$ pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf start all\n/bin/bash\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /home/postgres/pgxc_ctl\nStart GTM master\nserver starting\nStart GTM slaveserver starting\nDone.\nStarting all the gtm proxies.\nStarting gtm proxy gtm_pxy1.\nStarting gtm proxy gtm_pxy2.\nserver starting\nserver starting\nDone.\nStarting coordinator master.\nStarting coordinator master coord1\nStarting coordinator master coord2\n2017-10-26 20:21:35.537 PDT [22477] LOG:  listening on IPv4 address \"0.0.0.0\", port 5432\n2017-10-26 20:21:35.538 PDT [22477] LOG:  listening on IPv6 address \"::\", port 5432\n2017-10-26 20:21:35.539 PDT [22477] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5432\"\n2017-10-26 20:21:35.556 PDT [22477] LOG:  redirecting log output to logging collector process\n2017-10-26 20:21:35.556 PDT [22477] HINT:  Future log output will appear in directory \"pg_log\".\n2017-10-26 20:21:35.563 PDT [22504] LOG:  listening on IPv4 address \"0.0.0.0\", port 5432\n2017-10-26 20:21:35.563 PDT [22504] LOG:  listening on IPv6 address \"::\", port 5432\n2017-10-26 20:21:35.565 PDT [22504] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5432\"\n2017-10-26 20:21:35.583 PDT [22504] LOG:  redirecting log output to logging collector process\n2017-10-26 20:21:35.583 PDT [22504] HINT:  Future log output will appear in directory \"pg_log\".\nDone.\nStarting all the datanode masters.\nStarting datanode master node1.\nStarting datanode master node2.\n2017-10-26 20:21:36.360 PDT [22590] LOG:  listening on IPv4 address \"0.0.0.0\", port 5433\n2017-10-26 20:21:36.360 PDT [22590] LOG:  listening on IPv6 address \"::\", port 5433\n2017-10-26 20:21:36.362 PDT [22590] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5433\"\n2017-10-26 20:21:36.382 PDT [22590] LOG:  redirecting log output to logging collector process\n2017-10-26 20:21:36.382 PDT [22590] HINT:  Future log output will appear in directory \"pg_log\".\n2017-10-26 20:21:36.374 PDT [22617] LOG:  listening on IPv4 address \"0.0.0.0\", port 5433\n2017-10-26 20:21:36.374 PDT [22617] LOG:  listening on IPv6 address \"::\", port 5433\n2017-10-26 20:21:36.375 PDT [22617] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5433\"\n2017-10-26 20:21:36.395 PDT [22617] LOG:  redirecting log output to logging collector process\n2017-10-26 20:21:36.395 PDT [22617] HINT:  Future log output will appear in directory \"pg_log\".\nDone.\n```\n\n\n#### 参考文档\n[Postgres-XL 9.5简易搭建](http://blog.csdn.net/sunbocong/article/details/78363453)\n\n","source":"_posts/fbs.md","raw":"---\ntitle: 分布式部署安装方案\ndate: 2018-06-19 01:08:10\ntags: 分布式\ncategories:\nkeywords: 分布式\n---\n\n> 之前因为公司的产品需求，研究过分布式方案，最近抽空整理了下\n\n# 解决方案\n\n- 主要是以`nginx`搭载`keepalived`实现 web 业务服务器 `keepalives`防止单点故障\n- `reids`分布式缓存\n- `fastdfs`分布式文件\n- `postgre-xl`分布式数据库服务器\n\n> 简单说，分布式是以缩短单个任务的执行时间来提升效率的，而集群则是通过提高单位时间内执行的任务数来提升效率。\n\n[参考](https://segmentfault.com/a/1190000002418709)\n\n<!--  more  -->\n\n> 以下是实验中遇到的问题以及安装方法\n\n# CentOS7 安装问题集\n\n> 远程无法访问（防火墙问题）\n\n```bash\nfirewall-cmd --zone=public --add-port=80/tcp --permanent\n\nfirewall-cmd --reload\n\nsystemctl stop firewalld.service #停止\n\nsystemctl disable firewalld.service #禁用\n\nfirewall-cmd --state #查看默认防火墙状态（关闭后显示notrunning，开启后显示running）\n\n# liunx图形界面获得root权限\n直接 `sudo nautilus` （unity，gnome）或 `sudo dolphin` (kde) ,就可以以root权限打开文件管理器了\n\n# liunx 远程获取root权限\n`sudo vi /etc/ssh/sshd_config`\n将PermitRootLogin值改yes\n允许不输入密码登录\n将PermitEmptyPasswords yes前面的#号去掉\n重启服务：service sshd restart（/etc/initd.d/sshd restart）\n```\n\n# nginx\n\n参考另一篇[nginx 安装](https://rsl140.github.io/blog/2018/01/06/nginx/)\n\n# keepalives\n\n## 简介\n\nKeepalived 是一个基于 VRRP 协议来实现的服务高可用方案，可以利用其来避免 IP 单点故障，类似的工具还有 heartbeat、corosync、pacemaker。\n\n但是它一般不会单独出现，而是与其它负载均衡技术（如 lvs、haproxy、nginx）一起工作来达到集群的高可用。\n\nKeepalived 的作用是检测服务器的状态，如果有一台 web 服务器死机，或工作出现故障，Keepalived 将检测到，并将有故障的服务器从系统中剔除，同时使用其他服务器代替该服务器的工作；\n\n当服务器工作正常后 Keepalived 自动将服务器加入到服务器群中，这些工作全部自动完成，不需要人工干涉，需要人工做的只是修复故障的服务器。\n\n## 原理\n\n```mermaid\ngraph LR\n用户 --> 交换机\n交换机 --> Nginx1:负载均衡/keepalived:主\nNginx2:负载均衡/keepalived:备 --> 心跳检查\n心跳检查 --> Nginx1:负载均衡/keepalived:主\nNginx1:负载均衡/keepalived:主 --> tomact1\nNginx1:负载均衡/keepalived:主 --> tomact2\n```\n\n首先 Keepalived 可以在主机上产生一个虚拟的 ip, 这里叫做 vip(v 是 virtual 的意思):192.168.200.150, keepalived 会将这个 vip 绑定到交换机上.\n\n当用户访问主机:192.168.200.129 时, 交换机会通过这个 ip 和 vip 的对应找到 192.168.200.129 上的 Nginx 进行处理.\n\n如果当有一天 192.168.200.129 上的 Nginx 挂掉的时候, Keepalived 会立即在备机上生成一个相同的 vip: 192.168.200.150, 当用户继续访问 192.168.200.129 时, 交换机上已经绑定了 vip, 这时发现这个 vip 是存在于 192.168.200.130 上面的, 所以直接将请求转发到了备机上.\n\n如果主机被修复好能够继续对外提供服务时, 这时 keepalived 会将主机上继续生成这个 vip, 同时回收在备机上生成的 vip. 这个是通过心跳检查来判断主机已恢复使用.\n\n## 安装\n\n### 下载\n\nwget http://www.keepalived.org/software/keepalived-1.2.23.tar.gz\n\n### 解压\n\ntar -zxvf keepalived-1.2.23.tar.gz\ncd keepalived-1.2.23\n\n### 安装\n\n./configure --prefix=/usr/local/keepalived #prefix 指定安装目录\n\n如果提示错误 openssl 不存在\nsudo apt-get install openssl\nsudo apt-get install libssl-dev\n\nmake\nmake install\n\n### 配置\n\n``` bash\n【/usr/local/keepalived/etc/keepalived/keepalived.conf】\n   global_defs {\n       notification_email { #指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。\n           acassen@firewall.loc\n           failover@firewall.loc\n           sysadmin@firewall.loc\n       }\n       notification_email_from Alexandre.Cassen@firewall.loc #指定发件人\n       smtp_server 127.0.0.1 #发送email的smtp地址\n       smtp_connect_timeout 30 #超时时间\n       router_id nginx #运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同\n       vrrp_skip_check_adv_addr\n       vrrp_strict\n       vrrp_garp_interval 0\n       vrrp_gna_interval 0\n   }\n\n   vrrp_instance VI_1 {\n       state MASTER #指定当前节点为主节点 备用节点上设置为BACKUP即可\n       interface eth0 #绑定虚拟IP的网络接口,使用ip a 查看网卡名称2.网卡名称\n       virtual_router_id 51 #VRRP组名，两个节点的设置必须一样，以指明各个节点属于同一VRRP组\n       priority 100 #主节点的优先级（1-254之间），备用节点必须比主节点优先级低\n       advert_int 1\n       authentication { #设置验证信息，两个节点必须一致\n       　　auth_type PASS\n       　　auth_pass 1111\n       }\n       virtual_ipaddress { #指定虚拟IP, 两个节点设置必须一样\n       　　192.168.0.110/24\n       }\n   }\n\n   【/usr/local/keepalived/etc/sysconfig/keepalived】\n\n   KEEPALIVED_OPTIONS=\"-D -f /usr/local/keepalived/etc/keepalived/keepalived.conf\" #指定keepalived配置文件路径\n\n\n因为我们使用非默认路径（/usr/local）安装keepalived，需要设置一些软链接以保证keepalived能正常启动\n\nln -s /usr/local/keepalived/sbin/keepalived  /usr/bin #将keepalived主程序加入到环境变量\nln -s /usr/local/keepalived/etc/sysconfig/keepalived  /etc/sysconfig/ #keepalived启动脚本变量引用文件，默认文件路径是/etc/sysconfig/，也可以不做软链接，直接修改启动脚本中文件路径即可\ncp /usr/local/src/keepalived-1.4.0/keepalived/etc/init.d/keepalived /etc/init.d/\ncp -r ./keepalived/etc/keepalived  /etc/  #注意更新\n```\n\n\n### 启动\n``` bash\n   service keepalived start|stop|restart\n   systemctl daemon-reload\n   chkconfig keepalived on\n```\n默认的配置文件中，指定了虚拟可使用ip addr（或ip a）命令验证之。查看网卡下是否有虚拟ip\n如果虚拟ip ping不同\n1.vim /etc/keepalived/keepalived.conf\n把这个注释就可以了\nvrrp_strict\n\n2.可能上级交换机或路由器绑定了apr，也就是ip与mac地址绑定\n可以使用 arping -I [网卡名] -c 5 -s [本机IP或vip] [网关] 看一下接收情况\n\n\n\n应用\n\nkeepalived两种模式：主-备、主-主\n\n主-备\n\n`虚拟IP：192.168.0.110         主节点：192.168.0.50          备用节点：192.168.0.51`\n\n### 主配置文件\n\n   【/usr/local/keepalived/etc/keepalived/keepalived.conf】\n\n   global_defs {\n       notification_email { #指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。\n           acassen@firewall.loc\n           failover@firewall.loc\n           sysadmin@firewall.loc\n       }\n       notification_email_from Alexandre.Cassen@firewall.loc #指定发件人\n       smtp_server 127.0.0.1 #发送email的smtp地址\n       smtp_connect_timeout 30 #超时时间\n       router_id LVS_DEVEL #运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同\n       vrrp_skip_check_adv_addr\n       vrrp_strict\n       vrrp_garp_interval 0\n       vrrp_gna_interval 0\n   }\n\n   vrrp_instance VI_1 {\n       state MASTER #指定当前节点为主节点 备用节点上设置为BACKUP即可\n       interface eth0 #绑定虚拟IP的网络接口 使用ip a查看\n       virtual_router_id 51 #VRRP组名，两个节点的设置必须一样，以指明各个节点属于同一VRRP组\n       priority 100 #主节点的优先级（1-254之间），备用节点必须比主节点优先级低\n       advert_int 1\n       authentication { #设置验证信息，两个节点必须一致\n           auth_type PASS\n           auth_pass 1111\n       }\n       virtual_ipaddress { #指定虚拟IP, 两个节点设置必须一样\n           192.168.0.110/24\n       }\n   }\n\n\n### 备配置文件\n   【/usr/local/keepalived/etc/keepalived/keepalived.conf】\n\n   global_defs {\n       notification_email { #指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。\n           acassen@firewall.loc\n           failover@firewall.loc\n           sysadmin@firewall.loc\n       }\n       notification_email_from Alexandre.Cassen@firewall.loc #指定发件人\n       smtp_server 127.0.0.1 #发送email的smtp地址\n       smtp_connect_timeout 30 #超时时间\n       router_id LVS_DEVEL #运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同\n       vrrp_skip_check_adv_addr\n       vrrp_strict\n       vrrp_garp_interval 0\n       vrrp_gna_interval 0\n   }\n\n   vrrp_instance VI_1 {\n       state BACKUP #指定当前节点为主节点 备用节点上设置为BACKUP即可\n       interface eth0 #绑定虚拟IP的网络接口\n       virtual_router_id 51 #VRRP组名，两个节点的设置必须一样，以指明各个节点属于同一VRRP组\n       priority 99 #主节点的优先级（1-254之间），备用节点必须比主节点优先级低\n       advert_int 1\n       authentication { #设置验证信息，两个节点必须一致\n           auth_type PASS\n           auth_pass 1111\n       }\n       virtual_ipaddress { #指定虚拟IP, 两个节点设置必须一样\n           192.168.0.110/24\n       }\n   }\n\n\n\n\n主-主\n\n虚拟IP：192.168.1.21、192.168.1.22      A节点：192.168.1.23       B节点：192.168.1.24\n\n主备模式的缺点就是始终只有一台机器位于工作状态，另外一台机器永远是备用状态，存在资源浪费之问题。\n\n双主模式允许两台机器均处于工作状态并互相作为备份。搭建keepalived双方模式的要素：\n\n1.必须有两个虚拟IP, 分别绑定至两个节点上\n\n2.每个节点作为某个虚拟IP的主节点，并同时作为另外一个虚拟IP的备用节点。\n\n3.当某个节点产生故障时，两个虚拟IP自动绑定至正常节点上\n\n也就是说，两个节点的配置应该是交叉的，对同个虚拟IP，交叉互为主备。\n\n\n\n\n### 节点A配置文件\n\n   【/usr/local/keepalived/etc/keepalived/keepalived.conf】\n\n   global_defs {\n       notification_email { #指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。\n           acassen@firewall.loc\n           failover@firewall.loc\n           sysadmin@firewall.loc\n       }\n       notification_email_from Alexandre.Cassen@firewall.loc #指定发件人\n       smtp_server 127.0.0.1 #发送email的smtp地址\n       smtp_connect_timeout 30 #超时时间\n       router_id LVS_DEVEL #运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同\n       vrrp_skip_check_adv_addr\n       vrrp_strict\n       vrrp_garp_interval 0\n       vrrp_gna_interval 0\n   }\n\n   vrrp_instance VI_1 {\n       state MASTER\n       interface eth0\n       virtual_router_id 51 #本机两个vrrp_instance组的此值不能相同，但对应备用节点的此值必须相同\n       priority 100 #对应备用节点值应该比此值小\n       advert_int 1\n       authentication {\n           auth_type PASS\n           auth_pass 1111\n       }\n       virtual_ipaddress {\n           192.168.1.21/24\n       }\n   }\n\n   vrrp_instance VI_2 {\n       state BACKUP\n       interface eth0\n       virtual_router_id 52 #本机两个vrrp_instance组的此值不能相同，但对应备用节点的此值必须相同\n       priority 99 #主节点的值应该比此值大\n       advert_int 1\n       authentication {\n           auth_type PASS\n           auth_pass 1111\n       }\n       virtual_ipaddress {\n           192.168.1.22/24\n       }\n   }\n\n\n\n### 节点B配置文件\n   【/usr/local/keepalived/etc/keepalived/keepalived.conf】\n\n   global_defs {\n   　　　notification_email { #指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。\n   　　　　acassen@firewall.loc\n   　　　　failover@firewall.loc\n   　　　　sysadmin@firewall.loc\n   }\n   　　notification_email_from Alexandre.Cassen@firewall.loc #指定发件人\n   　　smtp_server 127.0.0.1 #发送email的smtp地址\n   　　smtp_connect_timeout 30 #超时时间\n   　　router_id LVS_DEVEL #运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同\n   　　vrrp_skip_check_adv_addr\n   　　vrrp_strict\n   　　vrrp_garp_interval 0\n   　　vrrp_gna_interval 0\n   }\n\n   vrrp_instance VI_1 {\n   　　state BACKUP\n   　　interface eth0\n   　　virtual_router_id 51 #本机两个vrrp_instance组的此值不能相同，但对应备用节点的此值必须相同\n   　　priority 99 #对应主节点值应该比此值大\n   　　advert_int 1\n   　　authentication {\n   　　　　auth_type PASS\n   　　　　auth_pass 1111\n   　　}\n   　　virtual_ipaddress {\n   　　　　192.168.1.21/24\n   　　}\n   }\n\n   vrrp_instance VI_2 {\n   　　state MASTER\n   　　interface eth0\n   　　virtual_router_id 52 #本机两个vrrp_instance组的此值不能相同，但对应备用节点的此值必须相同\n   　　priority 100 #对应备用节点的值应该比此值小\n   　　advert_int 1\n   　　authentication {\n   　　　　auth_type PASS\n   　　　　auth_pass 1111\n   　　}\n   　　virtual_ipaddress {\n   　　　　192.168.1.22/24\n   　　}\n   }\n\n\n## 问题\n\n两个节点实际都处于正常工作状态，但是无法接收到彼此的组播通知，这时两个节点均强行绑定虚拟IP，导致不可预料的后果。\n\n这时就需要设置仲裁，即每个节点必须判断自身的状态（应用服务状态及自身网络状态），要实现这两点可使用自定义shell脚本实现，通过周期性地检查自身应用服务状态，并不断ping网关（或其它可靠的参考IP）均可。当自身服务异常、或无法ping通网关，则认为自身出现故障，就应该移除掉虚拟IP(停止keepalived服务即可）。\n\n\n主要借助keepalived提供的vrrp_script及track_script实现：\n\n在keepalived的配置文件最前面加入以下代码，定义一个跟踪脚本：\n\nvrrp_script check_local { #定义一个名称为check_local的检查脚本\n　　script \"/usr/local/keepalived/bin/check_local.sh\" #shell脚本的路径\n　　interval 5 #运行间隔\n}\n\n再在vrrp_instance配置中加入以下代码使用上面定义的检测脚本：\n\ntrack_script {\n　　check_local\n}\n我们在/usr/local/keepalived/bin/check_local.sh定义的检测规则是：\n\n1. 自身web服务故障（超时，http返回状态不是200）\n\n2. 无法ping通网关\n\n3. 产生以上任何一个问题，均应该移除本机的虚拟IP(停止keepalived实例即可)\n\n\n但这里有个小问题，如果本机或是网关偶尔出现一次故障，那么我们不能认为是服务故障。更好的做法是如果连续N次检测本机服务不正常或连接N次无法ping通网关，才认为是故障产生，才需要进行故障转移。\n\n但这么做的缺点是，如果脚本检测到故障产生，并停止掉了keepalived服务，那么当故障恢复后，keepalived是无法自动恢复的。\n\n\n\n还可以利用独立的脚本以秒级的间隔检查自身服务及网关连接性，再根据故障情况控制keepalived的运行或是停止。\n\n在每个节点运行shell脚本（check_service.sh）检测本机的服务是否正常，一旦检测到服务异常时，停止掉本机的keepalived, 如此虚拟IP自动转移到备用机器之上，如每隔3秒检测一次本机服务状态，如果连接3次检测失败，则停止掉keepalived实例。同时如果本机服务是正常的，但是keepalived没有启动（故障恢复之后），则启动keepalived，以达到故障恢复之目的。\n\ncheck_service.sh文件的内容\n``` bash\n!/bin/bash\n\n   pidfile=/var/lock/subsys/`basename $0`.pid\n   if [ -f $pidfile ] && [ -e /proc/`cat $pidfile` ] ; then\n   　　exit 1\n   fi\n\n   trap \"rm -fr $pidfile ; exit 0\" 1 2 3 15\n   echo $$ > $pidfile\n\n   maxfails=3\n   fails=0\n   success=0\n\n   while [ 1 ]\n   do\n   　　/usr/bin/wget --timeout=3 --tries=1 http://127.0.0.1/ -q -O /dev/null\n   　　if [ $? -ne 0 ] ; then\n   　　　　let fails=$[$fails+1]\n   　　　　success=0\n   　　else\n   　　　　fails=0\n   　　　　let success=$[$success+1]\n   　　fi\n\n   　　if [ $fails -ge $maxfails ] ; then\n   　　　　fails=0\n   　　　　success=0\n\n   　　　　#check keepalived is running ? try to stop it\n   　　　　service keepalived status | grep running\n   　　　　if [ $? -eq 0 ] ; then\n   　　　　　　logger -is \"local service fails $maxfails times ... try to stop keepalived.\"\n   　　　　　　service keepalived stop 2>&1 | logger\n   　　　　fi\n   　　fi\n\n   　　if [ $success -gt $maxfails ] ; then\n   　　　　#check keepalived is stopped ? try to start it\n   　　　　service keepalived status | grep stopped\n   　　　　if [ $? -eq 0 ] ; then\n   　　　　　　logger -is \"service changes normal, try to start keepalived .\"\n   　　　　　　service keepalived start\n   　　　　fi\n   　　　　success=0\n   　　fi\n   　　sleep 3\n   done\n```\n\n两个节点上均应运行此脚本，请将此脚本加入到cron任务中（此程序已经作了单实例运行机制，加入计划任务的作用就是防止脚本意外中断后检测功能失效），可实现的功能：\n\n如果本地服务连续三次检测失败，就尝试停止keepalived服务（如果keepalived处于运行状态）\n\n如果本地服务连接三次检测成功，但keepalived没有启动，则启动之\n\n关键的执行点，均已经记录到系统日志中（/var/log/messages）\n\n执行crontab -e , 加入以下内容：\n\n*/1 * * * * root /home/testuser/check_local.sh\n\n\n\n停止掉本机的keepalived, 稍过一会，就会keepalived服务被自动启动了（这是因为本地服务检测正常）\n\n停止掉本机的nginx, 稍过一会，就会发现keepalived服务也被停止掉了\n\n再启动nginx, 稍过一会，发现keepalived也被正常启动，并绑定了正确的虚拟IP\n\n\n# redis\n\n## 1.下载解压安装redis\n\n### 1.1redis源文件\n将redis源文件放在目录`/usr/local/src/`下\n\n### 1.2解压redis\n移动到redis所在文件目录\n>cd /usr/local/src/\ntar -zxvf redis.tar.gz\n\n### 1.3编译安装redis\n移动到解压后reids目录\n>cd redis\nmake\n\n进入reids/src目录\nmake install\n\n\n\n## 2.Redis的部署\n安装成功后，下面对Redis 进行部署\n如果需使用tomcat来连接的话\n1.关闭安全模式\n2.设置密码\n### 2.1执行Redis-server 命令，启动Redis 服务\n\n> 注意：这里直接执行Redis-server 启动的Redis服务，是在前台直接运行的，也就是说，执行完该命令后，如果Lunix关闭当前会话，则Redis服务也随即关闭。正常情况下，启动Redis服务需要从后台启动，并且指定启动配置文件。\n3、后台启动redis服务\na)首先编辑conf文件，将daemonize属性改为yes（表明需要在后台运行）\ncd etc/\nvi redis.conf\n如果redis.conf文件不存在就从安装目录复制过去\nb)再次启动redis服务，并指定启动服务配置文件\nredis-server  /etc/redis.conf\n\n4、服务端启动成功后，启动Redis\n> `redis-cli`\n\n\n使用命令 config set requirepass admin\n为redis设置密码为admin\n输入验证密码\nauth admin\n保存密码设置信息到磁盘\nsave\n退出\nexit\n\n## 3.tomcat配置\n\n### 3.1 jar包\n    commons-logging-1.2.jar\n    commons-pool2-2.4.2.jar\n    jedis-2.9.0.jar\n    tomcat-redis-session-manager1.2.jar\n将以上4个jar包放入tomcat/lib下\n\n### 3.2 content.xml配置\n配置Tomcat的conf目录下的context.xml文件：\n\n> 1.单点Reids配置\n   ``` bash\n    <Valve className=\"com.orangefunction.tomcat.redissessions.RedisSessionHandlerValve\" />\n    <Manager className=\"com.orangefunction.tomcat.redissessions.RedisSessionManager\"\n    host=\"192.168.0.111\"\n    port=\"6379\"\n    password=\"admin\"//reids密码\n    database=\"0\"\n    maxInactiveInterval=\"60\" />\n```\n> 2.Sentinel集群配置：\n``` bash\n    <!-- Sentinel 配置 -->\n\n    <Valve className=\"reyo.redis.session.manager.tomcat8.RedisSessionHandlerValve\" />\n    <Manager className=\"reyo.redis.session.manager.tomcat8.RedisSessionManager\"\n\n    maxInactiveInterval=\"60\"\n\n    sentinelMaster=\"mymaster\"\n\n    sentinels=\"127.0.0.1:26379,127.0.0.1:26380,127.0.0.1:26381,127.0.0.1:26382\" />\n```\n案例：\n如果要监控两个redis实例，可以进行如下配置Redis安装目录下sentinel.conf文件：\n常规配置：\n``` bash\n    port 26379\n    daemonize yes\n    logfile \"/var/log/redis/sentinel.log\"\n\n    #master 7000\n    sentinel monitor master1 127.0.0.1 7000 2                #配置master名、ip、port、需要多少个sentinel才能判断[客观下线]（2）\n    sentinel down-after-milliseconds master-7000 30000      #配置sentinel向master发出ping，最大响应时间、超过则认为主观下线\n    sentinel parallel-syncs master-7000 1                   #配置在进行故障转移时，运行多少个slave进行数据备份同步(越少速度越快)\n    sentinel failover-timeout master-7000 180000            #配置当出现failover时下一个sentinel与上一个sentinel对[同一个master监测的时间间隔](最后设置为客观下线)\n\n    #master 7001\n    sentinel monitor master2 127.0.0.1 7001 1\n    sentinel down-after-milliseconds master-7001 30000\n    sentinel parallel-syncs master-7001 1\n    sentinel failover-timeout master-7001 180000\n```\n\n特殊配置：\n`min-slaves-to-write 1`\n`min-slaves-max-lag 10`\n通过上面的配置，当一个redis是master时，如果它不能向至少一个slave写数据(上面的min-slaves-to-write指定了slave的数量)，它将会拒绝接受客户端的写请求。由于复制是异步的，master无法向slave写数据意味着slave要么断开连接了，要么不在指定时间内向master发送同步数据的请求了(上面的min-slaves-max-lag指定了这个时间)。\n\n### 配置Redis能随系统启动:\n./utils/install_server.sh\n\n### Redis服务查看、开启、关闭:\na.通过ps -ef|grep redis命令查看Redis进程\nb.开启Redis服务操作通过/etc/init.d/redis_6379 start命令，也可通过（service redis_6379 start）\nc.关闭Redis服务操作通过/etc/init.d/redis_6379 stop命令，也可通过（service redis_6379 stop）\n\n# Postgres-XL\n\n## centos7安装：\n\n### 在所有主机上安装Postgres-XL\n\n#### 在每台机器的 /etc/hosts中加入以下内容：\n``` bash\n192.168.0.50 gtm\n192.168.0.51 gtm-bc\n192.168.0.120 datanode1\n192.168.0.121 datanode2\n```\n#### 关闭防火墙：\n``` bash\nsystemctl stop firewalld\nsystemctl disable firewalld\n```\n#### selinux设置\n``` bash\nsetenforce 0\nsed -i \"s/SELINUX=enforcing/SELINUX=disabled/\" /etc/selinux/config\n```\n#### 安装依赖包:\n``` bash\nyum -y install epel-release\nyum -y install lbzip2 gcc readline-devel zlib-devel flex\n```\n#### 新建用户\n> 每个节点都建立用户postgres，并且建立.ssh目录，并配置相应的root权限：\n\n``` bash\n[root@localhost ~]# useradd postgres\n[root@localhost ~]# passwd postgres\n[root@localhost ~]# su - postgres\n[root@localhost ~]# mkdir ~/.ssh\n[root@localhost ~]# chmod 700 ~/.ssh\n```\n#### ssh免密码登录(`只在gtm下做`)\n\n> 仅仅在`gtm`节点配置如下操作：\n\n``` bash\n[root@localhost ~]# su - postgres\n[postgres@localhost ~]# ssh-keygen -t rsa\n[postgres@localhost ~]# cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys\n[postgres@localhost ~]# chmod 600 ~/.ssh/authorized_keys\n```\n> 对所有提示都不要输入，直接enter下一步。\n\n> 将刚生成的认证文件拷贝到datanode1到datanode2中，使得gtm节点可以免密码登录datanode1~datanode2的任意一个节点：\n\n\n``` bash\n[postgres@localhost ~]# scp ~/.ssh/authorized_keys postgres@datanode1:~/.ssh/\n[postgres@localhost ~]# scp ~/.ssh/authorized_keys postgres@datanode2:~/.ssh/\n```\n\n> <mark>这里会提示如下内容 输入yes</mark>后会提示让你输入远程用户密码\n\n``` bash\nThe authenticity of host 'datanode1 (192.168.0.120)' can't be established.\nECDSA key fingerprint is f9:ad:48:ab:a8:b6:81:5b:e0:6f:75:e5:xx:xx:xx:xx.\nAre you sure you want to continue connecting (yes/no)? yes\n\n```\n#### Postgres-XL安装(每台服务器都要操作)\n\n``` bash\ncd /usr/local/src\ntar -zxvf  postgres-xl\ncd postgres-xl\n./configure\nmake && make install\ncd contrib/\nmake && make install\n```\n> cortrib中有很多postgres很牛的工具，一般要装上。如ltree,uuid,postgres_fdw等等。\n\n#### 配置环境变量\n\n进入postgres用户，修改其环境变量\n``` bash\nsu - postgres\nvi .bashrc\n```\n在打开的文件末尾，新增如下变量配置：\n\n``` js\nexport PGHOME=/usr/local/pgsql\nexport PGUSER=postgres\nexport LD_LIBRARY_PATH=$PGHOME/lib\nexport PATH=$PGHOME/bin:$PATH\n```\n\n 按住esc，然后输入:wq!保存退出\n\n 输入以下命令对更改重启生效:\n `source .bashrc`\n\n 检查配置是否已修改\n ``` bash\n [postgres@localhost ~]$ echo $PGHOME\n /usr/local/pgsql\n ```\n\n 检查ssh免密访问是否配置成功\n ``` bash\n    [root@gtm ~]# ssh datanode1\n    [root@datanode1 ~]# exit\n    logout\n    Connection to datanode1 closed.\n\n    [root@gtm ~]# ssh datanode2\n    [root@datanode2 ~]# exit\n    logout\n    Connection to datanode2 closed.\n ```\n\n#### 修改文件夹所有者\n将/home/postgres下所有文件的所有者变更为postgres用户\n`[root@gtm ~]# chown -R postgres /home/postgres`\n\n\n#### 生成pgxc_ctl配置文件(`只在gtm下做`)\n\n在/usr/local/src/postgres-xl/contrib/pgxc_ctl目录下\n运行命令\n\n`./pgxc_ctl`后进入操作界面后输入prepare之后使用Crtl+c退出PGXC操作界面\n\n``` bash\n[postgres@localhost ~]$ pgxc_ctl\n/bin/bash\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nERROR: File \"/home/postgres/pgxc_ctl/pgxc_ctl.conf\" not found or not a regular file. No such file or directory\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /home/postgres/pgxc_ctl\nPGXC prepare\nPGXC ^C\n\n```\n\n#### 编辑pgxc_ctl.conf文件\n`[postgres@localhost ~]$ vim /home/postgres/pgxc_ctl/pgxc_ctl.conf`\n\n\n#### 配置内容如下：\n``` bash\n#!/usr/bin/env bash\n#\n# Postgres-XC Configuration file for pgxc_ctl utility.\n#\n# Configuration file can be specified as -c option from pgxc_ctl command.   Default is\n# $PGXC_CTL_HOME/pgxc_ctl.org.\n#\n# This is bash script so you can make any addition for your convenience to configure\n# your Postgres-XC cluster.\n#\n# Please understand that pgxc_ctl provides only a subset of configuration which pgxc_ctl\n# provide.  Here's several several assumptions/restrictions pgxc_ctl depends on.\n#\n# 1) All the resources of pgxc nodes has to be owned by the same user.   Same user means\n#    user with the same user name.  User ID may be different from server to server.\n#    This must be specified as a variable $pgxcOwner.\n#\n# 2) All the servers must be reacheable via ssh without password.   It is highly recommended\n#    to setup key-based authentication among all the servers.\n#\n# 3) All the databases in coordinator/datanode has at least one same superuser.  Pgxc_ctl\n#    uses this user to connect to coordinators and datanodes.   Again, no password should\n#    be used to connect.  You have many options to do this, pg_hba.conf, pg_ident.conf and\n#    others.  Pgxc_ctl provides a way to configure pg_hba.conf but not pg_ident.conf.   This\n#    will be implemented in the later releases.\n#\n# 4) Gtm master and slave can have different port to listen, while coordinator and datanode\n#    slave should be assigned the same port number as master.\n#\n# 5) Port nuber of a coordinator slave must be the same as its master.\n#\n# 6) Master and slave are connected using synchronous replication.  Asynchronous replication\n#    have slight (almost none) chance to bring total cluster into inconsistent state.\n#    This chance is very low and may be negligible.  Support of asynchronous replication\n#    may be supported in the later release.\n#\n# 7) Each coordinator and datanode can have only one slave each.  Cascaded replication and\n#    multiple slave are not supported in the current pgxc_ctl.\n#\n# 8) Killing nodes may end up with IPC resource leak, such as semafor and shared memory.\n#    Only listening port (socket) will be cleaned with clean command.\n#\n# 9) Backup and restore are not supported in pgxc_ctl at present.   This is a big task and\n#    may need considerable resource.\n#\n#========================================================================================\n#\n#\n# pgxcInstallDir variable is needed if you invoke \"deploy\" command from pgxc_ctl utility.\n# If don't you don't need this variable.\npgxcInstallDir=$HOME\npgxlDATA=$HOME/data\n#---- OVERALL -----------------------------------------------------------------------------\n#\npgxcOwner=postgres\t\t\t# owner of the Postgres-XC databaseo cluster.  Here, we use this\n\t\t\t\t\t\t# both as linus user and database user.  This must be\n\t\t\t\t\t\t# the super user of each coordinator and datanode.\npgxcUser=$pgxcOwner\t\t# OS user of Postgres-XC owner\n\ntmpDir=/tmp\t\t\t\t\t# temporary dir used in XC servers\nlocalTmpDir=$tmpDir\t\t\t# temporary dir used here locally\n\nconfigBackup=n\t\t\t\t\t# If you want config file backup, specify y to this value.\nconfigBackupHost=pgxc-linker\t# host to backup config file\nconfigBackupDir=$HOME/pgxc\t\t# Backup directory\nconfigBackupFile=pgxc_ctl.bak\t# Backup file name --> Need to synchronize when original changed.\n\n#---- GTM ------------------------------------------------------------------------------------\n\n# GTM is mandatory.  You must have at least (and only) one GTM master in your Postgres-XC cluster.\n# If GTM crashes and you need to reconfigure it, you can do it by pgxc_update_gtm command to update\n# GTM master with others.   Of course, we provide pgxc_remove_gtm command to remove it.  This command\n# will not stop the current GTM.  It is up to the operator.\n\n\n#---- GTM Master -----------------------------------------------\n\n#---- Overall ----\ngtmName=gtm\ngtmMasterServer=gtm\ngtmMasterPort=6666\ngtmMasterDir=$pgxlDATA/nodes/gtm\n\n#---- Configuration ---\ngtmExtraConfig=none\t\t\t# Will be added gtm.conf for both Master and Slave (done at initilization only)\ngtmMasterSpecificExtraConfig=none\t# Will be added to Master's gtm.conf (done at initialization only)\n\n#---- GTM Slave -----------------------------------------------\n\n# Because GTM is a key component to maintain database consistency, you may want to configure GTM slave\n# for backup.\n\n#---- Overall ------\ngtmSlave=n\t\t\t\t\t# Specify y if you configure GTM Slave.   Otherwise, GTM slave will not be configured and\n\t\t\t\t\t\t\t# all the following variables will be reset.\ngtmSlaveName=gtmSlave\ngtmSlaveServer=gtm-bc\t\t# value none means GTM slave is not available.  Give none if you don't configure GTM Slave.\ngtmSlavePort=20001\t\t\t# Not used if you don't configure GTM slave.\ngtmSlaveDir=$pgxlDATA/nodes/gtmSlave\t# Not used if you don't configure GTM slave.\n# Please note that when you have GTM failover, then there will be no slave available until you configure the slave\n# again. (pgxc_add_gtm_slave function will handle it)\n\n#---- Configuration ----\ngtmSlaveSpecificExtraConfig=none # Will be added to Slave's gtm.conf (done at initialization only)\n\n#---- GTM Proxy -------------------------------------------------------------------------------------------------------\n# GTM proxy will be selected based upon which server each component runs on.\n# When fails over to the slave, the slave inherits its master's gtm proxy.  It should be\n# reconfigured based upon the new location.\n#\n# To do so, slave should be restarted.   So pg_ctl promote -> (edit postgresql.conf and recovery.conf) -> pg_ctl restart\n#\n# You don't have to configure GTM Proxy if you dont' configure GTM slave or you are happy if every component connects\n# to GTM Master directly.  If you configure GTL slave, you must configure GTM proxy too.\n\n#---- Shortcuts ------\ngtmProxyDir=$pgxlDATA/nodes/gtm_pxy\n\n#---- Overall -------\ngtmProxy=n\t\t\t\t# Specify y if you conifugre at least one GTM proxy.   You may not configure gtm proxies\n\t\t\t\t\t\t# only when you dont' configure GTM slaves.\n\t\t\t\t\t\t# If you specify this value not to y, the following parameters will be set to default empty values.\n\t\t\t\t\t\t# If we find there're no valid Proxy server names (means, every servers are specified\n\t\t\t\t\t\t# as none), then gtmProxy value will be set to \"n\" and all the entries will be set to\n\t\t\t\t\t\t# empty values.\ngtmProxyNames=(gtm_pxy1 gtm_pxy2)\t# No used if it is not configured\ngtmProxyServers=(datanode1 datanode2)\t\t\t# Specify none if you dont' configure it.\ngtmProxyPorts=(6666 6666)\t\t\t\t# Not used if it is not configured.\ngtmProxyDirs=($gtmProxyDir $gtmProxyDir)\t# Not used if it is not configured.\n\n#---- Configuration ----\ngtmPxyExtraConfig=none\t\t# Extra configuration parameter for gtm_proxy.  Coordinator section has an example.\ngtmPxySpecificExtraConfig=(none none none none)\n\n#---- Coordinators ----------------------------------------------------------------------------------------------------\n\n#---- shortcuts ----------\ncoordMasterDir=$pgxlDATA/nodes/coord\ncoordSlaveDir=$HOME/pgxc/nodes/coord_slave\ncoordArchLogDir=$HOME/pgxc/nodes/coord_archlog\n\n#---- Overall ------------\ncoordNames=(coord1 coord2)\t\t# Master and slave use the same name\ncoordPorts=(5432 5432)\t\t\t# Master ports\npoolerPorts=(6667 6667)\t\t\t# Master pooler ports\ncoordPgHbaEntries=(0.0.0.0/0)\t\t\t\t# Assumes that all the coordinator (master/slave) accepts\n\t\t\t\t\t\t\t\t\t\t\t\t# the same connection\n\t\t\t\t\t\t\t\t\t\t\t\t# This entry allows only $pgxcOwner to connect.\n\t\t\t\t\t\t\t\t\t\t\t\t# If you'd like to setup another connection, you should\n\t\t\t\t\t\t\t\t\t\t\t\t# supply these entries through files specified below.\n# Note: The above parameter is extracted as \"host all all 0.0.0.0/0 trust\".   If you don't want\n# such setups, specify the value () to this variable and suplly what you want using coordExtraPgHba\n# and/or coordSpecificExtraPgHba variables.\n#coordPgHbaEntries=(::1/128)\t# Same as above but for IPv6 addresses\n\n#---- Master -------------\ncoordMasterServers=(datanode1 datanode2)\t\t# none means this master is not available\ncoordMasterDirs=($coordMasterDir $coordMasterDir)\ncoordMaxWALsernder=0\t# max_wal_senders: needed to configure slave. If zero value is specified,\n\t\t\t\t\t\t# it is expected to supply this parameter explicitly by external files\n\t\t\t\t\t\t# specified in the following.\tIf you don't configure slaves, leave this value to zero.\ncoordMaxWALSenders=($coordMaxWALsernder $coordMaxWALsernder)\n\t\t\t\t\t\t# max_wal_senders configuration for each coordinator.\n\n#---- Slave -------------\ncoordSlave=n\t\t\t# Specify y if you configure at least one coordiantor slave.  Otherwise, the following\n\t\t\t\t\t\t# configuration parameters will be set to empty values.\n\t\t\t\t\t\t# If no effective server names are found (that is, every servers are specified as none),\n\t\t\t\t\t\t# then coordSlave value will be set to n and all the following values will be set to\n\t\t\t\t\t\t# empty values.\ncoordSlaveSync=y\t\t# Specify to connect with synchronized mode.\ncoordSlaveServers=(node07 node08 node09 node06)\t\t\t# none means this slave is not available\ncoordSlavePorts=(20004 20005 20004 20005)\t\t\t# Master ports\ncoordSlavePoolerPorts=(20010 20011 20010 20011)\t\t\t# Master pooler ports\ncoordSlaveDirs=($coordSlaveDir $coordSlaveDir $coordSlaveDir $coordSlaveDir)\ncoordArchLogDirs=($coordArchLogDir $coordArchLogDir $coordArchLogDir $coordArchLogDir)\n\n#---- Configuration files---\n# Need these when you'd like setup specific non-default configuration\n# These files will go to corresponding files for the master.\n# You may supply your bash script to setup extra config lines and extra pg_hba.conf entries\n# Or you may supply these files manually.\ncoordExtraConfig=coordExtraConfig\t# Extra configuration file for coordinators.\n\t\t\t\t\t\t# This file will be added to all the coordinators'\n\t\t\t\t\t\t# postgresql.conf\n# Pleae note that the following sets up minimum parameters which you may want to change.\n# You can put your postgresql.conf lines here.\ncat > $coordExtraConfig <<EOF\n#================================================\n# Added to all the coordinator postgresql.conf\n# Original: $coordExtraConfig\nlog_destination = 'stderr'\nlogging_collector = on\nlog_directory = 'pg_log'\nlisten_addresses = '*'\nmax_connections = 100\nEOF\n\n# Additional Configuration file for specific coordinator master.\n# You can define each setting by similar means as above.\ncoordSpecificExtraConfig=(none none none none)\ncoordExtraPgHba=none\t# Extra entry for pg_hba.conf.  This file will be added to all the coordinators' pg_hba.conf\ncoordSpecificExtraPgHba=(none none none none)\n\n#----- Additional Slaves -----\n#\n# Please note that this section is just a suggestion how we extend the configuration for\n# multiple and cascaded replication.   They're not used in the current version.\n#\ncoordAdditionalSlaves=n\t\t# Additional slave can be specified as follows: where you\ncoordAdditionalSlaveSet=(cad1)\t\t# Each specifies set of slaves.   This case, two set of slaves are\n\t\t\t\t\t\t\t\t\t\t\t# configured\ncad1_Sync=n\t\t  \t\t# All the slaves at \"cad1\" are connected with asynchronous mode.\n\t\t\t\t\t\t\t# If not, specify \"y\"\n\t\t\t\t\t\t\t# The following lines specifies detailed configuration for each\n\t\t\t\t\t\t\t# slave tag, cad1.  You can define cad2 similarly.\ncad1_Servers=(node08 node09 node06 node07)\t# Hosts\ncad1_dir=$HOME/pgxc/nodes/coord_slave_cad1\ncad1_Dirs=($cad1_dir $cad1_dir $cad1_dir $cad1_dir)\ncad1_ArchLogDir=$HOME/pgxc/nodes/coord_archlog_cad1\ncad1_ArchLogDirs=($cad1_ArchLogDir $cad1_ArchLogDir $cad1_ArchLogDir $cad1_ArchLogDir)\n\n\n#---- Datanodes -------------------------------------------------------------------------------------------------------\n\n#---- Shortcuts --------------\ndatanodeMasterDir=$pgxlDATA/nodes/dn_master\ndatanodeSlaveDir=$HOME/pgxc/nodes/dn_slave\ndatanodeArchLogDir=$HOME/pgxc/nodes/datanode_archlog\n\n#---- Overall ---------------\n#primaryDatanode=datanode1\t\t\t\t# Primary Node.\n# At present, xc has a priblem to issue ALTER NODE against the primay node.  Until it is fixed, the test will be done\n# without this feature.\nprimaryDatanode=node1\t\t\t\t# Primary Node.\ndatanodeNames=(node1 node2)\ndatanodePorts=(5433 5433)\t# Master ports\ndatanodePoolerPorts=(6668 6668)\t# Master pooler ports\ndatanodePgHbaEntries=(0.0.0.0/0)\t# Assumes that all the coordinator (master/slave) accepts\n\t\t\t\t\t\t\t\t\t\t# the same connection\n\t\t\t\t\t\t\t\t\t\t# This list sets up pg_hba.conf for $pgxcOwner user.\n\t\t\t\t\t\t\t\t\t\t# If you'd like to setup other entries, supply them\n\t\t\t\t\t\t\t\t\t\t# through extra configuration files specified below.\n# Note: The above parameter is extracted as \"host all all 0.0.0.0/0 trust\".   If you don't want\n# such setups, specify the value () to this variable and suplly what you want using datanodeExtraPgHba\n# and/or datanodeSpecificExtraPgHba variables.\n#datanodePgHbaEntries=(::1/128)\t# Same as above but for IPv6 addresses\n\n#---- Master ----------------\ndatanodeMasterServers=(datanode1 datanode2)\t# none means this master is not available.\n\t\t\t\t\t\t\t\t\t\t\t\t\t# This means that there should be the master but is down.\n\t\t\t\t\t\t\t\t\t\t\t\t\t# The cluster is not operational until the master is\n\t\t\t\t\t\t\t\t\t\t\t\t\t# recovered and ready to run.\ndatanodeMasterDirs=($datanodeMasterDir $datanodeMasterDir)\ndatanodeMaxWalSender=4\t\t\t\t\t\t\t\t# max_wal_senders: needed to configure slave. If zero value is\n\t\t\t\t\t\t\t\t\t\t\t\t\t# specified, it is expected this parameter is explicitly supplied\n\t\t\t\t\t\t\t\t\t\t\t\t\t# by external configuration files.\n\t\t\t\t\t\t\t\t\t\t\t\t\t# If you don't configure slaves, leave this value zero.\ndatanodeMaxWALSenders=($datanodeMaxWalSender $datanodeMaxWalSender)\n\t\t\t\t\t\t# max_wal_senders configuration for each datanode\n\n#---- Slave -----------------\ndatanodeSlave=n\t\t\t# Specify y if you configure at least one coordiantor slave.  Otherwise, the following\n\t\t\t\t\t\t# configuration parameters will be set to empty values.\n\t\t\t\t\t\t# If no effective server names are found (that is, every servers are specified as none),\n\t\t\t\t\t\t# then datanodeSlave value will be set to n and all the following values will be set to\n\t\t\t\t\t\t# empty values.\ndatanodeSlaveServers=(datanode2 datanode1)\t# value none means this slave is not available\ndatanodeSlavePorts=(15433 15433)\t# value none means this slave is not available\ndatanodeSlavePoolerPorts=(20012 20012)\t# value none means this slave is not available\ndatanodeSlaveSync=y\t\t# If datanode slave is connected in synchronized mode\ndatanodeSlaveDirs=($datanodeSlaveDir $datanodeSlaveDir)\ndatanodeArchLogDirs=( $datanodeArchLogDir $datanodeArchLogDir )\n\n# ---- Configuration files ---\n# You may supply your bash script to setup extra config lines and extra pg_hba.conf entries here.\n# These files will go to corresponding files for the master.\n# Or you may supply these files manually.\ndatanodeExtraConfig=none\t# Extra configuration file for datanodes.  This file will be added to all the\n\t\t\t\t\t\t\t# datanodes' postgresql.conf\ndatanodeSpecificExtraConfig=(none none none none)\ndatanodeExtraPgHba=none\t\t# Extra entry for pg_hba.conf.  This file will be added to all the datanodes' postgresql.conf\ndatanodeSpecificExtraPgHba=(none none none none)\n\n#----- Additional Slaves -----\ndatanodeAdditionalSlaves=n\t# Additional slave can be specified as follows: where you\n# datanodeAdditionalSlaveSet=(dad1 dad2)\t\t# Each specifies set of slaves.   This case, two set of slaves are\n\t\t\t\t\t\t\t\t\t\t\t# configured\n# dad1_Sync=n\t\t  \t\t# All the slaves at \"cad1\" are connected with asynchronous mode.\n\t\t\t\t\t\t\t# If not, specify \"y\"\n\t\t\t\t\t\t\t# The following lines specifies detailed configuration for each\n\t\t\t\t\t\t\t# slave tag, cad1.  You can define cad2 similarly.\n# dad1_Servers=(node08 node09 node06 node07)\t# Hosts\n# dad1_dir=$HOME/pgxc/nodes/coord_slave_cad1\n# dad1_Dirs=($cad1_dir $cad1_dir $cad1_dir $cad1_dir)\n# dad1_ArchLogDir=$HOME/pgxc/nodes/coord_archlog_cad1\n# dad1_ArchLogDirs=($cad1_ArchLogDir $cad1_ArchLogDir $cad1_ArchLogDir $cad1_ArchLogDir)\n\n#---- WAL archives -------------------------------------------------------------------------------------------------\nwalArchive=n\t# If you'd like to configure WAL archive, edit this section.\n\t\t\t\t# Pgxc_ctl assumes that if you configure WAL archive, you configure it\n\t\t\t\t# for all the coordinators and datanodes.\n\t\t\t\t# Default is \"no\".   Please specify \"y\" here to turn it on.\n#\n#\t\tEnd of Configuration Section\n#\n#==========================================================================================================================\n\n#========================================================================================================================\n# The following is for extension.  Just demonstrate how to write such extension.  There's no code\n# which takes care of them so please ignore the following lines.  They are simply ignored by pgxc_ctl.\n# No side effects.\n#=============<< Beginning of future extension demonistration >> ========================================================\n# You can setup more than one backup set for various purposes, such as disaster recovery.\nwalArchiveSet=(war1 war2)\nwar1_source=(master)\t# you can specify master, slave or ano other additional slaves as a source of WAL archive.\n\t\t\t\t\t# Default is the master\nwal1_source=(slave)\nwal1_source=(additiona_coordinator_slave_set additional_datanode_slave_set)\nwar1_host=node10\t# All the nodes are backed up at the same host for a given archive set\nwar1_backupdir=$HOME/pgxc/backup_war1\nwal2_source=(master)\nwar2_host=node11\nwar2_backupdir=$HOME/pgxc/backup_war2\n#=============<< End of future extension demonistration >> ========================================================\n\n```\n\n#### 初始化集群\n`pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf init all`启动\n`pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf stop all`关闭\n\n初始化提示内容如下：\n``` bash\n[postgres@localhost ~]$ pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf init all\n/bin/bash\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /home/postgres/pgxc_ctl\nInitialize GTM master\nThe authenticity of host 'gtm (192.168.230.143)' can't be established.\nECDSA key fingerprint is cd:7e:a2:7d:9b:a9:13:10:96:e9:a4:1a:30:ab:ed:a6.\nAre you sure you want to continue connecting (yes/no)? yes\nmkdir: cannot create directory ‘/home/postgres/pgxl/data’: Permission denied\nThe files belonging to this GTM system will be owned by user \"postgres\".\nThis user must also own the server process.\n\n\ncreating directory /home/postgres/pgxl/data/nodes/gtm ... initgtm: could not create directory \"/home/postgres/pgxl/data\": Permission denied\nbash: /home/postgres/pgxl/data/nodes/gtm/gtm.conf: No such file or directory\ngtm cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtm/gtm.conf\": No such file or directory\ngtm_ctl: PID file \"/home/postgres/pgxl/data/nodes/gtm/gtm.pid\" does not exist\nIs server running?\nDone.\nStart GTM master\nserver starting\ngtm cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtm/gtm.conf\": No such file or directory\nInitialize GTM slave\nmkdir: cannot create directory ‘/home/postgres/pgxl/data’: Permission denied\nThe files belonging to this GTM system will be owned by user \"postgres\".\nThis user must also own the server process.\n\n\ncreating directory /home/postgres/pgxl/data/nodes/gtmSlave ... initgtm: could not create directory \"/home/postgres/pgxl/data\": Permission denied\nbash: /home/postgres/pgxl/data/nodes/gtmSlave/gtm.conf: No such file or directory\nDone.\nStart GTM slaveserver starting\ngtm cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtmSlave/gtm.conf\": No such file or directory\nDone.\nInitialize all the gtm proxies.\nInitializing gtm proxy gtm_pxy1.\nInitializing gtm proxy gtm_pxy2.\nmkdir: cannot create directory ‘/home/postgres/pgxl/data’: Permission denied\nThe files belonging to this GTM system will be owned by user \"postgres\".\nThis user must also own the server process.\n\n\ncreating directory /home/postgres/pgxl/data/nodes/gtm_pxy ... initgtm: could not create directory \"/home/postgres/pgxl/data\": Permission denied\nbash: /home/postgres/pgxl/data/nodes/gtm_pxy/gtm_proxy.conf: No such file or directory\nmkdir: cannot create directory ‘/home/postgres/pgxl/data’: Permission denied\nThe files belonging to this GTM system will be owned by user \"postgres\".\nThis user must also own the server process.\n\n\ncreating directory /home/postgres/pgxl/data/nodes/gtm_pxy ... initgtm: could not create directory \"/home/postgres/pgxl/data\": Permission denied\nbash: /home/postgres/pgxl/data/nodes/gtm_pxy/gtm_proxy.conf: No such file or directory\nDone.\nStarting all the gtm proxies.\nStarting gtm proxy gtm_pxy1.\nStarting gtm proxy gtm_pxy2.\nserver starting\ngtm_proxy cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtm_pxy/gtm_proxy.conf\": No such file or directory\nserver starting\ngtm_proxy cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtm_pxy/gtm_proxy.conf\": No such file or directory\nDone.\nInitialize all the coordinator masters.\nInitialize coordinator master coord1.\nInitialize coordinator master coord2.\n\n[postgres@gtm ~]$ pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf init all\n/bin/bash\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /home/postgres/pgxc_ctl\nInitialize GTM master\nERROR: target directory (/home/postgres/pgxl/data/nodes/gtm) exists and not empty. Skip GTM initilialization\n1:4221830976:2017-10-26 02:15:06.915 PDT -FATAL:  lock file \"gtm.pid\" already exists\n2:4221830976:2017-10-26 02:15:06.915 PDT -HINT:  Is another GTM (PID 14702) running in data directory \"/home/postgres/pgxl/data/nodes/gtm\"?\nLOCATION:  CreateLockFile, main.c:2099\nwaiting for server to shut down.... done\nserver stopped\nDone.\nStart GTM master\nserver starting\nInitialize GTM slave\nwaiting for server to shut down.... done\nserver stopped\nThe files belonging to this GTM system will be owned by user \"postgres\".\nThis user must also own the server process.\n\n\nfixing permissions on existing directory /home/postgres/pgxl/data/nodes/gtmSlave ... ok\ncreating configuration files ... ok\ncreating control file ... ok\n\nSuccess.\nDone.\nStart GTM slaveserver starting\nDone.\nInitialize all the gtm proxies.\nInitializing gtm proxy gtm_pxy1.\nInitializing gtm proxy gtm_pxy2.\nThe files belonging to this GTM system will be owned by user \"postgres\".\nThis user must also own the server process.\n\n\nfixing permissions on existing directory /home/postgres/pgxl/data/nodes/gtm_pxy ... ok\ncreating configuration files ... ok\n\nSuccess.\nThe files belonging to this GTM system will be owned by user \"postgres\".\nThis user must also own the server process.\n\n\nfixing permissions on existing directory /home/postgres/pgxl/data/nodes/gtm_pxy ... ok\ncreating configuration files ... ok\n\nSuccess.\nDone.\nStarting all the gtm proxies.\nStarting gtm proxy gtm_pxy1.\nStarting gtm proxy gtm_pxy2.\nserver starting\nserver starting\nDone.\nInitialize all the coordinator masters.\nInitialize coordinator master coord1.\nInitialize coordinator master coord2.\nThe files belonging to this database system will be owned by user \"postgres\".\nThis user must also own the server process.\n\nThe database cluster will be initialized with locale \"en_US.UTF-8\".\nThe default database encoding has accordingly been set to \"UTF8\".\nThe default text search configuration will be set to \"english\".\n\nData page checksums are disabled.\n\nfixing permissions on existing directory /home/postgres/pgxl/data/nodes/coord ... ok\ncreating subdirectories ... ok\nselecting default max_connections ... 100\nselecting default shared_buffers ... 128MB\nselecting dynamic shared memory implementation ... posix\ncreating configuration files ... ok\nrunning bootstrap script ... ok\nperforming post-bootstrap initialization ... creating cluster information ... ok\nsyncing data to disk ... ok\nfreezing database template0 ... ok\nfreezing database template1 ... ok\nfreezing database postgres ... ok\n\nWARNING: enabling \"trust\" authentication for local connections\nYou can change this by editing pg_hba.conf or using the option -A, or\n--auth-local and --auth-host, the next time you run initdb.\n\nSuccess.\nThe files belonging to this database system will be owned by user \"postgres\".\nThis user must also own the server process.\n\nThe database cluster will be initialized with locale \"en_US.UTF-8\".\nThe default database encoding has accordingly been set to \"UTF8\".\nThe default text search configuration will be set to \"english\".\n\nData page checksums are disabled.\n\nfixing permissions on existing directory /home/postgres/pgxl/data/nodes/coord ... ok\ncreating subdirectories ... ok\nselecting default max_connections ... 100\nselecting default shared_buffers ... 128MB\nselecting dynamic shared memory implementation ... posix\ncreating configuration files ... ok\nrunning bootstrap script ... ok\nperforming post-bootstrap initialization ... creating cluster information ... ok\nsyncing data to disk ... ok\nfreezing database template0 ... ok\nfreezing database template1 ... ok\nfreezing database postgres ... ok\n\nWARNING: enabling \"trust\" authentication for local connections\nYou can change this by editing pg_hba.conf or using the option -A, or\n--auth-local and --auth-host, the next time you run initdb.\n\nSuccess.\nDone.\nStarting coordinator master.\nStarting coordinator master coord1\nStarting coordinator master coord2\n2017-10-26 02:15:25.296 PDT [15951] LOG:  listening on IPv4 address \"0.0.0.0\", port 5432\n2017-10-26 02:15:25.296 PDT [15951] LOG:  listening on IPv6 address \"::\", port 5432\n2017-10-26 02:15:25.297 PDT [15951] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5432\"\n2017-10-26 02:15:25.304 PDT [15951] LOG:  redirecting log output to logging collector process\n2017-10-26 02:15:25.304 PDT [15951] HINT:  Future log output will appear in directory \"pg_log\".\n2017-10-26 02:15:25.321 PDT [15847] LOG:  listening on IPv4 address \"0.0.0.0\", port 5432\n2017-10-26 02:15:25.321 PDT [15847] LOG:  listening on IPv6 address \"::\", port 5432\n2017-10-26 02:15:25.323 PDT [15847] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5432\"\n2017-10-26 02:15:25.330 PDT [15847] LOG:  redirecting log output to logging collector process\n2017-10-26 02:15:25.330 PDT [15847] HINT:  Future log output will appear in directory \"pg_log\".\nDone.\nInitialize all the datanode masters.\nInitialize the datanode master node1.\nInitialize the datanode master node2.\nThe files belonging to this database system will be owned by user \"postgres\".\nThis user must also own the server process.\n\nThe database cluster will be initialized with locale \"en_US.UTF-8\".\nThe default database encoding has accordingly been set to \"UTF8\".\nThe default text search configuration will be set to \"english\".\n\nData page checksums are disabled.\n\nfixing permissions on existing directory /home/postgres/pgxl/data/nodes/dn_master ... ok\ncreating subdirectories ... ok\nselecting default max_connections ... 100\nselecting default shared_buffers ... 128MB\nselecting dynamic shared memory implementation ... posix\ncreating configuration files ... ok\nrunning bootstrap script ... ok\nperforming post-bootstrap initialization ... creating cluster information ... ok\nsyncing data to disk ... ok\nfreezing database template0 ... ok\nfreezing database template1 ... ok\nfreezing database postgres ... ok\n\nWARNING: enabling \"trust\" authentication for local connections\nYou can change this by editing pg_hba.conf or using the option -A, or\n--auth-local and --auth-host, the next time you run initdb.\n\nSuccess.\nThe files belonging to this database system will be owned by user \"postgres\".\nThis user must also own the server process.\n\nThe database cluster will be initialized with locale \"en_US.UTF-8\".\nThe default database encoding has accordingly been set to \"UTF8\".\nThe default text search configuration will be set to \"english\".\n\nData page checksums are disabled.\n\nfixing permissions on existing directory /home/postgres/pgxl/data/nodes/dn_master ... ok\ncreating subdirectories ... ok\nselecting default max_connections ... 100\nselecting default shared_buffers ... 128MB\nselecting dynamic shared memory implementation ... posix\ncreating configuration files ... ok\nrunning bootstrap script ... ok\nperforming post-bootstrap initialization ... creating cluster information ... ok\nsyncing data to disk ... ok\nfreezing database template0 ... ok\nfreezing database template1 ... ok\nfreezing database postgres ... ok\n\nWARNING: enabling \"trust\" authentication for local connections\nYou can change this by editing pg_hba.conf or using the option -A, or\n--auth-local and --auth-host, the next time you run initdb.\n\nSuccess.\nDone.\nStarting all the datanode masters.\nStarting datanode master node1.\nStarting datanode master node2.\n2017-10-26 02:15:32.075 PDT [16427] LOG:  listening on IPv4 address \"0.0.0.0\", port 5433\n2017-10-26 02:15:32.075 PDT [16427] LOG:  listening on IPv6 address \"::\", port 5433\n2017-10-26 02:15:32.077 PDT [16427] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5433\"\n2017-10-26 02:15:32.083 PDT [16427] LOG:  redirecting log output to logging collector process\n2017-10-26 02:15:32.083 PDT [16427] HINT:  Future log output will appear in directory \"pg_log\".\n2017-10-26 02:15:32.109 PDT [16323] LOG:  listening on IPv4 address \"0.0.0.0\", port 5433\n2017-10-26 02:15:32.109 PDT [16323] LOG:  listening on IPv6 address \"::\", port 5433\n2017-10-26 02:15:32.111 PDT [16323] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5433\"\n2017-10-26 02:15:32.116 PDT [16323] LOG:  redirecting log output to logging collector process\n2017-10-26 02:15:32.116 PDT [16323] HINT:  Future log output will appear in directory \"pg_log\".\nDone.\nALTER NODE coord1 WITH (HOST='datanode1', PORT=5432);\nALTER NODE\nCREATE NODE coord2 WITH (TYPE='coordinator', HOST='datanode2', PORT=5432);\nCREATE NODE\nCREATE NODE node1 WITH (TYPE='datanode', HOST='datanode1', PORT=5433, PRIMARY, PREFERRED);\nCREATE NODE\nCREATE NODE node2 WITH (TYPE='datanode', HOST='datanode2', PORT=5433);\nCREATE NODE\nSELECT pgxc_pool_reload();\n pgxc_pool_reload\n------------------\n t\n(1 row)\n\nCREATE NODE coord1 WITH (TYPE='coordinator', HOST='datanode1', PORT=5432);\nCREATE NODE\nALTER NODE coord2 WITH (HOST='datanode2', PORT=5432);\nALTER NODE\nCREATE NODE node1 WITH (TYPE='datanode', HOST='datanode1', PORT=5433, PRIMARY);\nCREATE NODE\nCREATE NODE node2 WITH (TYPE='datanode', HOST='datanode2', PORT=5433, PREFERRED);\nCREATE NODE\nSELECT pgxc_pool_reload();\n pgxc_pool_reload\n------------------\n t\n(1 row)\n\nDone.\nEXECUTE DIRECT ON (node1) 'CREATE NODE coord1 WITH (TYPE=''coordinator'', HOST=''datanode1'', PORT=5432)';\nEXECUTE DIRECT\nEXECUTE DIRECT ON (node1) 'CREATE NODE coord2 WITH (TYPE=''coordinator'', HOST=''datanode2'', PORT=5432)';\nEXECUTE DIRECT\nEXECUTE DIRECT ON (node1) 'ALTER NODE node1 WITH (TYPE=''datanode'', HOST=''datanode1'', PORT=5433, PRIMARY, PREFERRED)';\nEXECUTE DIRECT\nEXECUTE DIRECT ON (node1) 'CREATE NODE node2 WITH (TYPE=''datanode'', HOST=''datanode2'', PORT=5433, PREFERRED)';\nEXECUTE DIRECT\nEXECUTE DIRECT ON (node1) 'SELECT pgxc_pool_reload()';\n pgxc_pool_reload\n------------------\n t\n(1 row)\n\nEXECUTE DIRECT ON (node2) 'CREATE NODE coord1 WITH (TYPE=''coordinator'', HOST=''datanode1'', PORT=5432)';\nEXECUTE DIRECT\nEXECUTE DIRECT ON (node2) 'CREATE NODE coord2 WITH (TYPE=''coordinator'', HOST=''datanode2'', PORT=5432)';\nEXECUTE DIRECT\nEXECUTE DIRECT ON (node2) 'CREATE NODE node1 WITH (TYPE=''datanode'', HOST=''datanode1'', PORT=5433, PRIMARY, PREFERRED)';\nEXECUTE DIRECT\nEXECUTE DIRECT ON (node2) 'ALTER NODE node2 WITH (TYPE=''datanode'', HOST=''datanode2'', PORT=5433, PREFERRED)';\nEXECUTE DIRECT\nEXECUTE DIRECT ON (node2) 'SELECT pgxc_pool_reload()';\n pgxc_pool_reload\n------------------\n t\n(1 row)\n\nDone.\n```\n- 遇到的问题\n安装时出现`permission denied`\n是因为权限不足 使用`sudo chmod -R 777 /usr `\n或`sudo pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf init all`\n\n### 集群验证\n在datanode1节点上\n连接上5432端口，即node1上的coordinator，查看集群节点状态\n\n``` bash\n[postgres@datanode1 ~]$ psql -p 5432\npsql (PGXL 9.5r1.4, based on PG 9.5.5 (Postgres-XL 9.5r1.4))\nType \"help\" for help.\n\npostgres=# select * from pgxc_node;\n node_name | node_type | node_port | node_host | nodeis_primary | nodeis_preferred |   node_id\n-----------+-----------+-----------+-----------+----------------+------------------+-------------\n coord1    | C         |      5432 | datanode1 | f              | f                |  1885696643\n coord2    | C         |      5432 | datanode2 | f              | f                | -1197102633\n node1     | D         |      5433 | datanode1 | t              | t                |  1148549230\n node2     | D         |      5433 | datanode2 | f              | f                |  -927910690\n(4 rows)\n```\n\n如上面所示，可看到2个coordinator，2个node。集群状态正常\n尝试创建测试表test1，并插入数据\n\n``` bash\npostgres=# create table test1(id int,name text);\nCREATE TABLE\npostgres=# insert into test1(id,name) select generate_series(1,8),'test';\nINSERT 0 8\npostgres=# select * from test1;\n id | name\n----+------\n  1 | test\n  2 | test\n  5 | test\n  6 | test\n  8 | test\n  3 | test\n  4 | test\n  7 | test\n(8 rows)\n\npostgres=# exit\npostgres-# \\q\n```\n\n\n连接到datanode1服务器的5433端口，即node1，查看测试表的数据\n``` bash\n[postgres@datanode1 ~]$ psql -p 5433\npsql (PGXL 9.5r1.4, based on PG 9.5.5 (Postgres-XL 9.5r1.4))\nType \"help\" for help.\n\npostgres=# select * from test1;\n id | name\n----+------\n  1 | test\n  2 | test\n  5 | test\n  6 | test\n  8 | test\n(5 rows)\n```\n可看到表中数据是不全的\n再去datanode2服务器查看\n先连接到5432端口，即coordinator\n``` bash\n[postgres@datanode2 ~]$ psql -p 5432\npsql (PGXL 9.5r1.4, based on PG 9.5.5 (Postgres-XL 9.5r1.4))\nType \"help\" for help.\n\npostgres=# select * from test1;\n id | name\n----+------\n  1 | test\n  2 | test\n  5 | test\n  6 | test\n  8 | test\n  3 | test\n  4 | test\n  7 | test\n(8 rows)\n\npostgres=# \\q\n```\n再切换到5433端口，即node2\n``` bash\n[postgres@datanode2 ~]$ psql -p 5433\npsql (PGXL 9.5r1.4, based on PG 9.5.5 (Postgres-XL 9.5r1.4))\nType \"help\" for help.\n\npostgres=# select * from test1;\n id | name\n----+------\n  3 | test\n  4 | test\n  7 | test\n(3 rows)\n```\n正好是node1中缺少的那部分数据\n证实分布式数据库集群搭建完成\n\n### 数据库集群日常操作\n关闭集群\n在gtm服务器上执行\n``` bash\n[postgres@gtm ~]$ pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf stop all\n/bin/bash\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /home/postgres/pgxc_ctl\nStopping all the coordinator masters.\nStopping coordinator master coord1.\nStopping coordinator master coord2.\nDone.\nStopping all the datanode masters.\nStopping datanode master node1.\nStopping datanode master node2.\nDone.\nStopping all the gtm proxies.\nStopping gtm proxy gtm_pxy1.\nStopping gtm proxy gtm_pxy2.\nwaiting for server to shut down.... done\nserver stopped\nwaiting for server to shut down.... done\nserver stopped\nDone.\nStop GTM slave\nwaiting for server to shut down.... done\nserver stopped\nStop GTM master\nwaiting for server to shut down.... done\nserver stopped\n```\n### 开启集群\n在gtm服务器上执行\n\n``` bash\n[postgres@gtm ~]$ pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf start all\n/bin/bash\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /home/postgres/pgxc_ctl\nStart GTM master\nserver starting\nStart GTM slaveserver starting\nDone.\nStarting all the gtm proxies.\nStarting gtm proxy gtm_pxy1.\nStarting gtm proxy gtm_pxy2.\nserver starting\nserver starting\nDone.\nStarting coordinator master.\nStarting coordinator master coord1\nStarting coordinator master coord2\n2017-10-26 20:21:35.537 PDT [22477] LOG:  listening on IPv4 address \"0.0.0.0\", port 5432\n2017-10-26 20:21:35.538 PDT [22477] LOG:  listening on IPv6 address \"::\", port 5432\n2017-10-26 20:21:35.539 PDT [22477] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5432\"\n2017-10-26 20:21:35.556 PDT [22477] LOG:  redirecting log output to logging collector process\n2017-10-26 20:21:35.556 PDT [22477] HINT:  Future log output will appear in directory \"pg_log\".\n2017-10-26 20:21:35.563 PDT [22504] LOG:  listening on IPv4 address \"0.0.0.0\", port 5432\n2017-10-26 20:21:35.563 PDT [22504] LOG:  listening on IPv6 address \"::\", port 5432\n2017-10-26 20:21:35.565 PDT [22504] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5432\"\n2017-10-26 20:21:35.583 PDT [22504] LOG:  redirecting log output to logging collector process\n2017-10-26 20:21:35.583 PDT [22504] HINT:  Future log output will appear in directory \"pg_log\".\nDone.\nStarting all the datanode masters.\nStarting datanode master node1.\nStarting datanode master node2.\n2017-10-26 20:21:36.360 PDT [22590] LOG:  listening on IPv4 address \"0.0.0.0\", port 5433\n2017-10-26 20:21:36.360 PDT [22590] LOG:  listening on IPv6 address \"::\", port 5433\n2017-10-26 20:21:36.362 PDT [22590] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5433\"\n2017-10-26 20:21:36.382 PDT [22590] LOG:  redirecting log output to logging collector process\n2017-10-26 20:21:36.382 PDT [22590] HINT:  Future log output will appear in directory \"pg_log\".\n2017-10-26 20:21:36.374 PDT [22617] LOG:  listening on IPv4 address \"0.0.0.0\", port 5433\n2017-10-26 20:21:36.374 PDT [22617] LOG:  listening on IPv6 address \"::\", port 5433\n2017-10-26 20:21:36.375 PDT [22617] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5433\"\n2017-10-26 20:21:36.395 PDT [22617] LOG:  redirecting log output to logging collector process\n2017-10-26 20:21:36.395 PDT [22617] HINT:  Future log output will appear in directory \"pg_log\".\nDone.\n```\n\n\n#### 参考文档\n[Postgres-XL 9.5简易搭建](http://blog.csdn.net/sunbocong/article/details/78363453)\n\n","slug":"fbs","published":1,"updated":"2018-06-18T17:46:43.661Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1is1ov0028cdon9kpfftkm","content":"<blockquote>\n<p>之前因为公司的产品需求，研究过分布式方案，最近抽空整理了下</p>\n</blockquote>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><ul>\n<li>主要是以<code>nginx</code>搭载<code>keepalived</code>实现 web 业务服务器 <code>keepalives</code>防止单点故障</li>\n<li><code>reids</code>分布式缓存</li>\n<li><code>fastdfs</code>分布式文件</li>\n<li><code>postgre-xl</code>分布式数据库服务器</li>\n</ul>\n<blockquote>\n<p>简单说，分布式是以缩短单个任务的执行时间来提升效率的，而集群则是通过提高单位时间内执行的任务数来提升效率。</p>\n</blockquote>\n<p><a href=\"https://segmentfault.com/a/1190000002418709\" target=\"_blank\" rel=\"external\">参考</a></p>\n<a id=\"more\"></a>\n<blockquote>\n<p>以下是实验中遇到的问题以及安装方法</p>\n</blockquote>\n<h1 id=\"CentOS7-安装问题集\"><a href=\"#CentOS7-安装问题集\" class=\"headerlink\" title=\"CentOS7 安装问题集\"></a>CentOS7 安装问题集</h1><blockquote>\n<p>远程无法访问（防火墙问题）</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">firewall-cmd --zone=public --add-port=80/tcp --permanent</div><div class=\"line\"></div><div class=\"line\">firewall-cmd --reload</div><div class=\"line\"></div><div class=\"line\">systemctl stop firewalld.service <span class=\"comment\">#停止</span></div><div class=\"line\"></div><div class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld.service <span class=\"comment\">#禁用</span></div><div class=\"line\"></div><div class=\"line\">firewall-cmd --state <span class=\"comment\">#查看默认防火墙状态（关闭后显示notrunning，开启后显示running）</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># liunx图形界面获得root权限</span></div><div class=\"line\">直接 `sudo nautilus` （unity，gnome）或 `sudo dolphin` (kde) ,就可以以root权限打开文件管理器了</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># liunx 远程获取root权限</span></div><div class=\"line\">`sudo vi /etc/ssh/sshd_config`</div><div class=\"line\">将PermitRootLogin值改yes</div><div class=\"line\">允许不输入密码登录</div><div class=\"line\">将PermitEmptyPasswords yes前面的<span class=\"comment\">#号去掉</span></div><div class=\"line\">重启服务：service sshd restart（/etc/initd.d/sshd restart）</div></pre></td></tr></table></figure>\n<h1 id=\"nginx\"><a href=\"#nginx\" class=\"headerlink\" title=\"nginx\"></a>nginx</h1><p>参考另一篇<a href=\"https://rsl140.github.io/blog/2018/01/06/nginx/\">nginx 安装</a></p>\n<h1 id=\"keepalives\"><a href=\"#keepalives\" class=\"headerlink\" title=\"keepalives\"></a>keepalives</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Keepalived 是一个基于 VRRP 协议来实现的服务高可用方案，可以利用其来避免 IP 单点故障，类似的工具还有 heartbeat、corosync、pacemaker。</p>\n<p>但是它一般不会单独出现，而是与其它负载均衡技术（如 lvs、haproxy、nginx）一起工作来达到集群的高可用。</p>\n<p>Keepalived 的作用是检测服务器的状态，如果有一台 web 服务器死机，或工作出现故障，Keepalived 将检测到，并将有故障的服务器从系统中剔除，同时使用其他服务器代替该服务器的工作；</p>\n<p>当服务器工作正常后 Keepalived 自动将服务器加入到服务器群中，这些工作全部自动完成，不需要人工干涉，需要人工做的只是修复故障的服务器。</p>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">graph LR</div><div class=\"line\">用户 --&gt; 交换机</div><div class=\"line\">交换机 --&gt; Nginx1:负载均衡/keepalived:主</div><div class=\"line\">Nginx2:负载均衡/keepalived:备 --&gt; 心跳检查</div><div class=\"line\">心跳检查 --&gt; Nginx1:负载均衡/keepalived:主</div><div class=\"line\">Nginx1:负载均衡/keepalived:主 --&gt; tomact1</div><div class=\"line\">Nginx1:负载均衡/keepalived:主 --&gt; tomact2</div></pre></td></tr></table></figure>\n<p>首先 Keepalived 可以在主机上产生一个虚拟的 ip, 这里叫做 vip(v 是 virtual 的意思):192.168.200.150, keepalived 会将这个 vip 绑定到交换机上.</p>\n<p>当用户访问主机:192.168.200.129 时, 交换机会通过这个 ip 和 vip 的对应找到 192.168.200.129 上的 Nginx 进行处理.</p>\n<p>如果当有一天 192.168.200.129 上的 Nginx 挂掉的时候, Keepalived 会立即在备机上生成一个相同的 vip: 192.168.200.150, 当用户继续访问 192.168.200.129 时, 交换机上已经绑定了 vip, 这时发现这个 vip 是存在于 192.168.200.130 上面的, 所以直接将请求转发到了备机上.</p>\n<p>如果主机被修复好能够继续对外提供服务时, 这时 keepalived 会将主机上继续生成这个 vip, 同时回收在备机上生成的 vip. 这个是通过心跳检查来判断主机已恢复使用.</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><p>wget <a href=\"http://www.keepalived.org/software/keepalived-1.2.23.tar.gz\" target=\"_blank\" rel=\"external\">http://www.keepalived.org/software/keepalived-1.2.23.tar.gz</a></p>\n<h3 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h3><p>tar -zxvf keepalived-1.2.23.tar.gz<br>cd keepalived-1.2.23</p>\n<h3 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>./configure –prefix=/usr/local/keepalived #prefix 指定安装目录</p>\n<p>如果提示错误 openssl 不存在<br>sudo apt-get install openssl<br>sudo apt-get install libssl-dev</p>\n<p>make<br>make install</p>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\">【/usr/<span class=\"built_in\">local</span>/keepalived/etc/keepalived/keepalived.conf】</div><div class=\"line\">   global_defs &#123;</div><div class=\"line\">       notification_email &#123; <span class=\"comment\">#指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。</span></div><div class=\"line\">           acassen@firewall.loc</div><div class=\"line\">           failover@firewall.loc</div><div class=\"line\">           sysadmin@firewall.loc</div><div class=\"line\">       &#125;</div><div class=\"line\">       notification_email_from Alexandre.Cassen@firewall.loc <span class=\"comment\">#指定发件人</span></div><div class=\"line\">       smtp_server 127.0.0.1 <span class=\"comment\">#发送email的smtp地址</span></div><div class=\"line\">       smtp_connect_timeout 30 <span class=\"comment\">#超时时间</span></div><div class=\"line\">       router_id nginx <span class=\"comment\">#运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同</span></div><div class=\"line\">       vrrp_skip_check_adv_addr</div><div class=\"line\">       vrrp_strict</div><div class=\"line\">       vrrp_garp_interval 0</div><div class=\"line\">       vrrp_gna_interval 0</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\">   vrrp_instance VI_1 &#123;</div><div class=\"line\">       state MASTER <span class=\"comment\">#指定当前节点为主节点 备用节点上设置为BACKUP即可</span></div><div class=\"line\">       interface eth0 <span class=\"comment\">#绑定虚拟IP的网络接口,使用ip a 查看网卡名称2.网卡名称</span></div><div class=\"line\">       virtual_router_id 51 <span class=\"comment\">#VRRP组名，两个节点的设置必须一样，以指明各个节点属于同一VRRP组</span></div><div class=\"line\">       priority 100 <span class=\"comment\">#主节点的优先级（1-254之间），备用节点必须比主节点优先级低</span></div><div class=\"line\">       advert_int 1</div><div class=\"line\">       authentication &#123; <span class=\"comment\">#设置验证信息，两个节点必须一致</span></div><div class=\"line\">       　　auth_type PASS</div><div class=\"line\">       　　auth_pass 1111</div><div class=\"line\">       &#125;</div><div class=\"line\">       virtual_ipaddress &#123; <span class=\"comment\">#指定虚拟IP, 两个节点设置必须一样</span></div><div class=\"line\">       　　192.168.0.110/24</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\">   【/usr/<span class=\"built_in\">local</span>/keepalived/etc/sysconfig/keepalived】</div><div class=\"line\"></div><div class=\"line\">   KEEPALIVED_OPTIONS=<span class=\"string\">\"-D -f /usr/local/keepalived/etc/keepalived/keepalived.conf\"</span> <span class=\"comment\">#指定keepalived配置文件路径</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">因为我们使用非默认路径（/usr/<span class=\"built_in\">local</span>）安装keepalived，需要设置一些软链接以保证keepalived能正常启动</div><div class=\"line\"></div><div class=\"line\">ln <span class=\"_\">-s</span> /usr/<span class=\"built_in\">local</span>/keepalived/sbin/keepalived  /usr/bin <span class=\"comment\">#将keepalived主程序加入到环境变量</span></div><div class=\"line\">ln <span class=\"_\">-s</span> /usr/<span class=\"built_in\">local</span>/keepalived/etc/sysconfig/keepalived  /etc/sysconfig/ <span class=\"comment\">#keepalived启动脚本变量引用文件，默认文件路径是/etc/sysconfig/，也可以不做软链接，直接修改启动脚本中文件路径即可</span></div><div class=\"line\">cp /usr/<span class=\"built_in\">local</span>/src/keepalived-1.4.0/keepalived/etc/init.d/keepalived /etc/init.d/</div><div class=\"line\">cp -r ./keepalived/etc/keepalived  /etc/  <span class=\"comment\">#注意更新</span></div></pre></td></tr></table></figure>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">service keepalived start|stop|restart</div><div class=\"line\">systemctl daemon-reload</div><div class=\"line\">chkconfig keepalived on</div></pre></td></tr></table></figure>\n<p>默认的配置文件中，指定了虚拟可使用ip addr（或ip a）命令验证之。查看网卡下是否有虚拟ip<br>如果虚拟ip ping不同<br>1.vim /etc/keepalived/keepalived.conf<br>把这个注释就可以了<br>vrrp_strict</p>\n<p>2.可能上级交换机或路由器绑定了apr，也就是ip与mac地址绑定<br>可以使用 arping -I [网卡名] -c 5 -s [本机IP或vip] [网关] 看一下接收情况</p>\n<p>应用</p>\n<p>keepalived两种模式：主-备、主-主</p>\n<p>主-备</p>\n<p><code>虚拟IP：192.168.0.110         主节点：192.168.0.50          备用节点：192.168.0.51</code></p>\n<h3 id=\"主配置文件\"><a href=\"#主配置文件\" class=\"headerlink\" title=\"主配置文件\"></a>主配置文件</h3><p>   【/usr/local/keepalived/etc/keepalived/keepalived.conf】</p>\n<p>   global_defs {<br>       notification_email { #指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。<br>           acassen@firewall.loc<br>           failover@firewall.loc<br>           sysadmin@firewall.loc<br>       }<br>       notification_email_from Alexandre.Cassen@firewall.loc #指定发件人<br>       smtp_server 127.0.0.1 #发送email的smtp地址<br>       smtp_connect_timeout 30 #超时时间<br>       router_id LVS_DEVEL #运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同<br>       vrrp_skip_check_adv_addr<br>       vrrp_strict<br>       vrrp_garp_interval 0<br>       vrrp_gna_interval 0<br>   }</p>\n<p>   vrrp_instance VI_1 {<br>       state MASTER #指定当前节点为主节点 备用节点上设置为BACKUP即可<br>       interface eth0 #绑定虚拟IP的网络接口 使用ip a查看<br>       virtual_router_id 51 #VRRP组名，两个节点的设置必须一样，以指明各个节点属于同一VRRP组<br>       priority 100 #主节点的优先级（1-254之间），备用节点必须比主节点优先级低<br>       advert_int 1<br>       authentication { #设置验证信息，两个节点必须一致<br>           auth_type PASS<br>           auth_pass 1111<br>       }<br>       virtual_ipaddress { #指定虚拟IP, 两个节点设置必须一样<br>           192.168.0.110/24<br>       }<br>   }</p>\n<h3 id=\"备配置文件\"><a href=\"#备配置文件\" class=\"headerlink\" title=\"备配置文件\"></a>备配置文件</h3><p>   【/usr/local/keepalived/etc/keepalived/keepalived.conf】</p>\n<p>   global_defs {<br>       notification_email { #指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。<br>           acassen@firewall.loc<br>           failover@firewall.loc<br>           sysadmin@firewall.loc<br>       }<br>       notification_email_from Alexandre.Cassen@firewall.loc #指定发件人<br>       smtp_server 127.0.0.1 #发送email的smtp地址<br>       smtp_connect_timeout 30 #超时时间<br>       router_id LVS_DEVEL #运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同<br>       vrrp_skip_check_adv_addr<br>       vrrp_strict<br>       vrrp_garp_interval 0<br>       vrrp_gna_interval 0<br>   }</p>\n<p>   vrrp_instance VI_1 {<br>       state BACKUP #指定当前节点为主节点 备用节点上设置为BACKUP即可<br>       interface eth0 #绑定虚拟IP的网络接口<br>       virtual_router_id 51 #VRRP组名，两个节点的设置必须一样，以指明各个节点属于同一VRRP组<br>       priority 99 #主节点的优先级（1-254之间），备用节点必须比主节点优先级低<br>       advert_int 1<br>       authentication { #设置验证信息，两个节点必须一致<br>           auth_type PASS<br>           auth_pass 1111<br>       }<br>       virtual_ipaddress { #指定虚拟IP, 两个节点设置必须一样<br>           192.168.0.110/24<br>       }<br>   }</p>\n<p>主-主</p>\n<p>虚拟IP：192.168.1.21、192.168.1.22      A节点：192.168.1.23       B节点：192.168.1.24</p>\n<p>主备模式的缺点就是始终只有一台机器位于工作状态，另外一台机器永远是备用状态，存在资源浪费之问题。</p>\n<p>双主模式允许两台机器均处于工作状态并互相作为备份。搭建keepalived双方模式的要素：</p>\n<p>1.必须有两个虚拟IP, 分别绑定至两个节点上</p>\n<p>2.每个节点作为某个虚拟IP的主节点，并同时作为另外一个虚拟IP的备用节点。</p>\n<p>3.当某个节点产生故障时，两个虚拟IP自动绑定至正常节点上</p>\n<p>也就是说，两个节点的配置应该是交叉的，对同个虚拟IP，交叉互为主备。</p>\n<h3 id=\"节点A配置文件\"><a href=\"#节点A配置文件\" class=\"headerlink\" title=\"节点A配置文件\"></a>节点A配置文件</h3><p>   【/usr/local/keepalived/etc/keepalived/keepalived.conf】</p>\n<p>   global_defs {<br>       notification_email { #指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。<br>           acassen@firewall.loc<br>           failover@firewall.loc<br>           sysadmin@firewall.loc<br>       }<br>       notification_email_from Alexandre.Cassen@firewall.loc #指定发件人<br>       smtp_server 127.0.0.1 #发送email的smtp地址<br>       smtp_connect_timeout 30 #超时时间<br>       router_id LVS_DEVEL #运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同<br>       vrrp_skip_check_adv_addr<br>       vrrp_strict<br>       vrrp_garp_interval 0<br>       vrrp_gna_interval 0<br>   }</p>\n<p>   vrrp_instance VI_1 {<br>       state MASTER<br>       interface eth0<br>       virtual_router_id 51 #本机两个vrrp_instance组的此值不能相同，但对应备用节点的此值必须相同<br>       priority 100 #对应备用节点值应该比此值小<br>       advert_int 1<br>       authentication {<br>           auth_type PASS<br>           auth_pass 1111<br>       }<br>       virtual_ipaddress {<br>           192.168.1.21/24<br>       }<br>   }</p>\n<p>   vrrp_instance VI_2 {<br>       state BACKUP<br>       interface eth0<br>       virtual_router_id 52 #本机两个vrrp_instance组的此值不能相同，但对应备用节点的此值必须相同<br>       priority 99 #主节点的值应该比此值大<br>       advert_int 1<br>       authentication {<br>           auth_type PASS<br>           auth_pass 1111<br>       }<br>       virtual_ipaddress {<br>           192.168.1.22/24<br>       }<br>   }</p>\n<h3 id=\"节点B配置文件\"><a href=\"#节点B配置文件\" class=\"headerlink\" title=\"节点B配置文件\"></a>节点B配置文件</h3><p>   【/usr/local/keepalived/etc/keepalived/keepalived.conf】</p>\n<p>   global_defs {<br>   　　　notification_email { #指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。<br>   　　　　acassen@firewall.loc<br>   　　　　failover@firewall.loc<br>   　　　　sysadmin@firewall.loc<br>   }<br>   　　notification_email_from Alexandre.Cassen@firewall.loc #指定发件人<br>   　　smtp_server 127.0.0.1 #发送email的smtp地址<br>   　　smtp_connect_timeout 30 #超时时间<br>   　　router_id LVS_DEVEL #运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同<br>   　　vrrp_skip_check_adv_addr<br>   　　vrrp_strict<br>   　　vrrp_garp_interval 0<br>   　　vrrp_gna_interval 0<br>   }</p>\n<p>   vrrp_instance VI_1 {<br>   　　state BACKUP<br>   　　interface eth0<br>   　　virtual_router_id 51 #本机两个vrrp_instance组的此值不能相同，但对应备用节点的此值必须相同<br>   　　priority 99 #对应主节点值应该比此值大<br>   　　advert_int 1<br>   　　authentication {<br>   　　　　auth_type PASS<br>   　　　　auth_pass 1111<br>   　　}<br>   　　virtual_ipaddress {<br>   　　　　192.168.1.21/24<br>   　　}<br>   }</p>\n<p>   vrrp_instance VI_2 {<br>   　　state MASTER<br>   　　interface eth0<br>   　　virtual_router_id 52 #本机两个vrrp_instance组的此值不能相同，但对应备用节点的此值必须相同<br>   　　priority 100 #对应备用节点的值应该比此值小<br>   　　advert_int 1<br>   　　authentication {<br>   　　　　auth_type PASS<br>   　　　　auth_pass 1111<br>   　　}<br>   　　virtual_ipaddress {<br>   　　　　192.168.1.22/24<br>   　　}<br>   }</p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>两个节点实际都处于正常工作状态，但是无法接收到彼此的组播通知，这时两个节点均强行绑定虚拟IP，导致不可预料的后果。</p>\n<p>这时就需要设置仲裁，即每个节点必须判断自身的状态（应用服务状态及自身网络状态），要实现这两点可使用自定义shell脚本实现，通过周期性地检查自身应用服务状态，并不断ping网关（或其它可靠的参考IP）均可。当自身服务异常、或无法ping通网关，则认为自身出现故障，就应该移除掉虚拟IP(停止keepalived服务即可）。</p>\n<p>主要借助keepalived提供的vrrp_script及track_script实现：</p>\n<p>在keepalived的配置文件最前面加入以下代码，定义一个跟踪脚本：</p>\n<p>vrrp_script check_local { #定义一个名称为check_local的检查脚本<br>　　script “/usr/local/keepalived/bin/check_local.sh” #shell脚本的路径<br>　　interval 5 #运行间隔<br>}</p>\n<p>再在vrrp_instance配置中加入以下代码使用上面定义的检测脚本：</p>\n<p>track_script {<br>　　check_local<br>}<br>我们在/usr/local/keepalived/bin/check_local.sh定义的检测规则是：</p>\n<ol>\n<li><p>自身web服务故障（超时，http返回状态不是200）</p>\n</li>\n<li><p>无法ping通网关</p>\n</li>\n<li><p>产生以上任何一个问题，均应该移除本机的虚拟IP(停止keepalived实例即可)</p>\n</li>\n</ol>\n<p>但这里有个小问题，如果本机或是网关偶尔出现一次故障，那么我们不能认为是服务故障。更好的做法是如果连续N次检测本机服务不正常或连接N次无法ping通网关，才认为是故障产生，才需要进行故障转移。</p>\n<p>但这么做的缺点是，如果脚本检测到故障产生，并停止掉了keepalived服务，那么当故障恢复后，keepalived是无法自动恢复的。</p>\n<p>还可以利用独立的脚本以秒级的间隔检查自身服务及网关连接性，再根据故障情况控制keepalived的运行或是停止。</p>\n<p>在每个节点运行shell脚本（check_service.sh）检测本机的服务是否正常，一旦检测到服务异常时，停止掉本机的keepalived, 如此虚拟IP自动转移到备用机器之上，如每隔3秒检测一次本机服务状态，如果连接3次检测失败，则停止掉keepalived实例。同时如果本机服务是正常的，但是keepalived没有启动（故障恢复之后），则启动keepalived，以达到故障恢复之目的。</p>\n<p>check_service.sh文件的内容<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">!/bin/bash</div><div class=\"line\"></div><div class=\"line\">   pidfile=/var/lock/subsys/`basename <span class=\"variable\">$0</span>`.pid</div><div class=\"line\">   <span class=\"keyword\">if</span> [ <span class=\"_\">-f</span> <span class=\"variable\">$pidfile</span> ] &amp;&amp; [ <span class=\"_\">-e</span> /proc/`cat <span class=\"variable\">$pidfile</span>` ] ; <span class=\"keyword\">then</span></div><div class=\"line\">   　　<span class=\"built_in\">exit</span> 1</div><div class=\"line\">   <span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\">   <span class=\"built_in\">trap</span> <span class=\"string\">\"rm -fr <span class=\"variable\">$pidfile</span> ; exit 0\"</span> 1 2 3 15</div><div class=\"line\">   <span class=\"built_in\">echo</span> $$ &gt; <span class=\"variable\">$pidfile</span></div><div class=\"line\"></div><div class=\"line\">   maxfails=3</div><div class=\"line\">   fails=0</div><div class=\"line\">   success=0</div><div class=\"line\"></div><div class=\"line\">   <span class=\"keyword\">while</span> [ 1 ]</div><div class=\"line\">   <span class=\"keyword\">do</span></div><div class=\"line\">   　　/usr/bin/wget --timeout=3 --tries=1 http://127.0.0.1/ -q -O /dev/null</div><div class=\"line\">   　　<span class=\"keyword\">if</span> [ $? <span class=\"_\">-ne</span> 0 ] ; <span class=\"keyword\">then</span></div><div class=\"line\">   　　　　<span class=\"built_in\">let</span> fails=$[<span class=\"variable\">$fails</span>+1]</div><div class=\"line\">   　　　　success=0</div><div class=\"line\">   　　<span class=\"keyword\">else</span></div><div class=\"line\">   　　　　fails=0</div><div class=\"line\">   　　　　<span class=\"built_in\">let</span> success=$[<span class=\"variable\">$success</span>+1]</div><div class=\"line\">   　　<span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\">   　　<span class=\"keyword\">if</span> [ <span class=\"variable\">$fails</span> -ge <span class=\"variable\">$maxfails</span> ] ; <span class=\"keyword\">then</span></div><div class=\"line\">   　　　　fails=0</div><div class=\"line\">   　　　　success=0</div><div class=\"line\"></div><div class=\"line\">   　　　　<span class=\"comment\">#check keepalived is running ? try to stop it</span></div><div class=\"line\">   　　　　service keepalived status | grep running</div><div class=\"line\">   　　　　<span class=\"keyword\">if</span> [ $? <span class=\"_\">-eq</span> 0 ] ; <span class=\"keyword\">then</span></div><div class=\"line\">   　　　　　　logger -is <span class=\"string\">\"local service fails <span class=\"variable\">$maxfails</span> times ... try to stop keepalived.\"</span></div><div class=\"line\">   　　　　　　service keepalived stop 2&gt;&amp;1 | logger</div><div class=\"line\">   　　　　<span class=\"keyword\">fi</span></div><div class=\"line\">   　　<span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\">   　　<span class=\"keyword\">if</span> [ <span class=\"variable\">$success</span> <span class=\"_\">-gt</span> <span class=\"variable\">$maxfails</span> ] ; <span class=\"keyword\">then</span></div><div class=\"line\">   　　　　<span class=\"comment\">#check keepalived is stopped ? try to start it</span></div><div class=\"line\">   　　　　service keepalived status | grep stopped</div><div class=\"line\">   　　　　<span class=\"keyword\">if</span> [ $? <span class=\"_\">-eq</span> 0 ] ; <span class=\"keyword\">then</span></div><div class=\"line\">   　　　　　　logger -is <span class=\"string\">\"service changes normal, try to start keepalived .\"</span></div><div class=\"line\">   　　　　　　service keepalived start</div><div class=\"line\">   　　　　<span class=\"keyword\">fi</span></div><div class=\"line\">   　　　　success=0</div><div class=\"line\">   　　<span class=\"keyword\">fi</span></div><div class=\"line\">   　　sleep 3</div><div class=\"line\">   <span class=\"keyword\">done</span></div></pre></td></tr></table></figure></p>\n<p>两个节点上均应运行此脚本，请将此脚本加入到cron任务中（此程序已经作了单实例运行机制，加入计划任务的作用就是防止脚本意外中断后检测功能失效），可实现的功能：</p>\n<p>如果本地服务连续三次检测失败，就尝试停止keepalived服务（如果keepalived处于运行状态）</p>\n<p>如果本地服务连接三次检测成功，但keepalived没有启动，则启动之</p>\n<p>关键的执行点，均已经记录到系统日志中（/var/log/messages）</p>\n<p>执行crontab -e , 加入以下内容：</p>\n<p><em>/1 </em> <em> </em> * root /home/testuser/check_local.sh</p>\n<p>停止掉本机的keepalived, 稍过一会，就会keepalived服务被自动启动了（这是因为本地服务检测正常）</p>\n<p>停止掉本机的nginx, 稍过一会，就会发现keepalived服务也被停止掉了</p>\n<p>再启动nginx, 稍过一会，发现keepalived也被正常启动，并绑定了正确的虚拟IP</p>\n<h1 id=\"redis\"><a href=\"#redis\" class=\"headerlink\" title=\"redis\"></a>redis</h1><h2 id=\"1-下载解压安装redis\"><a href=\"#1-下载解压安装redis\" class=\"headerlink\" title=\"1.下载解压安装redis\"></a>1.下载解压安装redis</h2><h3 id=\"1-1redis源文件\"><a href=\"#1-1redis源文件\" class=\"headerlink\" title=\"1.1redis源文件\"></a>1.1redis源文件</h3><p>将redis源文件放在目录<code>/usr/local/src/</code>下</p>\n<h3 id=\"1-2解压redis\"><a href=\"#1-2解压redis\" class=\"headerlink\" title=\"1.2解压redis\"></a>1.2解压redis</h3><p>移动到redis所在文件目录</p>\n<blockquote>\n<p>cd /usr/local/src/<br>tar -zxvf redis.tar.gz</p>\n</blockquote>\n<h3 id=\"1-3编译安装redis\"><a href=\"#1-3编译安装redis\" class=\"headerlink\" title=\"1.3编译安装redis\"></a>1.3编译安装redis</h3><p>移动到解压后reids目录</p>\n<blockquote>\n<p>cd redis<br>make</p>\n</blockquote>\n<p>进入reids/src目录<br>make install</p>\n<h2 id=\"2-Redis的部署\"><a href=\"#2-Redis的部署\" class=\"headerlink\" title=\"2.Redis的部署\"></a>2.Redis的部署</h2><p>安装成功后，下面对Redis 进行部署<br>如果需使用tomcat来连接的话<br>1.关闭安全模式<br>2.设置密码</p>\n<h3 id=\"2-1执行Redis-server-命令，启动Redis-服务\"><a href=\"#2-1执行Redis-server-命令，启动Redis-服务\" class=\"headerlink\" title=\"2.1执行Redis-server 命令，启动Redis 服务\"></a>2.1执行Redis-server 命令，启动Redis 服务</h3><blockquote>\n<p>注意：这里直接执行Redis-server 启动的Redis服务，是在前台直接运行的，也就是说，执行完该命令后，如果Lunix关闭当前会话，则Redis服务也随即关闭。正常情况下，启动Redis服务需要从后台启动，并且指定启动配置文件。<br>3、后台启动redis服务<br>a)首先编辑conf文件，将daemonize属性改为yes（表明需要在后台运行）<br>cd etc/<br>vi redis.conf<br>如果redis.conf文件不存在就从安装目录复制过去<br>b)再次启动redis服务，并指定启动服务配置文件<br>redis-server  /etc/redis.conf</p>\n</blockquote>\n<p>4、服务端启动成功后，启动Redis</p>\n<blockquote>\n<p><code>redis-cli</code></p>\n</blockquote>\n<p>使用命令 config set requirepass admin<br>为redis设置密码为admin<br>输入验证密码<br>auth admin<br>保存密码设置信息到磁盘<br>save<br>退出<br>exit</p>\n<h2 id=\"3-tomcat配置\"><a href=\"#3-tomcat配置\" class=\"headerlink\" title=\"3.tomcat配置\"></a>3.tomcat配置</h2><h3 id=\"3-1-jar包\"><a href=\"#3-1-jar包\" class=\"headerlink\" title=\"3.1 jar包\"></a>3.1 jar包</h3><pre><code>commons-logging-1.2.jar\ncommons-pool2-2.4.2.jar\njedis-2.9.0.jar\ntomcat-redis-session-manager1.2.jar\n</code></pre><p>将以上4个jar包放入tomcat/lib下</p>\n<h3 id=\"3-2-content-xml配置\"><a href=\"#3-2-content-xml配置\" class=\"headerlink\" title=\"3.2 content.xml配置\"></a>3.2 content.xml配置</h3><p>配置Tomcat的conf目录下的context.xml文件：</p>\n<blockquote>\n<p>1.单点Reids配置<br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Valve className=<span class=\"string\">\"com.orangefunction.tomcat.redissessions.RedisSessionHandlerValve\"</span> /&gt;</div><div class=\"line\">&lt;Manager className=<span class=\"string\">\"com.orangefunction.tomcat.redissessions.RedisSessionManager\"</span></div><div class=\"line\">host=<span class=\"string\">\"192.168.0.111\"</span></div><div class=\"line\">port=<span class=\"string\">\"6379\"</span></div><div class=\"line\">password=<span class=\"string\">\"admin\"</span>//reids密码</div><div class=\"line\">database=<span class=\"string\">\"0\"</span></div><div class=\"line\">maxInactiveInterval=<span class=\"string\">\"60\"</span> /&gt;</div></pre></td></tr></table></figure></p>\n<p>2.Sentinel集群配置：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- Sentinel 配置 --&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;Valve className=<span class=\"string\">\"reyo.redis.session.manager.tomcat8.RedisSessionHandlerValve\"</span> /&gt;</div><div class=\"line\">&lt;Manager className=<span class=\"string\">\"reyo.redis.session.manager.tomcat8.RedisSessionManager\"</span></div><div class=\"line\"></div><div class=\"line\">maxInactiveInterval=<span class=\"string\">\"60\"</span></div><div class=\"line\"></div><div class=\"line\">sentinelMaster=<span class=\"string\">\"mymaster\"</span></div><div class=\"line\"></div><div class=\"line\">sentinels=<span class=\"string\">\"127.0.0.1:26379,127.0.0.1:26380,127.0.0.1:26381,127.0.0.1:26382\"</span> /&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>案例：<br>如果要监控两个redis实例，可以进行如下配置Redis安装目录下sentinel.conf文件：<br>常规配置：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">port 26379</div><div class=\"line\">daemonize yes</div><div class=\"line\">logfile <span class=\"string\">\"/var/log/redis/sentinel.log\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#master 7000</span></div><div class=\"line\">sentinel monitor master1 127.0.0.1 7000 2                <span class=\"comment\">#配置master名、ip、port、需要多少个sentinel才能判断[客观下线]（2）</span></div><div class=\"line\">sentinel down-after-milliseconds master-7000 30000      <span class=\"comment\">#配置sentinel向master发出ping，最大响应时间、超过则认为主观下线</span></div><div class=\"line\">sentinel parallel-syncs master-7000 1                   <span class=\"comment\">#配置在进行故障转移时，运行多少个slave进行数据备份同步(越少速度越快)</span></div><div class=\"line\">sentinel failover-timeout master-7000 180000            <span class=\"comment\">#配置当出现failover时下一个sentinel与上一个sentinel对[同一个master监测的时间间隔](最后设置为客观下线)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#master 7001</span></div><div class=\"line\">sentinel monitor master2 127.0.0.1 7001 1</div><div class=\"line\">sentinel down-after-milliseconds master-7001 30000</div><div class=\"line\">sentinel parallel-syncs master-7001 1</div><div class=\"line\">sentinel failover-timeout master-7001 180000</div></pre></td></tr></table></figure></p>\n<p>特殊配置：<br><code>min-slaves-to-write 1</code><br><code>min-slaves-max-lag 10</code><br>通过上面的配置，当一个redis是master时，如果它不能向至少一个slave写数据(上面的min-slaves-to-write指定了slave的数量)，它将会拒绝接受客户端的写请求。由于复制是异步的，master无法向slave写数据意味着slave要么断开连接了，要么不在指定时间内向master发送同步数据的请求了(上面的min-slaves-max-lag指定了这个时间)。</p>\n<h3 id=\"配置Redis能随系统启动\"><a href=\"#配置Redis能随系统启动\" class=\"headerlink\" title=\"配置Redis能随系统启动:\"></a>配置Redis能随系统启动:</h3><p>./utils/install_server.sh</p>\n<h3 id=\"Redis服务查看、开启、关闭\"><a href=\"#Redis服务查看、开启、关闭\" class=\"headerlink\" title=\"Redis服务查看、开启、关闭:\"></a>Redis服务查看、开启、关闭:</h3><p>a.通过ps -ef|grep redis命令查看Redis进程<br>b.开启Redis服务操作通过/etc/init.d/redis_6379 start命令，也可通过（service redis_6379 start）<br>c.关闭Redis服务操作通过/etc/init.d/redis_6379 stop命令，也可通过（service redis_6379 stop）</p>\n<h1 id=\"Postgres-XL\"><a href=\"#Postgres-XL\" class=\"headerlink\" title=\"Postgres-XL\"></a>Postgres-XL</h1><h2 id=\"centos7安装：\"><a href=\"#centos7安装：\" class=\"headerlink\" title=\"centos7安装：\"></a>centos7安装：</h2><h3 id=\"在所有主机上安装Postgres-XL\"><a href=\"#在所有主机上安装Postgres-XL\" class=\"headerlink\" title=\"在所有主机上安装Postgres-XL\"></a>在所有主机上安装Postgres-XL</h3><h4 id=\"在每台机器的-etc-hosts中加入以下内容：\"><a href=\"#在每台机器的-etc-hosts中加入以下内容：\" class=\"headerlink\" title=\"在每台机器的 /etc/hosts中加入以下内容：\"></a>在每台机器的 /etc/hosts中加入以下内容：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">192.168.0.50 gtm</div><div class=\"line\">192.168.0.51 gtm-bc</div><div class=\"line\">192.168.0.120 datanode1</div><div class=\"line\">192.168.0.121 datanode2</div></pre></td></tr></table></figure>\n<h4 id=\"关闭防火墙：\"><a href=\"#关闭防火墙：\" class=\"headerlink\" title=\"关闭防火墙：\"></a>关闭防火墙：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">systemctl stop firewalld</div><div class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld</div></pre></td></tr></table></figure>\n<h4 id=\"selinux设置\"><a href=\"#selinux设置\" class=\"headerlink\" title=\"selinux设置\"></a>selinux设置</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">setenforce 0</div><div class=\"line\">sed -i <span class=\"string\">\"s/SELINUX=enforcing/SELINUX=disabled/\"</span> /etc/selinux/config</div></pre></td></tr></table></figure>\n<h4 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包:\"></a>安装依赖包:</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum -y install epel-release</div><div class=\"line\">yum -y install lbzip2 gcc readline-devel zlib-devel flex</div></pre></td></tr></table></figure>\n<h4 id=\"新建用户\"><a href=\"#新建用户\" class=\"headerlink\" title=\"新建用户\"></a>新建用户</h4><blockquote>\n<p>每个节点都建立用户postgres，并且建立.ssh目录，并配置相应的root权限：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"comment\"># useradd postgres</span></div><div class=\"line\">[root@localhost ~]<span class=\"comment\"># passwd postgres</span></div><div class=\"line\">[root@localhost ~]<span class=\"comment\"># su - postgres</span></div><div class=\"line\">[root@localhost ~]<span class=\"comment\"># mkdir ~/.ssh</span></div><div class=\"line\">[root@localhost ~]<span class=\"comment\"># chmod 700 ~/.ssh</span></div></pre></td></tr></table></figure>\n<h4 id=\"ssh免密码登录-只在gtm下做\"><a href=\"#ssh免密码登录-只在gtm下做\" class=\"headerlink\" title=\"ssh免密码登录(只在gtm下做)\"></a>ssh免密码登录(<code>只在gtm下做</code>)</h4><blockquote>\n<p>仅仅在<code>gtm</code>节点配置如下操作：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"comment\"># su - postgres</span></div><div class=\"line\">[postgres@localhost ~]<span class=\"comment\"># ssh-keygen -t rsa</span></div><div class=\"line\">[postgres@localhost ~]<span class=\"comment\"># cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span></div><div class=\"line\">[postgres@localhost ~]<span class=\"comment\"># chmod 600 ~/.ssh/authorized_keys</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>对所有提示都不要输入，直接enter下一步。</p>\n<p>将刚生成的认证文件拷贝到datanode1到datanode2中，使得gtm节点可以免密码登录datanode1~datanode2的任意一个节点：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@localhost ~]<span class=\"comment\"># scp ~/.ssh/authorized_keys postgres@datanode1:~/.ssh/</span></div><div class=\"line\">[postgres@localhost ~]<span class=\"comment\"># scp ~/.ssh/authorized_keys postgres@datanode2:~/.ssh/</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p><mark>这里会提示如下内容 输入yes</mark>后会提示让你输入远程用户密码</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">The authenticity of host <span class=\"string\">'datanode1 (192.168.0.120)'</span> can<span class=\"string\">'t be established.</span></div><div class=\"line\">ECDSA key fingerprint is f9:ad:48:ab:a8:b6:81:5b:e0:6f:75:e5:xx:xx:xx:xx.</div><div class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</div></pre></td></tr></table></figure>\n<h4 id=\"Postgres-XL安装-每台服务器都要操作\"><a href=\"#Postgres-XL安装-每台服务器都要操作\" class=\"headerlink\" title=\"Postgres-XL安装(每台服务器都要操作)\"></a>Postgres-XL安装(每台服务器都要操作)</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/src</div><div class=\"line\">tar -zxvf  postgres-xl</div><div class=\"line\"><span class=\"built_in\">cd</span> postgres-xl</div><div class=\"line\">./configure</div><div class=\"line\">make &amp;&amp; make install</div><div class=\"line\"><span class=\"built_in\">cd</span> contrib/</div><div class=\"line\">make &amp;&amp; make install</div></pre></td></tr></table></figure>\n<blockquote>\n<p>cortrib中有很多postgres很牛的工具，一般要装上。如ltree,uuid,postgres_fdw等等。</p>\n</blockquote>\n<h4 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h4><p>进入postgres用户，修改其环境变量<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">su - postgres</div><div class=\"line\">vi .bashrc</div></pre></td></tr></table></figure></p>\n<p>在打开的文件末尾，新增如下变量配置：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">export</span> PGHOME=<span class=\"regexp\">/usr/</span>local/pgsql</div><div class=\"line\"><span class=\"keyword\">export</span> PGUSER=postgres</div><div class=\"line\"><span class=\"keyword\">export</span> LD_LIBRARY_PATH=$PGHOME/lib</div><div class=\"line\"><span class=\"keyword\">export</span> PATH=$PGHOME/bin:$PATH</div></pre></td></tr></table></figure>\n<p> 按住esc，然后输入:wq!保存退出</p>\n<p> 输入以下命令对更改重启生效:<br> <code>source .bashrc</code></p>\n<p> 检查配置是否已修改<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@localhost ~]$ <span class=\"built_in\">echo</span> <span class=\"variable\">$PGHOME</span></div><div class=\"line\">/usr/<span class=\"built_in\">local</span>/pgsql</div></pre></td></tr></table></figure></p>\n<p> 检查ssh免密访问是否配置成功<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@gtm ~]<span class=\"comment\"># ssh datanode1</span></div><div class=\"line\">[root@datanode1 ~]<span class=\"comment\"># exit</span></div><div class=\"line\"><span class=\"built_in\">logout</span></div><div class=\"line\">Connection to datanode1 closed.</div><div class=\"line\"></div><div class=\"line\">[root@gtm ~]<span class=\"comment\"># ssh datanode2</span></div><div class=\"line\">[root@datanode2 ~]<span class=\"comment\"># exit</span></div><div class=\"line\"><span class=\"built_in\">logout</span></div><div class=\"line\">Connection to datanode2 closed.</div></pre></td></tr></table></figure></p>\n<h4 id=\"修改文件夹所有者\"><a href=\"#修改文件夹所有者\" class=\"headerlink\" title=\"修改文件夹所有者\"></a>修改文件夹所有者</h4><p>将/home/postgres下所有文件的所有者变更为postgres用户<br><code>[root@gtm ~]# chown -R postgres /home/postgres</code></p>\n<h4 id=\"生成pgxc-ctl配置文件-只在gtm下做\"><a href=\"#生成pgxc-ctl配置文件-只在gtm下做\" class=\"headerlink\" title=\"生成pgxc_ctl配置文件(只在gtm下做)\"></a>生成pgxc_ctl配置文件(<code>只在gtm下做</code>)</h4><p>在/usr/local/src/postgres-xl/contrib/pgxc_ctl目录下<br>运行命令</p>\n<p><code>./pgxc_ctl</code>后进入操作界面后输入prepare之后使用Crtl+c退出PGXC操作界面</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@localhost ~]$ pgxc_ctl</div><div class=\"line\">/bin/bash</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">ERROR: File <span class=\"string\">\"/home/postgres/pgxc_ctl/pgxc_ctl.conf\"</span> not found or not a regular file. No such file or directory</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">Reading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf</div><div class=\"line\">Finished reading configuration.</div><div class=\"line\">   ******** PGXC_CTL START ***************</div><div class=\"line\"></div><div class=\"line\">Current directory: /home/postgres/pgxc_ctl</div><div class=\"line\">PGXC prepare</div><div class=\"line\">PGXC ^C</div></pre></td></tr></table></figure>\n<h4 id=\"编辑pgxc-ctl-conf文件\"><a href=\"#编辑pgxc-ctl-conf文件\" class=\"headerlink\" title=\"编辑pgxc_ctl.conf文件\"></a>编辑pgxc_ctl.conf文件</h4><p><code>[postgres@localhost ~]$ vim /home/postgres/pgxc_ctl/pgxc_ctl.conf</code></p>\n<h4 id=\"配置内容如下：\"><a href=\"#配置内容如下：\" class=\"headerlink\" title=\"配置内容如下：\"></a>配置内容如下：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/usr/bin/env bash</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># Postgres-XC Configuration file for pgxc_ctl utility.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># Configuration file can be specified as -c option from pgxc_ctl command.   Default is</span></div><div class=\"line\"><span class=\"comment\"># $PGXC_CTL_HOME/pgxc_ctl.org.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># This is bash script so you can make any addition for your convenience to configure</span></div><div class=\"line\"><span class=\"comment\"># your Postgres-XC cluster.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># Please understand that pgxc_ctl provides only a subset of configuration which pgxc_ctl</span></div><div class=\"line\"><span class=\"comment\"># provide.  Here's several several assumptions/restrictions pgxc_ctl depends on.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 1) All the resources of pgxc nodes has to be owned by the same user.   Same user means</span></div><div class=\"line\"><span class=\"comment\">#    user with the same user name.  User ID may be different from server to server.</span></div><div class=\"line\"><span class=\"comment\">#    This must be specified as a variable $pgxcOwner.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 2) All the servers must be reacheable via ssh without password.   It is highly recommended</span></div><div class=\"line\"><span class=\"comment\">#    to setup key-based authentication among all the servers.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 3) All the databases in coordinator/datanode has at least one same superuser.  Pgxc_ctl</span></div><div class=\"line\"><span class=\"comment\">#    uses this user to connect to coordinators and datanodes.   Again, no password should</span></div><div class=\"line\"><span class=\"comment\">#    be used to connect.  You have many options to do this, pg_hba.conf, pg_ident.conf and</span></div><div class=\"line\"><span class=\"comment\">#    others.  Pgxc_ctl provides a way to configure pg_hba.conf but not pg_ident.conf.   This</span></div><div class=\"line\"><span class=\"comment\">#    will be implemented in the later releases.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 4) Gtm master and slave can have different port to listen, while coordinator and datanode</span></div><div class=\"line\"><span class=\"comment\">#    slave should be assigned the same port number as master.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 5) Port nuber of a coordinator slave must be the same as its master.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 6) Master and slave are connected using synchronous replication.  Asynchronous replication</span></div><div class=\"line\"><span class=\"comment\">#    have slight (almost none) chance to bring total cluster into inconsistent state.</span></div><div class=\"line\"><span class=\"comment\">#    This chance is very low and may be negligible.  Support of asynchronous replication</span></div><div class=\"line\"><span class=\"comment\">#    may be supported in the later release.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 7) Each coordinator and datanode can have only one slave each.  Cascaded replication and</span></div><div class=\"line\"><span class=\"comment\">#    multiple slave are not supported in the current pgxc_ctl.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 8) Killing nodes may end up with IPC resource leak, such as semafor and shared memory.</span></div><div class=\"line\"><span class=\"comment\">#    Only listening port (socket) will be cleaned with clean command.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 9) Backup and restore are not supported in pgxc_ctl at present.   This is a big task and</span></div><div class=\"line\"><span class=\"comment\">#    may need considerable resource.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\">#========================================================================================</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># pgxcInstallDir variable is needed if you invoke \"deploy\" command from pgxc_ctl utility.</span></div><div class=\"line\"><span class=\"comment\"># If don't you don't need this variable.</span></div><div class=\"line\">pgxcInstallDir=<span class=\"variable\">$HOME</span></div><div class=\"line\">pgxlDATA=<span class=\"variable\">$HOME</span>/data</div><div class=\"line\"><span class=\"comment\">#---- OVERALL -----------------------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">pgxcOwner=postgres\t\t\t<span class=\"comment\"># owner of the Postgres-XC databaseo cluster.  Here, we use this</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># both as linus user and database user.  This must be</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># the super user of each coordinator and datanode.</span></div><div class=\"line\">pgxcUser=<span class=\"variable\">$pgxcOwner</span>\t\t<span class=\"comment\"># OS user of Postgres-XC owner</span></div><div class=\"line\"></div><div class=\"line\">tmpDir=/tmp\t\t\t\t\t<span class=\"comment\"># temporary dir used in XC servers</span></div><div class=\"line\"><span class=\"built_in\">local</span>TmpDir=<span class=\"variable\">$tmpDir</span>\t\t\t<span class=\"comment\"># temporary dir used here locally</span></div><div class=\"line\"></div><div class=\"line\">configBackup=n\t\t\t\t\t<span class=\"comment\"># If you want config file backup, specify y to this value.</span></div><div class=\"line\">configBackupHost=pgxc-linker\t<span class=\"comment\"># host to backup config file</span></div><div class=\"line\">configBackupDir=<span class=\"variable\">$HOME</span>/pgxc\t\t<span class=\"comment\"># Backup directory</span></div><div class=\"line\">configBackupFile=pgxc_ctl.bak\t<span class=\"comment\"># Backup file name --&gt; Need to synchronize when original changed.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- GTM ------------------------------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># GTM is mandatory.  You must have at least (and only) one GTM master in your Postgres-XC cluster.</span></div><div class=\"line\"><span class=\"comment\"># If GTM crashes and you need to reconfigure it, you can do it by pgxc_update_gtm command to update</span></div><div class=\"line\"><span class=\"comment\"># GTM master with others.   Of course, we provide pgxc_remove_gtm command to remove it.  This command</span></div><div class=\"line\"><span class=\"comment\"># will not stop the current GTM.  It is up to the operator.</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- GTM Master -----------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Overall ----</span></div><div class=\"line\">gtmName=gtm</div><div class=\"line\">gtmMasterServer=gtm</div><div class=\"line\">gtmMasterPort=6666</div><div class=\"line\">gtmMasterDir=<span class=\"variable\">$pgxlDATA</span>/nodes/gtm</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Configuration ---</span></div><div class=\"line\">gtmExtraConfig=none\t\t\t<span class=\"comment\"># Will be added gtm.conf for both Master and Slave (done at initilization only)</span></div><div class=\"line\">gtmMasterSpecificExtraConfig=none\t<span class=\"comment\"># Will be added to Master's gtm.conf (done at initialization only)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- GTM Slave -----------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Because GTM is a key component to maintain database consistency, you may want to configure GTM slave</span></div><div class=\"line\"><span class=\"comment\"># for backup.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Overall ------</span></div><div class=\"line\">gtmSlave=n\t\t\t\t\t<span class=\"comment\"># Specify y if you configure GTM Slave.   Otherwise, GTM slave will not be configured and</span></div><div class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\"># all the following variables will be reset.</span></div><div class=\"line\">gtmSlaveName=gtmSlave</div><div class=\"line\">gtmSlaveServer=gtm-bc\t\t<span class=\"comment\"># value none means GTM slave is not available.  Give none if you don't configure GTM Slave.</span></div><div class=\"line\">gtmSlavePort=20001\t\t\t<span class=\"comment\"># Not used if you don't configure GTM slave.</span></div><div class=\"line\">gtmSlaveDir=<span class=\"variable\">$pgxlDATA</span>/nodes/gtmSlave\t<span class=\"comment\"># Not used if you don't configure GTM slave.</span></div><div class=\"line\"><span class=\"comment\"># Please note that when you have GTM failover, then there will be no slave available until you configure the slave</span></div><div class=\"line\"><span class=\"comment\"># again. (pgxc_add_gtm_slave function will handle it)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Configuration ----</span></div><div class=\"line\">gtmSlaveSpecificExtraConfig=none <span class=\"comment\"># Will be added to Slave's gtm.conf (done at initialization only)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- GTM Proxy -------------------------------------------------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\"># GTM proxy will be selected based upon which server each component runs on.</span></div><div class=\"line\"><span class=\"comment\"># When fails over to the slave, the slave inherits its master's gtm proxy.  It should be</span></div><div class=\"line\"><span class=\"comment\"># reconfigured based upon the new location.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># To do so, slave should be restarted.   So pg_ctl promote -&gt; (edit postgresql.conf and recovery.conf) -&gt; pg_ctl restart</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># You don't have to configure GTM Proxy if you dont' configure GTM slave or you are happy if every component connects</span></div><div class=\"line\"><span class=\"comment\"># to GTM Master directly.  If you configure GTL slave, you must configure GTM proxy too.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Shortcuts ------</span></div><div class=\"line\">gtmProxyDir=<span class=\"variable\">$pgxlDATA</span>/nodes/gtm_pxy</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Overall -------</span></div><div class=\"line\">gtmProxy=n\t\t\t\t<span class=\"comment\"># Specify y if you conifugre at least one GTM proxy.   You may not configure gtm proxies</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># only when you dont' configure GTM slaves.</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># If you specify this value not to y, the following parameters will be set to default empty values.</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># If we find there're no valid Proxy server names (means, every servers are specified</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># as none), then gtmProxy value will be set to \"n\" and all the entries will be set to</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># empty values.</span></div><div class=\"line\">gtmProxyNames=(gtm_pxy1 gtm_pxy2)\t<span class=\"comment\"># No used if it is not configured</span></div><div class=\"line\">gtmProxyServers=(datanode1 datanode2)\t\t\t<span class=\"comment\"># Specify none if you dont' configure it.</span></div><div class=\"line\">gtmProxyPorts=(6666 6666)\t\t\t\t<span class=\"comment\"># Not used if it is not configured.</span></div><div class=\"line\">gtmProxyDirs=(<span class=\"variable\">$gtmProxyDir</span> <span class=\"variable\">$gtmProxyDir</span>)\t<span class=\"comment\"># Not used if it is not configured.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Configuration ----</span></div><div class=\"line\">gtmPxyExtraConfig=none\t\t<span class=\"comment\"># Extra configuration parameter for gtm_proxy.  Coordinator section has an example.</span></div><div class=\"line\">gtmPxySpecificExtraConfig=(none none none none)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Coordinators ----------------------------------------------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- shortcuts ----------</span></div><div class=\"line\">coordMasterDir=<span class=\"variable\">$pgxlDATA</span>/nodes/coord</div><div class=\"line\">coordSlaveDir=<span class=\"variable\">$HOME</span>/pgxc/nodes/coord_slave</div><div class=\"line\">coordArchLogDir=<span class=\"variable\">$HOME</span>/pgxc/nodes/coord_archlog</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Overall ------------</span></div><div class=\"line\">coordNames=(coord1 coord2)\t\t<span class=\"comment\"># Master and slave use the same name</span></div><div class=\"line\">coordPorts=(5432 5432)\t\t\t<span class=\"comment\"># Master ports</span></div><div class=\"line\">poolerPorts=(6667 6667)\t\t\t<span class=\"comment\"># Master pooler ports</span></div><div class=\"line\">coordPgHbaEntries=(0.0.0.0/0)\t\t\t\t<span class=\"comment\"># Assumes that all the coordinator (master/slave) accepts</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># the same connection</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># This entry allows only $pgxcOwner to connect.</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># If you'd like to setup another connection, you should</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># supply these entries through files specified below.</span></div><div class=\"line\"><span class=\"comment\"># Note: The above parameter is extracted as \"host all all 0.0.0.0/0 trust\".   If you don't want</span></div><div class=\"line\"><span class=\"comment\"># such setups, specify the value () to this variable and suplly what you want using coordExtraPgHba</span></div><div class=\"line\"><span class=\"comment\"># and/or coordSpecificExtraPgHba variables.</span></div><div class=\"line\"><span class=\"comment\">#coordPgHbaEntries=(::1/128)\t# Same as above but for IPv6 addresses</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Master -------------</span></div><div class=\"line\">coordMasterServers=(datanode1 datanode2)\t\t<span class=\"comment\"># none means this master is not available</span></div><div class=\"line\">coordMasterDirs=(<span class=\"variable\">$coordMasterDir</span> <span class=\"variable\">$coordMasterDir</span>)</div><div class=\"line\">coordMaxWALsernder=0\t<span class=\"comment\"># max_wal_senders: needed to configure slave. If zero value is specified,</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># it is expected to supply this parameter explicitly by external files</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># specified in the following.\tIf you don't configure slaves, leave this value to zero.</span></div><div class=\"line\">coordMaxWALSenders=(<span class=\"variable\">$coordMaxWALsernder</span> <span class=\"variable\">$coordMaxWALsernder</span>)</div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># max_wal_senders configuration for each coordinator.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Slave -------------</span></div><div class=\"line\">coordSlave=n\t\t\t<span class=\"comment\"># Specify y if you configure at least one coordiantor slave.  Otherwise, the following</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># configuration parameters will be set to empty values.</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># If no effective server names are found (that is, every servers are specified as none),</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># then coordSlave value will be set to n and all the following values will be set to</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># empty values.</span></div><div class=\"line\">coordSlaveSync=y\t\t<span class=\"comment\"># Specify to connect with synchronized mode.</span></div><div class=\"line\">coordSlaveServers=(node07 node08 node09 node06)\t\t\t<span class=\"comment\"># none means this slave is not available</span></div><div class=\"line\">coordSlavePorts=(20004 20005 20004 20005)\t\t\t<span class=\"comment\"># Master ports</span></div><div class=\"line\">coordSlavePoolerPorts=(20010 20011 20010 20011)\t\t\t<span class=\"comment\"># Master pooler ports</span></div><div class=\"line\">coordSlaveDirs=(<span class=\"variable\">$coordSlaveDir</span> <span class=\"variable\">$coordSlaveDir</span> <span class=\"variable\">$coordSlaveDir</span> <span class=\"variable\">$coordSlaveDir</span>)</div><div class=\"line\">coordArchLogDirs=(<span class=\"variable\">$coordArchLogDir</span> <span class=\"variable\">$coordArchLogDir</span> <span class=\"variable\">$coordArchLogDir</span> <span class=\"variable\">$coordArchLogDir</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Configuration files---</span></div><div class=\"line\"><span class=\"comment\"># Need these when you'd like setup specific non-default configuration</span></div><div class=\"line\"><span class=\"comment\"># These files will go to corresponding files for the master.</span></div><div class=\"line\"><span class=\"comment\"># You may supply your bash script to setup extra config lines and extra pg_hba.conf entries</span></div><div class=\"line\"><span class=\"comment\"># Or you may supply these files manually.</span></div><div class=\"line\">coordExtraConfig=coordExtraConfig\t<span class=\"comment\"># Extra configuration file for coordinators.</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># This file will be added to all the coordinators'</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># postgresql.conf</span></div><div class=\"line\"><span class=\"comment\"># Pleae note that the following sets up minimum parameters which you may want to change.</span></div><div class=\"line\"><span class=\"comment\"># You can put your postgresql.conf lines here.</span></div><div class=\"line\">cat &gt; <span class=\"variable\">$coordExtraConfig</span> &lt;&lt;EOF</div><div class=\"line\"><span class=\"comment\">#================================================</span></div><div class=\"line\"><span class=\"comment\"># Added to all the coordinator postgresql.conf</span></div><div class=\"line\"><span class=\"comment\"># Original: $coordExtraConfig</span></div><div class=\"line\">log_destination = <span class=\"string\">'stderr'</span></div><div class=\"line\">logging_collector = on</div><div class=\"line\">log_directory = <span class=\"string\">'pg_log'</span></div><div class=\"line\">listen_addresses = <span class=\"string\">'*'</span></div><div class=\"line\">max_connections = 100</div><div class=\"line\">EOF</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Additional Configuration file for specific coordinator master.</span></div><div class=\"line\"><span class=\"comment\"># You can define each setting by similar means as above.</span></div><div class=\"line\">coordSpecificExtraConfig=(none none none none)</div><div class=\"line\">coordExtraPgHba=none\t<span class=\"comment\"># Extra entry for pg_hba.conf.  This file will be added to all the coordinators' pg_hba.conf</span></div><div class=\"line\">coordSpecificExtraPgHba=(none none none none)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#----- Additional Slaves -----</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># Please note that this section is just a suggestion how we extend the configuration for</span></div><div class=\"line\"><span class=\"comment\"># multiple and cascaded replication.   They're not used in the current version.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">coordAdditionalSlaves=n\t\t<span class=\"comment\"># Additional slave can be specified as follows: where you</span></div><div class=\"line\">coordAdditionalSlaveSet=(cad1)\t\t<span class=\"comment\"># Each specifies set of slaves.   This case, two set of slaves are</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># configured</span></div><div class=\"line\">cad1_Sync=n\t\t  \t\t<span class=\"comment\"># All the slaves at \"cad1\" are connected with asynchronous mode.</span></div><div class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\"># If not, specify \"y\"</span></div><div class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\"># The following lines specifies detailed configuration for each</span></div><div class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\"># slave tag, cad1.  You can define cad2 similarly.</span></div><div class=\"line\">cad1_Servers=(node08 node09 node06 node07)\t<span class=\"comment\"># Hosts</span></div><div class=\"line\">cad1_dir=<span class=\"variable\">$HOME</span>/pgxc/nodes/coord_slave_cad1</div><div class=\"line\">cad1_Dirs=(<span class=\"variable\">$cad1_dir</span> <span class=\"variable\">$cad1_dir</span> <span class=\"variable\">$cad1_dir</span> <span class=\"variable\">$cad1_dir</span>)</div><div class=\"line\">cad1_ArchLogDir=<span class=\"variable\">$HOME</span>/pgxc/nodes/coord_archlog_cad1</div><div class=\"line\">cad1_ArchLogDirs=(<span class=\"variable\">$cad1_ArchLogDir</span> <span class=\"variable\">$cad1_ArchLogDir</span> <span class=\"variable\">$cad1_ArchLogDir</span> <span class=\"variable\">$cad1_ArchLogDir</span>)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Datanodes -------------------------------------------------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Shortcuts --------------</span></div><div class=\"line\">datanodeMasterDir=<span class=\"variable\">$pgxlDATA</span>/nodes/dn_master</div><div class=\"line\">datanodeSlaveDir=<span class=\"variable\">$HOME</span>/pgxc/nodes/dn_slave</div><div class=\"line\">datanodeArchLogDir=<span class=\"variable\">$HOME</span>/pgxc/nodes/datanode_archlog</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Overall ---------------</span></div><div class=\"line\"><span class=\"comment\">#primaryDatanode=datanode1\t\t\t\t# Primary Node.</span></div><div class=\"line\"><span class=\"comment\"># At present, xc has a priblem to issue ALTER NODE against the primay node.  Until it is fixed, the test will be done</span></div><div class=\"line\"><span class=\"comment\"># without this feature.</span></div><div class=\"line\">primaryDatanode=node1\t\t\t\t<span class=\"comment\"># Primary Node.</span></div><div class=\"line\">datanodeNames=(node1 node2)</div><div class=\"line\">datanodePorts=(5433 5433)\t<span class=\"comment\"># Master ports</span></div><div class=\"line\">datanodePoolerPorts=(6668 6668)\t<span class=\"comment\"># Master pooler ports</span></div><div class=\"line\">datanodePgHbaEntries=(0.0.0.0/0)\t<span class=\"comment\"># Assumes that all the coordinator (master/slave) accepts</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># the same connection</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># This list sets up pg_hba.conf for $pgxcOwner user.</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># If you'd like to setup other entries, supply them</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># through extra configuration files specified below.</span></div><div class=\"line\"><span class=\"comment\"># Note: The above parameter is extracted as \"host all all 0.0.0.0/0 trust\".   If you don't want</span></div><div class=\"line\"><span class=\"comment\"># such setups, specify the value () to this variable and suplly what you want using datanodeExtraPgHba</span></div><div class=\"line\"><span class=\"comment\"># and/or datanodeSpecificExtraPgHba variables.</span></div><div class=\"line\"><span class=\"comment\">#datanodePgHbaEntries=(::1/128)\t# Same as above but for IPv6 addresses</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Master ----------------</span></div><div class=\"line\">datanodeMasterServers=(datanode1 datanode2)\t<span class=\"comment\"># none means this master is not available.</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># This means that there should be the master but is down.</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># The cluster is not operational until the master is</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># recovered and ready to run.</span></div><div class=\"line\">datanodeMasterDirs=(<span class=\"variable\">$datanodeMasterDir</span> <span class=\"variable\">$datanodeMasterDir</span>)</div><div class=\"line\">datanodeMaxWalSender=4\t\t\t\t\t\t\t\t<span class=\"comment\"># max_wal_senders: needed to configure slave. If zero value is</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># specified, it is expected this parameter is explicitly supplied</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># by external configuration files.</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># If you don't configure slaves, leave this value zero.</span></div><div class=\"line\">datanodeMaxWALSenders=(<span class=\"variable\">$datanodeMaxWalSender</span> <span class=\"variable\">$datanodeMaxWalSender</span>)</div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># max_wal_senders configuration for each datanode</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Slave -----------------</span></div><div class=\"line\">datanodeSlave=n\t\t\t<span class=\"comment\"># Specify y if you configure at least one coordiantor slave.  Otherwise, the following</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># configuration parameters will be set to empty values.</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># If no effective server names are found (that is, every servers are specified as none),</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># then datanodeSlave value will be set to n and all the following values will be set to</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># empty values.</span></div><div class=\"line\">datanodeSlaveServers=(datanode2 datanode1)\t<span class=\"comment\"># value none means this slave is not available</span></div><div class=\"line\">datanodeSlavePorts=(15433 15433)\t<span class=\"comment\"># value none means this slave is not available</span></div><div class=\"line\">datanodeSlavePoolerPorts=(20012 20012)\t<span class=\"comment\"># value none means this slave is not available</span></div><div class=\"line\">datanodeSlaveSync=y\t\t<span class=\"comment\"># If datanode slave is connected in synchronized mode</span></div><div class=\"line\">datanodeSlaveDirs=(<span class=\"variable\">$datanodeSlaveDir</span> <span class=\"variable\">$datanodeSlaveDir</span>)</div><div class=\"line\">datanodeArchLogDirs=( <span class=\"variable\">$datanodeArchLogDir</span> <span class=\"variable\">$datanodeArchLogDir</span> )</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ---- Configuration files ---</span></div><div class=\"line\"><span class=\"comment\"># You may supply your bash script to setup extra config lines and extra pg_hba.conf entries here.</span></div><div class=\"line\"><span class=\"comment\"># These files will go to corresponding files for the master.</span></div><div class=\"line\"><span class=\"comment\"># Or you may supply these files manually.</span></div><div class=\"line\">datanodeExtraConfig=none\t<span class=\"comment\"># Extra configuration file for datanodes.  This file will be added to all the</span></div><div class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\"># datanodes' postgresql.conf</span></div><div class=\"line\">datanodeSpecificExtraConfig=(none none none none)</div><div class=\"line\">datanodeExtraPgHba=none\t\t<span class=\"comment\"># Extra entry for pg_hba.conf.  This file will be added to all the datanodes' postgresql.conf</span></div><div class=\"line\">datanodeSpecificExtraPgHba=(none none none none)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#----- Additional Slaves -----</span></div><div class=\"line\">datanodeAdditionalSlaves=n\t<span class=\"comment\"># Additional slave can be specified as follows: where you</span></div><div class=\"line\"><span class=\"comment\"># datanodeAdditionalSlaveSet=(dad1 dad2)\t\t# Each specifies set of slaves.   This case, two set of slaves are</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># configured</span></div><div class=\"line\"><span class=\"comment\"># dad1_Sync=n\t\t  \t\t# All the slaves at \"cad1\" are connected with asynchronous mode.</span></div><div class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\"># If not, specify \"y\"</span></div><div class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\"># The following lines specifies detailed configuration for each</span></div><div class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\"># slave tag, cad1.  You can define cad2 similarly.</span></div><div class=\"line\"><span class=\"comment\"># dad1_Servers=(node08 node09 node06 node07)\t# Hosts</span></div><div class=\"line\"><span class=\"comment\"># dad1_dir=$HOME/pgxc/nodes/coord_slave_cad1</span></div><div class=\"line\"><span class=\"comment\"># dad1_Dirs=($cad1_dir $cad1_dir $cad1_dir $cad1_dir)</span></div><div class=\"line\"><span class=\"comment\"># dad1_ArchLogDir=$HOME/pgxc/nodes/coord_archlog_cad1</span></div><div class=\"line\"><span class=\"comment\"># dad1_ArchLogDirs=($cad1_ArchLogDir $cad1_ArchLogDir $cad1_ArchLogDir $cad1_ArchLogDir)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- WAL archives -------------------------------------------------------------------------------------------------</span></div><div class=\"line\">walArchive=n\t<span class=\"comment\"># If you'd like to configure WAL archive, edit this section.</span></div><div class=\"line\">\t\t\t\t<span class=\"comment\"># Pgxc_ctl assumes that if you configure WAL archive, you configure it</span></div><div class=\"line\">\t\t\t\t<span class=\"comment\"># for all the coordinators and datanodes.</span></div><div class=\"line\">\t\t\t\t<span class=\"comment\"># Default is \"no\".   Please specify \"y\" here to turn it on.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\">#\t\tEnd of Configuration Section</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\">#==========================================================================================================================</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#========================================================================================================================</span></div><div class=\"line\"><span class=\"comment\"># The following is for extension.  Just demonstrate how to write such extension.  There's no code</span></div><div class=\"line\"><span class=\"comment\"># which takes care of them so please ignore the following lines.  They are simply ignored by pgxc_ctl.</span></div><div class=\"line\"><span class=\"comment\"># No side effects.</span></div><div class=\"line\"><span class=\"comment\">#=============&lt;&lt; Beginning of future extension demonistration &gt;&gt; ========================================================</span></div><div class=\"line\"><span class=\"comment\"># You can setup more than one backup set for various purposes, such as disaster recovery.</span></div><div class=\"line\">walArchiveSet=(war1 war2)</div><div class=\"line\">war1_source=(master)\t<span class=\"comment\"># you can specify master, slave or ano other additional slaves as a source of WAL archive.</span></div><div class=\"line\">\t\t\t\t\t<span class=\"comment\"># Default is the master</span></div><div class=\"line\">wal1_source=(slave)</div><div class=\"line\">wal1_source=(additiona_coordinator_slave_set additional_datanode_slave_set)</div><div class=\"line\">war1_host=node10\t<span class=\"comment\"># All the nodes are backed up at the same host for a given archive set</span></div><div class=\"line\">war1_backupdir=<span class=\"variable\">$HOME</span>/pgxc/backup_war1</div><div class=\"line\">wal2_source=(master)</div><div class=\"line\">war2_host=node11</div><div class=\"line\">war2_backupdir=<span class=\"variable\">$HOME</span>/pgxc/backup_war2</div><div class=\"line\"><span class=\"comment\">#=============&lt;&lt; End of future extension demonistration &gt;&gt; ========================================================</span></div></pre></td></tr></table></figure>\n<h4 id=\"初始化集群\"><a href=\"#初始化集群\" class=\"headerlink\" title=\"初始化集群\"></a>初始化集群</h4><p><code>pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf init all</code>启动<br><code>pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf stop all</code>关闭</p>\n<p>初始化提示内容如下：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@localhost ~]$ pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf init all</div><div class=\"line\">/bin/bash</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">Reading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf</div><div class=\"line\">Finished reading configuration.</div><div class=\"line\">   ******** PGXC_CTL START ***************</div><div class=\"line\"></div><div class=\"line\">Current directory: /home/postgres/pgxc_ctl</div><div class=\"line\">Initialize GTM master</div><div class=\"line\">The authenticity of host <span class=\"string\">'gtm (192.168.230.143)'</span> can<span class=\"string\">'t be established.</span></div><div class=\"line\">ECDSA key fingerprint is cd:7e:a2:7d:9b:a9:13:10:96:e9:a4:1a:30:ab:ed:a6.</div><div class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</div><div class=\"line\">mkdir: cannot create directory ‘/home/postgres/pgxl/data’: Permission denied</div><div class=\"line\">The files belonging to this GTM system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">creating directory /home/postgres/pgxl/data/nodes/gtm ... initgtm: could not create directory \"/home/postgres/pgxl/data\": Permission denied</div><div class=\"line\">bash: /home/postgres/pgxl/data/nodes/gtm/gtm.conf: No such file or directory</div><div class=\"line\">gtm cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtm/gtm.conf\": No such file or directory</div><div class=\"line\">gtm_ctl: PID file \"/home/postgres/pgxl/data/nodes/gtm/gtm.pid\" does not exist</div><div class=\"line\">Is server running?</div><div class=\"line\">Done.</div><div class=\"line\">Start GTM master</div><div class=\"line\">server starting</div><div class=\"line\">gtm cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtm/gtm.conf\": No such file or directory</div><div class=\"line\">Initialize GTM slave</div><div class=\"line\">mkdir: cannot create directory ‘/home/postgres/pgxl/data’: Permission denied</div><div class=\"line\">The files belonging to this GTM system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">creating directory /home/postgres/pgxl/data/nodes/gtmSlave ... initgtm: could not create directory \"/home/postgres/pgxl/data\": Permission denied</div><div class=\"line\">bash: /home/postgres/pgxl/data/nodes/gtmSlave/gtm.conf: No such file or directory</div><div class=\"line\">Done.</div><div class=\"line\">Start GTM slaveserver starting</div><div class=\"line\">gtm cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtmSlave/gtm.conf\": No such file or directory</div><div class=\"line\">Done.</div><div class=\"line\">Initialize all the gtm proxies.</div><div class=\"line\">Initializing gtm proxy gtm_pxy1.</div><div class=\"line\">Initializing gtm proxy gtm_pxy2.</div><div class=\"line\">mkdir: cannot create directory ‘/home/postgres/pgxl/data’: Permission denied</div><div class=\"line\">The files belonging to this GTM system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">creating directory /home/postgres/pgxl/data/nodes/gtm_pxy ... initgtm: could not create directory \"/home/postgres/pgxl/data\": Permission denied</div><div class=\"line\">bash: /home/postgres/pgxl/data/nodes/gtm_pxy/gtm_proxy.conf: No such file or directory</div><div class=\"line\">mkdir: cannot create directory ‘/home/postgres/pgxl/data’: Permission denied</div><div class=\"line\">The files belonging to this GTM system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">creating directory /home/postgres/pgxl/data/nodes/gtm_pxy ... initgtm: could not create directory \"/home/postgres/pgxl/data\": Permission denied</div><div class=\"line\">bash: /home/postgres/pgxl/data/nodes/gtm_pxy/gtm_proxy.conf: No such file or directory</div><div class=\"line\">Done.</div><div class=\"line\">Starting all the gtm proxies.</div><div class=\"line\">Starting gtm proxy gtm_pxy1.</div><div class=\"line\">Starting gtm proxy gtm_pxy2.</div><div class=\"line\">server starting</div><div class=\"line\">gtm_proxy cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtm_pxy/gtm_proxy.conf\": No such file or directory</div><div class=\"line\">server starting</div><div class=\"line\">gtm_proxy cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtm_pxy/gtm_proxy.conf\": No such file or directory</div><div class=\"line\">Done.</div><div class=\"line\">Initialize all the coordinator masters.</div><div class=\"line\">Initialize coordinator master coord1.</div><div class=\"line\">Initialize coordinator master coord2.</div><div class=\"line\"></div><div class=\"line\">[postgres@gtm ~]$ pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf init all</div><div class=\"line\">/bin/bash</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">Reading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf</div><div class=\"line\">Finished reading configuration.</div><div class=\"line\">   ******** PGXC_CTL START ***************</div><div class=\"line\"></div><div class=\"line\">Current directory: /home/postgres/pgxc_ctl</div><div class=\"line\">Initialize GTM master</div><div class=\"line\">ERROR: target directory (/home/postgres/pgxl/data/nodes/gtm) exists and not empty. Skip GTM initilialization</div><div class=\"line\">1:4221830976:2017-10-26 02:15:06.915 PDT -FATAL:  lock file \"gtm.pid\" already exists</div><div class=\"line\">2:4221830976:2017-10-26 02:15:06.915 PDT -HINT:  Is another GTM (PID 14702) running in data directory \"/home/postgres/pgxl/data/nodes/gtm\"?</div><div class=\"line\">LOCATION:  CreateLockFile, main.c:2099</div><div class=\"line\">waiting for server to shut down.... done</div><div class=\"line\">server stopped</div><div class=\"line\">Done.</div><div class=\"line\">Start GTM master</div><div class=\"line\">server starting</div><div class=\"line\">Initialize GTM slave</div><div class=\"line\">waiting for server to shut down.... done</div><div class=\"line\">server stopped</div><div class=\"line\">The files belonging to this GTM system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">fixing permissions on existing directory /home/postgres/pgxl/data/nodes/gtmSlave ... ok</div><div class=\"line\">creating configuration files ... ok</div><div class=\"line\">creating control file ... ok</div><div class=\"line\"></div><div class=\"line\">Success.</div><div class=\"line\">Done.</div><div class=\"line\">Start GTM slaveserver starting</div><div class=\"line\">Done.</div><div class=\"line\">Initialize all the gtm proxies.</div><div class=\"line\">Initializing gtm proxy gtm_pxy1.</div><div class=\"line\">Initializing gtm proxy gtm_pxy2.</div><div class=\"line\">The files belonging to this GTM system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">fixing permissions on existing directory /home/postgres/pgxl/data/nodes/gtm_pxy ... ok</div><div class=\"line\">creating configuration files ... ok</div><div class=\"line\"></div><div class=\"line\">Success.</div><div class=\"line\">The files belonging to this GTM system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">fixing permissions on existing directory /home/postgres/pgxl/data/nodes/gtm_pxy ... ok</div><div class=\"line\">creating configuration files ... ok</div><div class=\"line\"></div><div class=\"line\">Success.</div><div class=\"line\">Done.</div><div class=\"line\">Starting all the gtm proxies.</div><div class=\"line\">Starting gtm proxy gtm_pxy1.</div><div class=\"line\">Starting gtm proxy gtm_pxy2.</div><div class=\"line\">server starting</div><div class=\"line\">server starting</div><div class=\"line\">Done.</div><div class=\"line\">Initialize all the coordinator masters.</div><div class=\"line\">Initialize coordinator master coord1.</div><div class=\"line\">Initialize coordinator master coord2.</div><div class=\"line\">The files belonging to this database system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\">The database cluster will be initialized with locale \"en_US.UTF-8\".</div><div class=\"line\">The default database encoding has accordingly been set to \"UTF8\".</div><div class=\"line\">The default text search configuration will be set to \"english\".</div><div class=\"line\"></div><div class=\"line\">Data page checksums are disabled.</div><div class=\"line\"></div><div class=\"line\">fixing permissions on existing directory /home/postgres/pgxl/data/nodes/coord ... ok</div><div class=\"line\">creating subdirectories ... ok</div><div class=\"line\">selecting default max_connections ... 100</div><div class=\"line\">selecting default shared_buffers ... 128MB</div><div class=\"line\">selecting dynamic shared memory implementation ... posix</div><div class=\"line\">creating configuration files ... ok</div><div class=\"line\">running bootstrap script ... ok</div><div class=\"line\">performing post-bootstrap initialization ... creating cluster information ... ok</div><div class=\"line\">syncing data to disk ... ok</div><div class=\"line\">freezing database template0 ... ok</div><div class=\"line\">freezing database template1 ... ok</div><div class=\"line\">freezing database postgres ... ok</div><div class=\"line\"></div><div class=\"line\">WARNING: enabling \"trust\" authentication for local connections</div><div class=\"line\">You can change this by editing pg_hba.conf or using the option -A, or</div><div class=\"line\">--auth-local and --auth-host, the next time you run initdb.</div><div class=\"line\"></div><div class=\"line\">Success.</div><div class=\"line\">The files belonging to this database system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\">The database cluster will be initialized with locale \"en_US.UTF-8\".</div><div class=\"line\">The default database encoding has accordingly been set to \"UTF8\".</div><div class=\"line\">The default text search configuration will be set to \"english\".</div><div class=\"line\"></div><div class=\"line\">Data page checksums are disabled.</div><div class=\"line\"></div><div class=\"line\">fixing permissions on existing directory /home/postgres/pgxl/data/nodes/coord ... ok</div><div class=\"line\">creating subdirectories ... ok</div><div class=\"line\">selecting default max_connections ... 100</div><div class=\"line\">selecting default shared_buffers ... 128MB</div><div class=\"line\">selecting dynamic shared memory implementation ... posix</div><div class=\"line\">creating configuration files ... ok</div><div class=\"line\">running bootstrap script ... ok</div><div class=\"line\">performing post-bootstrap initialization ... creating cluster information ... ok</div><div class=\"line\">syncing data to disk ... ok</div><div class=\"line\">freezing database template0 ... ok</div><div class=\"line\">freezing database template1 ... ok</div><div class=\"line\">freezing database postgres ... ok</div><div class=\"line\"></div><div class=\"line\">WARNING: enabling \"trust\" authentication for local connections</div><div class=\"line\">You can change this by editing pg_hba.conf or using the option -A, or</div><div class=\"line\">--auth-local and --auth-host, the next time you run initdb.</div><div class=\"line\"></div><div class=\"line\">Success.</div><div class=\"line\">Done.</div><div class=\"line\">Starting coordinator master.</div><div class=\"line\">Starting coordinator master coord1</div><div class=\"line\">Starting coordinator master coord2</div><div class=\"line\">2017-10-26 02:15:25.296 PDT [15951] LOG:  listening on IPv4 address \"0.0.0.0\", port 5432</div><div class=\"line\">2017-10-26 02:15:25.296 PDT [15951] LOG:  listening on IPv6 address \"::\", port 5432</div><div class=\"line\">2017-10-26 02:15:25.297 PDT [15951] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5432\"</div><div class=\"line\">2017-10-26 02:15:25.304 PDT [15951] LOG:  redirecting log output to logging collector process</div><div class=\"line\">2017-10-26 02:15:25.304 PDT [15951] HINT:  Future log output will appear in directory \"pg_log\".</div><div class=\"line\">2017-10-26 02:15:25.321 PDT [15847] LOG:  listening on IPv4 address \"0.0.0.0\", port 5432</div><div class=\"line\">2017-10-26 02:15:25.321 PDT [15847] LOG:  listening on IPv6 address \"::\", port 5432</div><div class=\"line\">2017-10-26 02:15:25.323 PDT [15847] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5432\"</div><div class=\"line\">2017-10-26 02:15:25.330 PDT [15847] LOG:  redirecting log output to logging collector process</div><div class=\"line\">2017-10-26 02:15:25.330 PDT [15847] HINT:  Future log output will appear in directory \"pg_log\".</div><div class=\"line\">Done.</div><div class=\"line\">Initialize all the datanode masters.</div><div class=\"line\">Initialize the datanode master node1.</div><div class=\"line\">Initialize the datanode master node2.</div><div class=\"line\">The files belonging to this database system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\">The database cluster will be initialized with locale \"en_US.UTF-8\".</div><div class=\"line\">The default database encoding has accordingly been set to \"UTF8\".</div><div class=\"line\">The default text search configuration will be set to \"english\".</div><div class=\"line\"></div><div class=\"line\">Data page checksums are disabled.</div><div class=\"line\"></div><div class=\"line\">fixing permissions on existing directory /home/postgres/pgxl/data/nodes/dn_master ... ok</div><div class=\"line\">creating subdirectories ... ok</div><div class=\"line\">selecting default max_connections ... 100</div><div class=\"line\">selecting default shared_buffers ... 128MB</div><div class=\"line\">selecting dynamic shared memory implementation ... posix</div><div class=\"line\">creating configuration files ... ok</div><div class=\"line\">running bootstrap script ... ok</div><div class=\"line\">performing post-bootstrap initialization ... creating cluster information ... ok</div><div class=\"line\">syncing data to disk ... ok</div><div class=\"line\">freezing database template0 ... ok</div><div class=\"line\">freezing database template1 ... ok</div><div class=\"line\">freezing database postgres ... ok</div><div class=\"line\"></div><div class=\"line\">WARNING: enabling \"trust\" authentication for local connections</div><div class=\"line\">You can change this by editing pg_hba.conf or using the option -A, or</div><div class=\"line\">--auth-local and --auth-host, the next time you run initdb.</div><div class=\"line\"></div><div class=\"line\">Success.</div><div class=\"line\">The files belonging to this database system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\">The database cluster will be initialized with locale \"en_US.UTF-8\".</div><div class=\"line\">The default database encoding has accordingly been set to \"UTF8\".</div><div class=\"line\">The default text search configuration will be set to \"english\".</div><div class=\"line\"></div><div class=\"line\">Data page checksums are disabled.</div><div class=\"line\"></div><div class=\"line\">fixing permissions on existing directory /home/postgres/pgxl/data/nodes/dn_master ... ok</div><div class=\"line\">creating subdirectories ... ok</div><div class=\"line\">selecting default max_connections ... 100</div><div class=\"line\">selecting default shared_buffers ... 128MB</div><div class=\"line\">selecting dynamic shared memory implementation ... posix</div><div class=\"line\">creating configuration files ... ok</div><div class=\"line\">running bootstrap script ... ok</div><div class=\"line\">performing post-bootstrap initialization ... creating cluster information ... ok</div><div class=\"line\">syncing data to disk ... ok</div><div class=\"line\">freezing database template0 ... ok</div><div class=\"line\">freezing database template1 ... ok</div><div class=\"line\">freezing database postgres ... ok</div><div class=\"line\"></div><div class=\"line\">WARNING: enabling \"trust\" authentication for local connections</div><div class=\"line\">You can change this by editing pg_hba.conf or using the option -A, or</div><div class=\"line\">--auth-local and --auth-host, the next time you run initdb.</div><div class=\"line\"></div><div class=\"line\">Success.</div><div class=\"line\">Done.</div><div class=\"line\">Starting all the datanode masters.</div><div class=\"line\">Starting datanode master node1.</div><div class=\"line\">Starting datanode master node2.</div><div class=\"line\">2017-10-26 02:15:32.075 PDT [16427] LOG:  listening on IPv4 address \"0.0.0.0\", port 5433</div><div class=\"line\">2017-10-26 02:15:32.075 PDT [16427] LOG:  listening on IPv6 address \"::\", port 5433</div><div class=\"line\">2017-10-26 02:15:32.077 PDT [16427] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5433\"</div><div class=\"line\">2017-10-26 02:15:32.083 PDT [16427] LOG:  redirecting log output to logging collector process</div><div class=\"line\">2017-10-26 02:15:32.083 PDT [16427] HINT:  Future log output will appear in directory \"pg_log\".</div><div class=\"line\">2017-10-26 02:15:32.109 PDT [16323] LOG:  listening on IPv4 address \"0.0.0.0\", port 5433</div><div class=\"line\">2017-10-26 02:15:32.109 PDT [16323] LOG:  listening on IPv6 address \"::\", port 5433</div><div class=\"line\">2017-10-26 02:15:32.111 PDT [16323] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5433\"</div><div class=\"line\">2017-10-26 02:15:32.116 PDT [16323] LOG:  redirecting log output to logging collector process</div><div class=\"line\">2017-10-26 02:15:32.116 PDT [16323] HINT:  Future log output will appear in directory \"pg_log\".</div><div class=\"line\">Done.</div><div class=\"line\">ALTER NODE coord1 WITH (HOST='datanode1<span class=\"string\">', PORT=5432);</span></div><div class=\"line\">ALTER NODE</div><div class=\"line\">CREATE NODE coord2 WITH (TYPE='coordinator<span class=\"string\">', HOST='</span>datanode2<span class=\"string\">', PORT=5432);</span></div><div class=\"line\">CREATE NODE</div><div class=\"line\">CREATE NODE node1 WITH (TYPE='datanode<span class=\"string\">', HOST='</span>datanode1<span class=\"string\">', PORT=5433, PRIMARY, PREFERRED);</span></div><div class=\"line\">CREATE NODE</div><div class=\"line\">CREATE NODE node2 WITH (TYPE='datanode<span class=\"string\">', HOST='</span>datanode2<span class=\"string\">', PORT=5433);</span></div><div class=\"line\">CREATE NODE</div><div class=\"line\">SELECT pgxc_pool_reload();</div><div class=\"line\"> pgxc_pool_reload</div><div class=\"line\">------------------</div><div class=\"line\"> t</div><div class=\"line\">(1 row)</div><div class=\"line\"></div><div class=\"line\">CREATE NODE coord1 WITH (TYPE='coordinator<span class=\"string\">', HOST='</span>datanode1<span class=\"string\">', PORT=5432);</span></div><div class=\"line\">CREATE NODE</div><div class=\"line\">ALTER NODE coord2 WITH (HOST='datanode2<span class=\"string\">', PORT=5432);</span></div><div class=\"line\">ALTER NODE</div><div class=\"line\">CREATE NODE node1 WITH (TYPE='datanode<span class=\"string\">', HOST='</span>datanode1<span class=\"string\">', PORT=5433, PRIMARY);</span></div><div class=\"line\">CREATE NODE</div><div class=\"line\">CREATE NODE node2 WITH (TYPE='datanode<span class=\"string\">', HOST='</span>datanode2<span class=\"string\">', PORT=5433, PREFERRED);</span></div><div class=\"line\">CREATE NODE</div><div class=\"line\">SELECT pgxc_pool_reload();</div><div class=\"line\"> pgxc_pool_reload</div><div class=\"line\">------------------</div><div class=\"line\"> t</div><div class=\"line\">(1 row)</div><div class=\"line\"></div><div class=\"line\">Done.</div><div class=\"line\">EXECUTE DIRECT ON (node1) 'CREATE NODE coord1 WITH (TYPE=<span class=\"string\">''</span>coordinator<span class=\"string\">''</span>, HOST=<span class=\"string\">''</span>datanode1<span class=\"string\">''</span>, PORT=5432)<span class=\"string\">';</span></div><div class=\"line\">EXECUTE DIRECT</div><div class=\"line\">EXECUTE DIRECT ON (node1) 'CREATE NODE coord2 WITH (TYPE=<span class=\"string\">''</span>coordinator<span class=\"string\">''</span>, HOST=<span class=\"string\">''</span>datanode2<span class=\"string\">''</span>, PORT=5432)<span class=\"string\">';</span></div><div class=\"line\">EXECUTE DIRECT</div><div class=\"line\">EXECUTE DIRECT ON (node1) 'ALTER NODE node1 WITH (TYPE=<span class=\"string\">''</span>datanode<span class=\"string\">''</span>, HOST=<span class=\"string\">''</span>datanode1<span class=\"string\">''</span>, PORT=5433, PRIMARY, PREFERRED)<span class=\"string\">';</span></div><div class=\"line\">EXECUTE DIRECT</div><div class=\"line\">EXECUTE DIRECT ON (node1) 'CREATE NODE node2 WITH (TYPE=<span class=\"string\">''</span>datanode<span class=\"string\">''</span>, HOST=<span class=\"string\">''</span>datanode2<span class=\"string\">''</span>, PORT=5433, PREFERRED)<span class=\"string\">';</span></div><div class=\"line\">EXECUTE DIRECT</div><div class=\"line\">EXECUTE DIRECT ON (node1) 'SELECT pgxc_pool_reload()<span class=\"string\">';</span></div><div class=\"line\"> pgxc_pool_reload</div><div class=\"line\">------------------</div><div class=\"line\"> t</div><div class=\"line\">(1 row)</div><div class=\"line\"></div><div class=\"line\">EXECUTE DIRECT ON (node2) 'CREATE NODE coord1 WITH (TYPE=<span class=\"string\">''</span>coordinator<span class=\"string\">''</span>, HOST=<span class=\"string\">''</span>datanode1<span class=\"string\">''</span>, PORT=5432)<span class=\"string\">';</span></div><div class=\"line\">EXECUTE DIRECT</div><div class=\"line\">EXECUTE DIRECT ON (node2) 'CREATE NODE coord2 WITH (TYPE=<span class=\"string\">''</span>coordinator<span class=\"string\">''</span>, HOST=<span class=\"string\">''</span>datanode2<span class=\"string\">''</span>, PORT=5432)<span class=\"string\">';</span></div><div class=\"line\">EXECUTE DIRECT</div><div class=\"line\">EXECUTE DIRECT ON (node2) 'CREATE NODE node1 WITH (TYPE=<span class=\"string\">''</span>datanode<span class=\"string\">''</span>, HOST=<span class=\"string\">''</span>datanode1<span class=\"string\">''</span>, PORT=5433, PRIMARY, PREFERRED)<span class=\"string\">';</span></div><div class=\"line\">EXECUTE DIRECT</div><div class=\"line\">EXECUTE DIRECT ON (node2) 'ALTER NODE node2 WITH (TYPE=<span class=\"string\">''</span>datanode<span class=\"string\">''</span>, HOST=<span class=\"string\">''</span>datanode2<span class=\"string\">''</span>, PORT=5433, PREFERRED)<span class=\"string\">';</span></div><div class=\"line\">EXECUTE DIRECT</div><div class=\"line\">EXECUTE DIRECT ON (node2) 'SELECT pgxc_pool_reload()<span class=\"string\">';</span></div><div class=\"line\"> pgxc_pool_reload</div><div class=\"line\">------------------</div><div class=\"line\"> t</div><div class=\"line\">(1 row)</div><div class=\"line\"></div><div class=\"line\">Done.</div></pre></td></tr></table></figure></p>\n<ul>\n<li>遇到的问题<br>安装时出现<code>permission denied</code><br>是因为权限不足 使用<code>sudo chmod -R 777 /usr</code><br>或<code>sudo pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf init all</code></li>\n</ul>\n<h3 id=\"集群验证\"><a href=\"#集群验证\" class=\"headerlink\" title=\"集群验证\"></a>集群验证</h3><p>在datanode1节点上<br>连接上5432端口，即node1上的coordinator，查看集群节点状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@datanode1 ~]$ psql -p 5432</div><div class=\"line\">psql (PGXL 9.5r1.4, based on PG 9.5.5 (Postgres-XL 9.5r1.4))</div><div class=\"line\">Type <span class=\"string\">\"help\"</span> <span class=\"keyword\">for</span> help.</div><div class=\"line\"></div><div class=\"line\">postgres=<span class=\"comment\"># select * from pgxc_node;</span></div><div class=\"line\"> node_name | node_type | node_port | node_host | nodeis_primary | nodeis_preferred |   node_id</div><div class=\"line\">-----------+-----------+-----------+-----------+----------------+------------------+-------------</div><div class=\"line\"> coord1    | C         |      5432 | datanode1 | f              | f                |  1885696643</div><div class=\"line\"> coord2    | C         |      5432 | datanode2 | f              | f                | -1197102633</div><div class=\"line\"> node1     | D         |      5433 | datanode1 | t              | t                |  1148549230</div><div class=\"line\"> node2     | D         |      5433 | datanode2 | f              | f                |  -927910690</div><div class=\"line\">(4 rows)</div></pre></td></tr></table></figure>\n<p>如上面所示，可看到2个coordinator，2个node。集群状态正常<br>尝试创建测试表test1，并插入数据</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">postgres=<span class=\"comment\"># create table test1(id int,name text);</span></div><div class=\"line\">CREATE TABLE</div><div class=\"line\">postgres=<span class=\"comment\"># insert into test1(id,name) select generate_series(1,8),'test';</span></div><div class=\"line\">INSERT 0 8</div><div class=\"line\">postgres=<span class=\"comment\"># select * from test1;</span></div><div class=\"line\"> id | name</div><div class=\"line\">----+------</div><div class=\"line\">  1 | <span class=\"built_in\">test</span></div><div class=\"line\">  2 | <span class=\"built_in\">test</span></div><div class=\"line\">  5 | <span class=\"built_in\">test</span></div><div class=\"line\">  6 | <span class=\"built_in\">test</span></div><div class=\"line\">  8 | <span class=\"built_in\">test</span></div><div class=\"line\">  3 | <span class=\"built_in\">test</span></div><div class=\"line\">  4 | <span class=\"built_in\">test</span></div><div class=\"line\">  7 | <span class=\"built_in\">test</span></div><div class=\"line\">(8 rows)</div><div class=\"line\"></div><div class=\"line\">postgres=<span class=\"comment\"># exit</span></div><div class=\"line\">postgres-<span class=\"comment\"># \\q</span></div></pre></td></tr></table></figure>\n<p>连接到datanode1服务器的5433端口，即node1，查看测试表的数据<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@datanode1 ~]$ psql -p 5433</div><div class=\"line\">psql (PGXL 9.5r1.4, based on PG 9.5.5 (Postgres-XL 9.5r1.4))</div><div class=\"line\">Type <span class=\"string\">\"help\"</span> <span class=\"keyword\">for</span> help.</div><div class=\"line\"></div><div class=\"line\">postgres=<span class=\"comment\"># select * from test1;</span></div><div class=\"line\"> id | name</div><div class=\"line\">----+------</div><div class=\"line\">  1 | <span class=\"built_in\">test</span></div><div class=\"line\">  2 | <span class=\"built_in\">test</span></div><div class=\"line\">  5 | <span class=\"built_in\">test</span></div><div class=\"line\">  6 | <span class=\"built_in\">test</span></div><div class=\"line\">  8 | <span class=\"built_in\">test</span></div><div class=\"line\">(5 rows)</div></pre></td></tr></table></figure></p>\n<p>可看到表中数据是不全的<br>再去datanode2服务器查看<br>先连接到5432端口，即coordinator<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@datanode2 ~]$ psql -p 5432</div><div class=\"line\">psql (PGXL 9.5r1.4, based on PG 9.5.5 (Postgres-XL 9.5r1.4))</div><div class=\"line\">Type <span class=\"string\">\"help\"</span> <span class=\"keyword\">for</span> help.</div><div class=\"line\"></div><div class=\"line\">postgres=<span class=\"comment\"># select * from test1;</span></div><div class=\"line\"> id | name</div><div class=\"line\">----+------</div><div class=\"line\">  1 | <span class=\"built_in\">test</span></div><div class=\"line\">  2 | <span class=\"built_in\">test</span></div><div class=\"line\">  5 | <span class=\"built_in\">test</span></div><div class=\"line\">  6 | <span class=\"built_in\">test</span></div><div class=\"line\">  8 | <span class=\"built_in\">test</span></div><div class=\"line\">  3 | <span class=\"built_in\">test</span></div><div class=\"line\">  4 | <span class=\"built_in\">test</span></div><div class=\"line\">  7 | <span class=\"built_in\">test</span></div><div class=\"line\">(8 rows)</div><div class=\"line\"></div><div class=\"line\">postgres=<span class=\"comment\"># \\q</span></div></pre></td></tr></table></figure></p>\n<p>再切换到5433端口，即node2<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@datanode2 ~]$ psql -p 5433</div><div class=\"line\">psql (PGXL 9.5r1.4, based on PG 9.5.5 (Postgres-XL 9.5r1.4))</div><div class=\"line\">Type <span class=\"string\">\"help\"</span> <span class=\"keyword\">for</span> help.</div><div class=\"line\"></div><div class=\"line\">postgres=<span class=\"comment\"># select * from test1;</span></div><div class=\"line\"> id | name</div><div class=\"line\">----+------</div><div class=\"line\">  3 | <span class=\"built_in\">test</span></div><div class=\"line\">  4 | <span class=\"built_in\">test</span></div><div class=\"line\">  7 | <span class=\"built_in\">test</span></div><div class=\"line\">(3 rows)</div></pre></td></tr></table></figure></p>\n<p>正好是node1中缺少的那部分数据<br>证实分布式数据库集群搭建完成</p>\n<h3 id=\"数据库集群日常操作\"><a href=\"#数据库集群日常操作\" class=\"headerlink\" title=\"数据库集群日常操作\"></a>数据库集群日常操作</h3><p>关闭集群<br>在gtm服务器上执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@gtm ~]$ pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf stop all</div><div class=\"line\">/bin/bash</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">Reading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf</div><div class=\"line\">Finished reading configuration.</div><div class=\"line\">   ******** PGXC_CTL START ***************</div><div class=\"line\"></div><div class=\"line\">Current directory: /home/postgres/pgxc_ctl</div><div class=\"line\">Stopping all the coordinator masters.</div><div class=\"line\">Stopping coordinator master coord1.</div><div class=\"line\">Stopping coordinator master coord2.</div><div class=\"line\">Done.</div><div class=\"line\">Stopping all the datanode masters.</div><div class=\"line\">Stopping datanode master node1.</div><div class=\"line\">Stopping datanode master node2.</div><div class=\"line\">Done.</div><div class=\"line\">Stopping all the gtm proxies.</div><div class=\"line\">Stopping gtm proxy gtm_pxy1.</div><div class=\"line\">Stopping gtm proxy gtm_pxy2.</div><div class=\"line\">waiting <span class=\"keyword\">for</span> server to shut down.... <span class=\"keyword\">done</span></div><div class=\"line\">server stopped</div><div class=\"line\">waiting <span class=\"keyword\">for</span> server to shut down.... <span class=\"keyword\">done</span></div><div class=\"line\">server stopped</div><div class=\"line\">Done.</div><div class=\"line\">Stop GTM slave</div><div class=\"line\">waiting <span class=\"keyword\">for</span> server to shut down.... <span class=\"keyword\">done</span></div><div class=\"line\">server stopped</div><div class=\"line\">Stop GTM master</div><div class=\"line\">waiting <span class=\"keyword\">for</span> server to shut down.... <span class=\"keyword\">done</span></div><div class=\"line\">server stopped</div></pre></td></tr></table></figure></p>\n<h3 id=\"开启集群\"><a href=\"#开启集群\" class=\"headerlink\" title=\"开启集群\"></a>开启集群</h3><p>在gtm服务器上执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@gtm ~]$ pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf start all</div><div class=\"line\">/bin/bash</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">Reading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf</div><div class=\"line\">Finished reading configuration.</div><div class=\"line\">   ******** PGXC_CTL START ***************</div><div class=\"line\"></div><div class=\"line\">Current directory: /home/postgres/pgxc_ctl</div><div class=\"line\">Start GTM master</div><div class=\"line\">server starting</div><div class=\"line\">Start GTM slaveserver starting</div><div class=\"line\">Done.</div><div class=\"line\">Starting all the gtm proxies.</div><div class=\"line\">Starting gtm proxy gtm_pxy1.</div><div class=\"line\">Starting gtm proxy gtm_pxy2.</div><div class=\"line\">server starting</div><div class=\"line\">server starting</div><div class=\"line\">Done.</div><div class=\"line\">Starting coordinator master.</div><div class=\"line\">Starting coordinator master coord1</div><div class=\"line\">Starting coordinator master coord2</div><div class=\"line\">2017-10-26 20:21:35.537 PDT [22477] LOG:  listening on IPv4 address <span class=\"string\">\"0.0.0.0\"</span>, port 5432</div><div class=\"line\">2017-10-26 20:21:35.538 PDT [22477] LOG:  listening on IPv6 address <span class=\"string\">\"::\"</span>, port 5432</div><div class=\"line\">2017-10-26 20:21:35.539 PDT [22477] LOG:  listening on Unix socket <span class=\"string\">\"/tmp/.s.PGSQL.5432\"</span></div><div class=\"line\">2017-10-26 20:21:35.556 PDT [22477] LOG:  redirecting <span class=\"built_in\">log</span> output to logging collector process</div><div class=\"line\">2017-10-26 20:21:35.556 PDT [22477] HINT:  Future <span class=\"built_in\">log</span> output will appear <span class=\"keyword\">in</span> directory <span class=\"string\">\"pg_log\"</span>.</div><div class=\"line\">2017-10-26 20:21:35.563 PDT [22504] LOG:  listening on IPv4 address <span class=\"string\">\"0.0.0.0\"</span>, port 5432</div><div class=\"line\">2017-10-26 20:21:35.563 PDT [22504] LOG:  listening on IPv6 address <span class=\"string\">\"::\"</span>, port 5432</div><div class=\"line\">2017-10-26 20:21:35.565 PDT [22504] LOG:  listening on Unix socket <span class=\"string\">\"/tmp/.s.PGSQL.5432\"</span></div><div class=\"line\">2017-10-26 20:21:35.583 PDT [22504] LOG:  redirecting <span class=\"built_in\">log</span> output to logging collector process</div><div class=\"line\">2017-10-26 20:21:35.583 PDT [22504] HINT:  Future <span class=\"built_in\">log</span> output will appear <span class=\"keyword\">in</span> directory <span class=\"string\">\"pg_log\"</span>.</div><div class=\"line\">Done.</div><div class=\"line\">Starting all the datanode masters.</div><div class=\"line\">Starting datanode master node1.</div><div class=\"line\">Starting datanode master node2.</div><div class=\"line\">2017-10-26 20:21:36.360 PDT [22590] LOG:  listening on IPv4 address <span class=\"string\">\"0.0.0.0\"</span>, port 5433</div><div class=\"line\">2017-10-26 20:21:36.360 PDT [22590] LOG:  listening on IPv6 address <span class=\"string\">\"::\"</span>, port 5433</div><div class=\"line\">2017-10-26 20:21:36.362 PDT [22590] LOG:  listening on Unix socket <span class=\"string\">\"/tmp/.s.PGSQL.5433\"</span></div><div class=\"line\">2017-10-26 20:21:36.382 PDT [22590] LOG:  redirecting <span class=\"built_in\">log</span> output to logging collector process</div><div class=\"line\">2017-10-26 20:21:36.382 PDT [22590] HINT:  Future <span class=\"built_in\">log</span> output will appear <span class=\"keyword\">in</span> directory <span class=\"string\">\"pg_log\"</span>.</div><div class=\"line\">2017-10-26 20:21:36.374 PDT [22617] LOG:  listening on IPv4 address <span class=\"string\">\"0.0.0.0\"</span>, port 5433</div><div class=\"line\">2017-10-26 20:21:36.374 PDT [22617] LOG:  listening on IPv6 address <span class=\"string\">\"::\"</span>, port 5433</div><div class=\"line\">2017-10-26 20:21:36.375 PDT [22617] LOG:  listening on Unix socket <span class=\"string\">\"/tmp/.s.PGSQL.5433\"</span></div><div class=\"line\">2017-10-26 20:21:36.395 PDT [22617] LOG:  redirecting <span class=\"built_in\">log</span> output to logging collector process</div><div class=\"line\">2017-10-26 20:21:36.395 PDT [22617] HINT:  Future <span class=\"built_in\">log</span> output will appear <span class=\"keyword\">in</span> directory <span class=\"string\">\"pg_log\"</span>.</div><div class=\"line\">Done.</div></pre></td></tr></table></figure>\n<h4 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h4><p><a href=\"http://blog.csdn.net/sunbocong/article/details/78363453\" target=\"_blank\" rel=\"external\">Postgres-XL 9.5简易搭建</a></p>\n","excerpt":"<blockquote>\n<p>之前因为公司的产品需求，研究过分布式方案，最近抽空整理了下</p>\n</blockquote>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><ul>\n<li>主要是以<code>nginx</code>搭载<code>keepalived</code>实现 web 业务服务器 <code>keepalives</code>防止单点故障</li>\n<li><code>reids</code>分布式缓存</li>\n<li><code>fastdfs</code>分布式文件</li>\n<li><code>postgre-xl</code>分布式数据库服务器</li>\n</ul>\n<blockquote>\n<p>简单说，分布式是以缩短单个任务的执行时间来提升效率的，而集群则是通过提高单位时间内执行的任务数来提升效率。</p>\n</blockquote>\n<p><a href=\"https://segmentfault.com/a/1190000002418709\">参考</a></p>","more":"<blockquote>\n<p>以下是实验中遇到的问题以及安装方法</p>\n</blockquote>\n<h1 id=\"CentOS7-安装问题集\"><a href=\"#CentOS7-安装问题集\" class=\"headerlink\" title=\"CentOS7 安装问题集\"></a>CentOS7 安装问题集</h1><blockquote>\n<p>远程无法访问（防火墙问题）</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">firewall-cmd --zone=public --add-port=80/tcp --permanent</div><div class=\"line\"></div><div class=\"line\">firewall-cmd --reload</div><div class=\"line\"></div><div class=\"line\">systemctl stop firewalld.service <span class=\"comment\">#停止</span></div><div class=\"line\"></div><div class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld.service <span class=\"comment\">#禁用</span></div><div class=\"line\"></div><div class=\"line\">firewall-cmd --state <span class=\"comment\">#查看默认防火墙状态（关闭后显示notrunning，开启后显示running）</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># liunx图形界面获得root权限</span></div><div class=\"line\">直接 `sudo nautilus` （unity，gnome）或 `sudo dolphin` (kde) ,就可以以root权限打开文件管理器了</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># liunx 远程获取root权限</span></div><div class=\"line\">`sudo vi /etc/ssh/sshd_config`</div><div class=\"line\">将PermitRootLogin值改yes</div><div class=\"line\">允许不输入密码登录</div><div class=\"line\">将PermitEmptyPasswords yes前面的<span class=\"comment\">#号去掉</span></div><div class=\"line\">重启服务：service sshd restart（/etc/initd.d/sshd restart）</div></pre></td></tr></table></figure>\n<h1 id=\"nginx\"><a href=\"#nginx\" class=\"headerlink\" title=\"nginx\"></a>nginx</h1><p>参考另一篇<a href=\"https://rsl140.github.io/blog/2018/01/06/nginx/\">nginx 安装</a></p>\n<h1 id=\"keepalives\"><a href=\"#keepalives\" class=\"headerlink\" title=\"keepalives\"></a>keepalives</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Keepalived 是一个基于 VRRP 协议来实现的服务高可用方案，可以利用其来避免 IP 单点故障，类似的工具还有 heartbeat、corosync、pacemaker。</p>\n<p>但是它一般不会单独出现，而是与其它负载均衡技术（如 lvs、haproxy、nginx）一起工作来达到集群的高可用。</p>\n<p>Keepalived 的作用是检测服务器的状态，如果有一台 web 服务器死机，或工作出现故障，Keepalived 将检测到，并将有故障的服务器从系统中剔除，同时使用其他服务器代替该服务器的工作；</p>\n<p>当服务器工作正常后 Keepalived 自动将服务器加入到服务器群中，这些工作全部自动完成，不需要人工干涉，需要人工做的只是修复故障的服务器。</p>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">graph LR</div><div class=\"line\">用户 --&gt; 交换机</div><div class=\"line\">交换机 --&gt; Nginx1:负载均衡/keepalived:主</div><div class=\"line\">Nginx2:负载均衡/keepalived:备 --&gt; 心跳检查</div><div class=\"line\">心跳检查 --&gt; Nginx1:负载均衡/keepalived:主</div><div class=\"line\">Nginx1:负载均衡/keepalived:主 --&gt; tomact1</div><div class=\"line\">Nginx1:负载均衡/keepalived:主 --&gt; tomact2</div></pre></td></tr></table></figure>\n<p>首先 Keepalived 可以在主机上产生一个虚拟的 ip, 这里叫做 vip(v 是 virtual 的意思):192.168.200.150, keepalived 会将这个 vip 绑定到交换机上.</p>\n<p>当用户访问主机:192.168.200.129 时, 交换机会通过这个 ip 和 vip 的对应找到 192.168.200.129 上的 Nginx 进行处理.</p>\n<p>如果当有一天 192.168.200.129 上的 Nginx 挂掉的时候, Keepalived 会立即在备机上生成一个相同的 vip: 192.168.200.150, 当用户继续访问 192.168.200.129 时, 交换机上已经绑定了 vip, 这时发现这个 vip 是存在于 192.168.200.130 上面的, 所以直接将请求转发到了备机上.</p>\n<p>如果主机被修复好能够继续对外提供服务时, 这时 keepalived 会将主机上继续生成这个 vip, 同时回收在备机上生成的 vip. 这个是通过心跳检查来判断主机已恢复使用.</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><p>wget <a href=\"http://www.keepalived.org/software/keepalived-1.2.23.tar.gz\">http://www.keepalived.org/software/keepalived-1.2.23.tar.gz</a></p>\n<h3 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h3><p>tar -zxvf keepalived-1.2.23.tar.gz<br>cd keepalived-1.2.23</p>\n<h3 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>./configure –prefix=/usr/local/keepalived #prefix 指定安装目录</p>\n<p>如果提示错误 openssl 不存在<br>sudo apt-get install openssl<br>sudo apt-get install libssl-dev</p>\n<p>make<br>make install</p>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\">【/usr/<span class=\"built_in\">local</span>/keepalived/etc/keepalived/keepalived.conf】</div><div class=\"line\">   global_defs &#123;</div><div class=\"line\">       notification_email &#123; <span class=\"comment\">#指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。</span></div><div class=\"line\">           acassen@firewall.loc</div><div class=\"line\">           failover@firewall.loc</div><div class=\"line\">           sysadmin@firewall.loc</div><div class=\"line\">       &#125;</div><div class=\"line\">       notification_email_from Alexandre.Cassen@firewall.loc <span class=\"comment\">#指定发件人</span></div><div class=\"line\">       smtp_server 127.0.0.1 <span class=\"comment\">#发送email的smtp地址</span></div><div class=\"line\">       smtp_connect_timeout 30 <span class=\"comment\">#超时时间</span></div><div class=\"line\">       router_id nginx <span class=\"comment\">#运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同</span></div><div class=\"line\">       vrrp_skip_check_adv_addr</div><div class=\"line\">       vrrp_strict</div><div class=\"line\">       vrrp_garp_interval 0</div><div class=\"line\">       vrrp_gna_interval 0</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\">   vrrp_instance VI_1 &#123;</div><div class=\"line\">       state MASTER <span class=\"comment\">#指定当前节点为主节点 备用节点上设置为BACKUP即可</span></div><div class=\"line\">       interface eth0 <span class=\"comment\">#绑定虚拟IP的网络接口,使用ip a 查看网卡名称2.网卡名称</span></div><div class=\"line\">       virtual_router_id 51 <span class=\"comment\">#VRRP组名，两个节点的设置必须一样，以指明各个节点属于同一VRRP组</span></div><div class=\"line\">       priority 100 <span class=\"comment\">#主节点的优先级（1-254之间），备用节点必须比主节点优先级低</span></div><div class=\"line\">       advert_int 1</div><div class=\"line\">       authentication &#123; <span class=\"comment\">#设置验证信息，两个节点必须一致</span></div><div class=\"line\">       　　auth_type PASS</div><div class=\"line\">       　　auth_pass 1111</div><div class=\"line\">       &#125;</div><div class=\"line\">       virtual_ipaddress &#123; <span class=\"comment\">#指定虚拟IP, 两个节点设置必须一样</span></div><div class=\"line\">       　　192.168.0.110/24</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\">   【/usr/<span class=\"built_in\">local</span>/keepalived/etc/sysconfig/keepalived】</div><div class=\"line\"></div><div class=\"line\">   KEEPALIVED_OPTIONS=<span class=\"string\">\"-D -f /usr/local/keepalived/etc/keepalived/keepalived.conf\"</span> <span class=\"comment\">#指定keepalived配置文件路径</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">因为我们使用非默认路径（/usr/<span class=\"built_in\">local</span>）安装keepalived，需要设置一些软链接以保证keepalived能正常启动</div><div class=\"line\"></div><div class=\"line\">ln <span class=\"_\">-s</span> /usr/<span class=\"built_in\">local</span>/keepalived/sbin/keepalived  /usr/bin <span class=\"comment\">#将keepalived主程序加入到环境变量</span></div><div class=\"line\">ln <span class=\"_\">-s</span> /usr/<span class=\"built_in\">local</span>/keepalived/etc/sysconfig/keepalived  /etc/sysconfig/ <span class=\"comment\">#keepalived启动脚本变量引用文件，默认文件路径是/etc/sysconfig/，也可以不做软链接，直接修改启动脚本中文件路径即可</span></div><div class=\"line\">cp /usr/<span class=\"built_in\">local</span>/src/keepalived-1.4.0/keepalived/etc/init.d/keepalived /etc/init.d/</div><div class=\"line\">cp -r ./keepalived/etc/keepalived  /etc/  <span class=\"comment\">#注意更新</span></div></pre></td></tr></table></figure>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">service keepalived start|stop|restart</div><div class=\"line\">systemctl daemon-reload</div><div class=\"line\">chkconfig keepalived on</div></pre></td></tr></table></figure>\n<p>默认的配置文件中，指定了虚拟可使用ip addr（或ip a）命令验证之。查看网卡下是否有虚拟ip<br>如果虚拟ip ping不同<br>1.vim /etc/keepalived/keepalived.conf<br>把这个注释就可以了<br>vrrp_strict</p>\n<p>2.可能上级交换机或路由器绑定了apr，也就是ip与mac地址绑定<br>可以使用 arping -I [网卡名] -c 5 -s [本机IP或vip] [网关] 看一下接收情况</p>\n<p>应用</p>\n<p>keepalived两种模式：主-备、主-主</p>\n<p>主-备</p>\n<p><code>虚拟IP：192.168.0.110         主节点：192.168.0.50          备用节点：192.168.0.51</code></p>\n<h3 id=\"主配置文件\"><a href=\"#主配置文件\" class=\"headerlink\" title=\"主配置文件\"></a>主配置文件</h3><p>   【/usr/local/keepalived/etc/keepalived/keepalived.conf】</p>\n<p>   global_defs {<br>       notification_email { #指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。<br>           acassen@firewall.loc<br>           failover@firewall.loc<br>           sysadmin@firewall.loc<br>       }<br>       notification_email_from Alexandre.Cassen@firewall.loc #指定发件人<br>       smtp_server 127.0.0.1 #发送email的smtp地址<br>       smtp_connect_timeout 30 #超时时间<br>       router_id LVS_DEVEL #运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同<br>       vrrp_skip_check_adv_addr<br>       vrrp_strict<br>       vrrp_garp_interval 0<br>       vrrp_gna_interval 0<br>   }</p>\n<p>   vrrp_instance VI_1 {<br>       state MASTER #指定当前节点为主节点 备用节点上设置为BACKUP即可<br>       interface eth0 #绑定虚拟IP的网络接口 使用ip a查看<br>       virtual_router_id 51 #VRRP组名，两个节点的设置必须一样，以指明各个节点属于同一VRRP组<br>       priority 100 #主节点的优先级（1-254之间），备用节点必须比主节点优先级低<br>       advert_int 1<br>       authentication { #设置验证信息，两个节点必须一致<br>           auth_type PASS<br>           auth_pass 1111<br>       }<br>       virtual_ipaddress { #指定虚拟IP, 两个节点设置必须一样<br>           192.168.0.110/24<br>       }<br>   }</p>\n<h3 id=\"备配置文件\"><a href=\"#备配置文件\" class=\"headerlink\" title=\"备配置文件\"></a>备配置文件</h3><p>   【/usr/local/keepalived/etc/keepalived/keepalived.conf】</p>\n<p>   global_defs {<br>       notification_email { #指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。<br>           acassen@firewall.loc<br>           failover@firewall.loc<br>           sysadmin@firewall.loc<br>       }<br>       notification_email_from Alexandre.Cassen@firewall.loc #指定发件人<br>       smtp_server 127.0.0.1 #发送email的smtp地址<br>       smtp_connect_timeout 30 #超时时间<br>       router_id LVS_DEVEL #运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同<br>       vrrp_skip_check_adv_addr<br>       vrrp_strict<br>       vrrp_garp_interval 0<br>       vrrp_gna_interval 0<br>   }</p>\n<p>   vrrp_instance VI_1 {<br>       state BACKUP #指定当前节点为主节点 备用节点上设置为BACKUP即可<br>       interface eth0 #绑定虚拟IP的网络接口<br>       virtual_router_id 51 #VRRP组名，两个节点的设置必须一样，以指明各个节点属于同一VRRP组<br>       priority 99 #主节点的优先级（1-254之间），备用节点必须比主节点优先级低<br>       advert_int 1<br>       authentication { #设置验证信息，两个节点必须一致<br>           auth_type PASS<br>           auth_pass 1111<br>       }<br>       virtual_ipaddress { #指定虚拟IP, 两个节点设置必须一样<br>           192.168.0.110/24<br>       }<br>   }</p>\n<p>主-主</p>\n<p>虚拟IP：192.168.1.21、192.168.1.22      A节点：192.168.1.23       B节点：192.168.1.24</p>\n<p>主备模式的缺点就是始终只有一台机器位于工作状态，另外一台机器永远是备用状态，存在资源浪费之问题。</p>\n<p>双主模式允许两台机器均处于工作状态并互相作为备份。搭建keepalived双方模式的要素：</p>\n<p>1.必须有两个虚拟IP, 分别绑定至两个节点上</p>\n<p>2.每个节点作为某个虚拟IP的主节点，并同时作为另外一个虚拟IP的备用节点。</p>\n<p>3.当某个节点产生故障时，两个虚拟IP自动绑定至正常节点上</p>\n<p>也就是说，两个节点的配置应该是交叉的，对同个虚拟IP，交叉互为主备。</p>\n<h3 id=\"节点A配置文件\"><a href=\"#节点A配置文件\" class=\"headerlink\" title=\"节点A配置文件\"></a>节点A配置文件</h3><p>   【/usr/local/keepalived/etc/keepalived/keepalived.conf】</p>\n<p>   global_defs {<br>       notification_email { #指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。<br>           acassen@firewall.loc<br>           failover@firewall.loc<br>           sysadmin@firewall.loc<br>       }<br>       notification_email_from Alexandre.Cassen@firewall.loc #指定发件人<br>       smtp_server 127.0.0.1 #发送email的smtp地址<br>       smtp_connect_timeout 30 #超时时间<br>       router_id LVS_DEVEL #运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同<br>       vrrp_skip_check_adv_addr<br>       vrrp_strict<br>       vrrp_garp_interval 0<br>       vrrp_gna_interval 0<br>   }</p>\n<p>   vrrp_instance VI_1 {<br>       state MASTER<br>       interface eth0<br>       virtual_router_id 51 #本机两个vrrp_instance组的此值不能相同，但对应备用节点的此值必须相同<br>       priority 100 #对应备用节点值应该比此值小<br>       advert_int 1<br>       authentication {<br>           auth_type PASS<br>           auth_pass 1111<br>       }<br>       virtual_ipaddress {<br>           192.168.1.21/24<br>       }<br>   }</p>\n<p>   vrrp_instance VI_2 {<br>       state BACKUP<br>       interface eth0<br>       virtual_router_id 52 #本机两个vrrp_instance组的此值不能相同，但对应备用节点的此值必须相同<br>       priority 99 #主节点的值应该比此值大<br>       advert_int 1<br>       authentication {<br>           auth_type PASS<br>           auth_pass 1111<br>       }<br>       virtual_ipaddress {<br>           192.168.1.22/24<br>       }<br>   }</p>\n<h3 id=\"节点B配置文件\"><a href=\"#节点B配置文件\" class=\"headerlink\" title=\"节点B配置文件\"></a>节点B配置文件</h3><p>   【/usr/local/keepalived/etc/keepalived/keepalived.conf】</p>\n<p>   global_defs {<br>   　　　notification_email { #指定keepalived在发生事情的时候，发送邮件告知，可以有多个地址，每行一个。<br>   　　　　acassen@firewall.loc<br>   　　　　failover@firewall.loc<br>   　　　　sysadmin@firewall.loc<br>   }<br>   　　notification_email_from Alexandre.Cassen@firewall.loc #指定发件人<br>   　　smtp_server 127.0.0.1 #发送email的smtp地址<br>   　　smtp_connect_timeout 30 #超时时间<br>   　　router_id LVS_DEVEL #运行keepalived的机器的一个标识,多个节点标识可以相同，也可以不同<br>   　　vrrp_skip_check_adv_addr<br>   　　vrrp_strict<br>   　　vrrp_garp_interval 0<br>   　　vrrp_gna_interval 0<br>   }</p>\n<p>   vrrp_instance VI_1 {<br>   　　state BACKUP<br>   　　interface eth0<br>   　　virtual_router_id 51 #本机两个vrrp_instance组的此值不能相同，但对应备用节点的此值必须相同<br>   　　priority 99 #对应主节点值应该比此值大<br>   　　advert_int 1<br>   　　authentication {<br>   　　　　auth_type PASS<br>   　　　　auth_pass 1111<br>   　　}<br>   　　virtual_ipaddress {<br>   　　　　192.168.1.21/24<br>   　　}<br>   }</p>\n<p>   vrrp_instance VI_2 {<br>   　　state MASTER<br>   　　interface eth0<br>   　　virtual_router_id 52 #本机两个vrrp_instance组的此值不能相同，但对应备用节点的此值必须相同<br>   　　priority 100 #对应备用节点的值应该比此值小<br>   　　advert_int 1<br>   　　authentication {<br>   　　　　auth_type PASS<br>   　　　　auth_pass 1111<br>   　　}<br>   　　virtual_ipaddress {<br>   　　　　192.168.1.22/24<br>   　　}<br>   }</p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>两个节点实际都处于正常工作状态，但是无法接收到彼此的组播通知，这时两个节点均强行绑定虚拟IP，导致不可预料的后果。</p>\n<p>这时就需要设置仲裁，即每个节点必须判断自身的状态（应用服务状态及自身网络状态），要实现这两点可使用自定义shell脚本实现，通过周期性地检查自身应用服务状态，并不断ping网关（或其它可靠的参考IP）均可。当自身服务异常、或无法ping通网关，则认为自身出现故障，就应该移除掉虚拟IP(停止keepalived服务即可）。</p>\n<p>主要借助keepalived提供的vrrp_script及track_script实现：</p>\n<p>在keepalived的配置文件最前面加入以下代码，定义一个跟踪脚本：</p>\n<p>vrrp_script check_local { #定义一个名称为check_local的检查脚本<br>　　script “/usr/local/keepalived/bin/check_local.sh” #shell脚本的路径<br>　　interval 5 #运行间隔<br>}</p>\n<p>再在vrrp_instance配置中加入以下代码使用上面定义的检测脚本：</p>\n<p>track_script {<br>　　check_local<br>}<br>我们在/usr/local/keepalived/bin/check_local.sh定义的检测规则是：</p>\n<ol>\n<li><p>自身web服务故障（超时，http返回状态不是200）</p>\n</li>\n<li><p>无法ping通网关</p>\n</li>\n<li><p>产生以上任何一个问题，均应该移除本机的虚拟IP(停止keepalived实例即可)</p>\n</li>\n</ol>\n<p>但这里有个小问题，如果本机或是网关偶尔出现一次故障，那么我们不能认为是服务故障。更好的做法是如果连续N次检测本机服务不正常或连接N次无法ping通网关，才认为是故障产生，才需要进行故障转移。</p>\n<p>但这么做的缺点是，如果脚本检测到故障产生，并停止掉了keepalived服务，那么当故障恢复后，keepalived是无法自动恢复的。</p>\n<p>还可以利用独立的脚本以秒级的间隔检查自身服务及网关连接性，再根据故障情况控制keepalived的运行或是停止。</p>\n<p>在每个节点运行shell脚本（check_service.sh）检测本机的服务是否正常，一旦检测到服务异常时，停止掉本机的keepalived, 如此虚拟IP自动转移到备用机器之上，如每隔3秒检测一次本机服务状态，如果连接3次检测失败，则停止掉keepalived实例。同时如果本机服务是正常的，但是keepalived没有启动（故障恢复之后），则启动keepalived，以达到故障恢复之目的。</p>\n<p>check_service.sh文件的内容<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">!/bin/bash</div><div class=\"line\"></div><div class=\"line\">   pidfile=/var/lock/subsys/`basename <span class=\"variable\">$0</span>`.pid</div><div class=\"line\">   <span class=\"keyword\">if</span> [ <span class=\"_\">-f</span> <span class=\"variable\">$pidfile</span> ] &amp;&amp; [ <span class=\"_\">-e</span> /proc/`cat <span class=\"variable\">$pidfile</span>` ] ; <span class=\"keyword\">then</span></div><div class=\"line\">   　　<span class=\"built_in\">exit</span> 1</div><div class=\"line\">   <span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\">   <span class=\"built_in\">trap</span> <span class=\"string\">\"rm -fr <span class=\"variable\">$pidfile</span> ; exit 0\"</span> 1 2 3 15</div><div class=\"line\">   <span class=\"built_in\">echo</span> $$ &gt; <span class=\"variable\">$pidfile</span></div><div class=\"line\"></div><div class=\"line\">   maxfails=3</div><div class=\"line\">   fails=0</div><div class=\"line\">   success=0</div><div class=\"line\"></div><div class=\"line\">   <span class=\"keyword\">while</span> [ 1 ]</div><div class=\"line\">   <span class=\"keyword\">do</span></div><div class=\"line\">   　　/usr/bin/wget --timeout=3 --tries=1 http://127.0.0.1/ -q -O /dev/null</div><div class=\"line\">   　　<span class=\"keyword\">if</span> [ $? <span class=\"_\">-ne</span> 0 ] ; <span class=\"keyword\">then</span></div><div class=\"line\">   　　　　<span class=\"built_in\">let</span> fails=$[<span class=\"variable\">$fails</span>+1]</div><div class=\"line\">   　　　　success=0</div><div class=\"line\">   　　<span class=\"keyword\">else</span></div><div class=\"line\">   　　　　fails=0</div><div class=\"line\">   　　　　<span class=\"built_in\">let</span> success=$[<span class=\"variable\">$success</span>+1]</div><div class=\"line\">   　　<span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\">   　　<span class=\"keyword\">if</span> [ <span class=\"variable\">$fails</span> -ge <span class=\"variable\">$maxfails</span> ] ; <span class=\"keyword\">then</span></div><div class=\"line\">   　　　　fails=0</div><div class=\"line\">   　　　　success=0</div><div class=\"line\"></div><div class=\"line\">   　　　　<span class=\"comment\">#check keepalived is running ? try to stop it</span></div><div class=\"line\">   　　　　service keepalived status | grep running</div><div class=\"line\">   　　　　<span class=\"keyword\">if</span> [ $? <span class=\"_\">-eq</span> 0 ] ; <span class=\"keyword\">then</span></div><div class=\"line\">   　　　　　　logger -is <span class=\"string\">\"local service fails <span class=\"variable\">$maxfails</span> times ... try to stop keepalived.\"</span></div><div class=\"line\">   　　　　　　service keepalived stop 2&gt;&amp;1 | logger</div><div class=\"line\">   　　　　<span class=\"keyword\">fi</span></div><div class=\"line\">   　　<span class=\"keyword\">fi</span></div><div class=\"line\"></div><div class=\"line\">   　　<span class=\"keyword\">if</span> [ <span class=\"variable\">$success</span> <span class=\"_\">-gt</span> <span class=\"variable\">$maxfails</span> ] ; <span class=\"keyword\">then</span></div><div class=\"line\">   　　　　<span class=\"comment\">#check keepalived is stopped ? try to start it</span></div><div class=\"line\">   　　　　service keepalived status | grep stopped</div><div class=\"line\">   　　　　<span class=\"keyword\">if</span> [ $? <span class=\"_\">-eq</span> 0 ] ; <span class=\"keyword\">then</span></div><div class=\"line\">   　　　　　　logger -is <span class=\"string\">\"service changes normal, try to start keepalived .\"</span></div><div class=\"line\">   　　　　　　service keepalived start</div><div class=\"line\">   　　　　<span class=\"keyword\">fi</span></div><div class=\"line\">   　　　　success=0</div><div class=\"line\">   　　<span class=\"keyword\">fi</span></div><div class=\"line\">   　　sleep 3</div><div class=\"line\">   <span class=\"keyword\">done</span></div></pre></td></tr></table></figure></p>\n<p>两个节点上均应运行此脚本，请将此脚本加入到cron任务中（此程序已经作了单实例运行机制，加入计划任务的作用就是防止脚本意外中断后检测功能失效），可实现的功能：</p>\n<p>如果本地服务连续三次检测失败，就尝试停止keepalived服务（如果keepalived处于运行状态）</p>\n<p>如果本地服务连接三次检测成功，但keepalived没有启动，则启动之</p>\n<p>关键的执行点，均已经记录到系统日志中（/var/log/messages）</p>\n<p>执行crontab -e , 加入以下内容：</p>\n<p><em>/1 </em> <em> </em> * root /home/testuser/check_local.sh</p>\n<p>停止掉本机的keepalived, 稍过一会，就会keepalived服务被自动启动了（这是因为本地服务检测正常）</p>\n<p>停止掉本机的nginx, 稍过一会，就会发现keepalived服务也被停止掉了</p>\n<p>再启动nginx, 稍过一会，发现keepalived也被正常启动，并绑定了正确的虚拟IP</p>\n<h1 id=\"redis\"><a href=\"#redis\" class=\"headerlink\" title=\"redis\"></a>redis</h1><h2 id=\"1-下载解压安装redis\"><a href=\"#1-下载解压安装redis\" class=\"headerlink\" title=\"1.下载解压安装redis\"></a>1.下载解压安装redis</h2><h3 id=\"1-1redis源文件\"><a href=\"#1-1redis源文件\" class=\"headerlink\" title=\"1.1redis源文件\"></a>1.1redis源文件</h3><p>将redis源文件放在目录<code>/usr/local/src/</code>下</p>\n<h3 id=\"1-2解压redis\"><a href=\"#1-2解压redis\" class=\"headerlink\" title=\"1.2解压redis\"></a>1.2解压redis</h3><p>移动到redis所在文件目录</p>\n<blockquote>\n<p>cd /usr/local/src/<br>tar -zxvf redis.tar.gz</p>\n</blockquote>\n<h3 id=\"1-3编译安装redis\"><a href=\"#1-3编译安装redis\" class=\"headerlink\" title=\"1.3编译安装redis\"></a>1.3编译安装redis</h3><p>移动到解压后reids目录</p>\n<blockquote>\n<p>cd redis<br>make</p>\n</blockquote>\n<p>进入reids/src目录<br>make install</p>\n<h2 id=\"2-Redis的部署\"><a href=\"#2-Redis的部署\" class=\"headerlink\" title=\"2.Redis的部署\"></a>2.Redis的部署</h2><p>安装成功后，下面对Redis 进行部署<br>如果需使用tomcat来连接的话<br>1.关闭安全模式<br>2.设置密码</p>\n<h3 id=\"2-1执行Redis-server-命令，启动Redis-服务\"><a href=\"#2-1执行Redis-server-命令，启动Redis-服务\" class=\"headerlink\" title=\"2.1执行Redis-server 命令，启动Redis 服务\"></a>2.1执行Redis-server 命令，启动Redis 服务</h3><blockquote>\n<p>注意：这里直接执行Redis-server 启动的Redis服务，是在前台直接运行的，也就是说，执行完该命令后，如果Lunix关闭当前会话，则Redis服务也随即关闭。正常情况下，启动Redis服务需要从后台启动，并且指定启动配置文件。<br>3、后台启动redis服务<br>a)首先编辑conf文件，将daemonize属性改为yes（表明需要在后台运行）<br>cd etc/<br>vi redis.conf<br>如果redis.conf文件不存在就从安装目录复制过去<br>b)再次启动redis服务，并指定启动服务配置文件<br>redis-server  /etc/redis.conf</p>\n</blockquote>\n<p>4、服务端启动成功后，启动Redis</p>\n<blockquote>\n<p><code>redis-cli</code></p>\n</blockquote>\n<p>使用命令 config set requirepass admin<br>为redis设置密码为admin<br>输入验证密码<br>auth admin<br>保存密码设置信息到磁盘<br>save<br>退出<br>exit</p>\n<h2 id=\"3-tomcat配置\"><a href=\"#3-tomcat配置\" class=\"headerlink\" title=\"3.tomcat配置\"></a>3.tomcat配置</h2><h3 id=\"3-1-jar包\"><a href=\"#3-1-jar包\" class=\"headerlink\" title=\"3.1 jar包\"></a>3.1 jar包</h3><pre><code>commons-logging-1.2.jar\ncommons-pool2-2.4.2.jar\njedis-2.9.0.jar\ntomcat-redis-session-manager1.2.jar\n</code></pre><p>将以上4个jar包放入tomcat/lib下</p>\n<h3 id=\"3-2-content-xml配置\"><a href=\"#3-2-content-xml配置\" class=\"headerlink\" title=\"3.2 content.xml配置\"></a>3.2 content.xml配置</h3><p>配置Tomcat的conf目录下的context.xml文件：</p>\n<blockquote>\n<p>1.单点Reids配置<br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Valve className=<span class=\"string\">\"com.orangefunction.tomcat.redissessions.RedisSessionHandlerValve\"</span> /&gt;</div><div class=\"line\">&lt;Manager className=<span class=\"string\">\"com.orangefunction.tomcat.redissessions.RedisSessionManager\"</span></div><div class=\"line\">host=<span class=\"string\">\"192.168.0.111\"</span></div><div class=\"line\">port=<span class=\"string\">\"6379\"</span></div><div class=\"line\">password=<span class=\"string\">\"admin\"</span>//reids密码</div><div class=\"line\">database=<span class=\"string\">\"0\"</span></div><div class=\"line\">maxInactiveInterval=<span class=\"string\">\"60\"</span> /&gt;</div></pre></td></tr></table></figure></p>\n<p>2.Sentinel集群配置：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- Sentinel 配置 --&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;Valve className=<span class=\"string\">\"reyo.redis.session.manager.tomcat8.RedisSessionHandlerValve\"</span> /&gt;</div><div class=\"line\">&lt;Manager className=<span class=\"string\">\"reyo.redis.session.manager.tomcat8.RedisSessionManager\"</span></div><div class=\"line\"></div><div class=\"line\">maxInactiveInterval=<span class=\"string\">\"60\"</span></div><div class=\"line\"></div><div class=\"line\">sentinelMaster=<span class=\"string\">\"mymaster\"</span></div><div class=\"line\"></div><div class=\"line\">sentinels=<span class=\"string\">\"127.0.0.1:26379,127.0.0.1:26380,127.0.0.1:26381,127.0.0.1:26382\"</span> /&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>案例：<br>如果要监控两个redis实例，可以进行如下配置Redis安装目录下sentinel.conf文件：<br>常规配置：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">port 26379</div><div class=\"line\">daemonize yes</div><div class=\"line\">logfile <span class=\"string\">\"/var/log/redis/sentinel.log\"</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#master 7000</span></div><div class=\"line\">sentinel monitor master1 127.0.0.1 7000 2                <span class=\"comment\">#配置master名、ip、port、需要多少个sentinel才能判断[客观下线]（2）</span></div><div class=\"line\">sentinel down-after-milliseconds master-7000 30000      <span class=\"comment\">#配置sentinel向master发出ping，最大响应时间、超过则认为主观下线</span></div><div class=\"line\">sentinel parallel-syncs master-7000 1                   <span class=\"comment\">#配置在进行故障转移时，运行多少个slave进行数据备份同步(越少速度越快)</span></div><div class=\"line\">sentinel failover-timeout master-7000 180000            <span class=\"comment\">#配置当出现failover时下一个sentinel与上一个sentinel对[同一个master监测的时间间隔](最后设置为客观下线)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#master 7001</span></div><div class=\"line\">sentinel monitor master2 127.0.0.1 7001 1</div><div class=\"line\">sentinel down-after-milliseconds master-7001 30000</div><div class=\"line\">sentinel parallel-syncs master-7001 1</div><div class=\"line\">sentinel failover-timeout master-7001 180000</div></pre></td></tr></table></figure></p>\n<p>特殊配置：<br><code>min-slaves-to-write 1</code><br><code>min-slaves-max-lag 10</code><br>通过上面的配置，当一个redis是master时，如果它不能向至少一个slave写数据(上面的min-slaves-to-write指定了slave的数量)，它将会拒绝接受客户端的写请求。由于复制是异步的，master无法向slave写数据意味着slave要么断开连接了，要么不在指定时间内向master发送同步数据的请求了(上面的min-slaves-max-lag指定了这个时间)。</p>\n<h3 id=\"配置Redis能随系统启动\"><a href=\"#配置Redis能随系统启动\" class=\"headerlink\" title=\"配置Redis能随系统启动:\"></a>配置Redis能随系统启动:</h3><p>./utils/install_server.sh</p>\n<h3 id=\"Redis服务查看、开启、关闭\"><a href=\"#Redis服务查看、开启、关闭\" class=\"headerlink\" title=\"Redis服务查看、开启、关闭:\"></a>Redis服务查看、开启、关闭:</h3><p>a.通过ps -ef|grep redis命令查看Redis进程<br>b.开启Redis服务操作通过/etc/init.d/redis_6379 start命令，也可通过（service redis_6379 start）<br>c.关闭Redis服务操作通过/etc/init.d/redis_6379 stop命令，也可通过（service redis_6379 stop）</p>\n<h1 id=\"Postgres-XL\"><a href=\"#Postgres-XL\" class=\"headerlink\" title=\"Postgres-XL\"></a>Postgres-XL</h1><h2 id=\"centos7安装：\"><a href=\"#centos7安装：\" class=\"headerlink\" title=\"centos7安装：\"></a>centos7安装：</h2><h3 id=\"在所有主机上安装Postgres-XL\"><a href=\"#在所有主机上安装Postgres-XL\" class=\"headerlink\" title=\"在所有主机上安装Postgres-XL\"></a>在所有主机上安装Postgres-XL</h3><h4 id=\"在每台机器的-etc-hosts中加入以下内容：\"><a href=\"#在每台机器的-etc-hosts中加入以下内容：\" class=\"headerlink\" title=\"在每台机器的 /etc/hosts中加入以下内容：\"></a>在每台机器的 /etc/hosts中加入以下内容：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">192.168.0.50 gtm</div><div class=\"line\">192.168.0.51 gtm-bc</div><div class=\"line\">192.168.0.120 datanode1</div><div class=\"line\">192.168.0.121 datanode2</div></pre></td></tr></table></figure>\n<h4 id=\"关闭防火墙：\"><a href=\"#关闭防火墙：\" class=\"headerlink\" title=\"关闭防火墙：\"></a>关闭防火墙：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">systemctl stop firewalld</div><div class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld</div></pre></td></tr></table></figure>\n<h4 id=\"selinux设置\"><a href=\"#selinux设置\" class=\"headerlink\" title=\"selinux设置\"></a>selinux设置</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">setenforce 0</div><div class=\"line\">sed -i <span class=\"string\">\"s/SELINUX=enforcing/SELINUX=disabled/\"</span> /etc/selinux/config</div></pre></td></tr></table></figure>\n<h4 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包:\"></a>安装依赖包:</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum -y install epel-release</div><div class=\"line\">yum -y install lbzip2 gcc readline-devel zlib-devel flex</div></pre></td></tr></table></figure>\n<h4 id=\"新建用户\"><a href=\"#新建用户\" class=\"headerlink\" title=\"新建用户\"></a>新建用户</h4><blockquote>\n<p>每个节点都建立用户postgres，并且建立.ssh目录，并配置相应的root权限：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"comment\"># useradd postgres</span></div><div class=\"line\">[root@localhost ~]<span class=\"comment\"># passwd postgres</span></div><div class=\"line\">[root@localhost ~]<span class=\"comment\"># su - postgres</span></div><div class=\"line\">[root@localhost ~]<span class=\"comment\"># mkdir ~/.ssh</span></div><div class=\"line\">[root@localhost ~]<span class=\"comment\"># chmod 700 ~/.ssh</span></div></pre></td></tr></table></figure>\n<h4 id=\"ssh免密码登录-只在gtm下做\"><a href=\"#ssh免密码登录-只在gtm下做\" class=\"headerlink\" title=\"ssh免密码登录(只在gtm下做)\"></a>ssh免密码登录(<code>只在gtm下做</code>)</h4><blockquote>\n<p>仅仅在<code>gtm</code>节点配置如下操作：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]<span class=\"comment\"># su - postgres</span></div><div class=\"line\">[postgres@localhost ~]<span class=\"comment\"># ssh-keygen -t rsa</span></div><div class=\"line\">[postgres@localhost ~]<span class=\"comment\"># cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span></div><div class=\"line\">[postgres@localhost ~]<span class=\"comment\"># chmod 600 ~/.ssh/authorized_keys</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>对所有提示都不要输入，直接enter下一步。</p>\n<p>将刚生成的认证文件拷贝到datanode1到datanode2中，使得gtm节点可以免密码登录datanode1~datanode2的任意一个节点：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@localhost ~]<span class=\"comment\"># scp ~/.ssh/authorized_keys postgres@datanode1:~/.ssh/</span></div><div class=\"line\">[postgres@localhost ~]<span class=\"comment\"># scp ~/.ssh/authorized_keys postgres@datanode2:~/.ssh/</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p><mark>这里会提示如下内容 输入yes</mark>后会提示让你输入远程用户密码</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">The authenticity of host <span class=\"string\">'datanode1 (192.168.0.120)'</span> can<span class=\"string\">'t be established.</div><div class=\"line\">ECDSA key fingerprint is f9:ad:48:ab:a8:b6:81:5b:e0:6f:75:e5:xx:xx:xx:xx.</div><div class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</span></div></pre></td></tr></table></figure>\n<h4 id=\"Postgres-XL安装-每台服务器都要操作\"><a href=\"#Postgres-XL安装-每台服务器都要操作\" class=\"headerlink\" title=\"Postgres-XL安装(每台服务器都要操作)\"></a>Postgres-XL安装(每台服务器都要操作)</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/src</div><div class=\"line\">tar -zxvf  postgres-xl</div><div class=\"line\"><span class=\"built_in\">cd</span> postgres-xl</div><div class=\"line\">./configure</div><div class=\"line\">make &amp;&amp; make install</div><div class=\"line\"><span class=\"built_in\">cd</span> contrib/</div><div class=\"line\">make &amp;&amp; make install</div></pre></td></tr></table></figure>\n<blockquote>\n<p>cortrib中有很多postgres很牛的工具，一般要装上。如ltree,uuid,postgres_fdw等等。</p>\n</blockquote>\n<h4 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h4><p>进入postgres用户，修改其环境变量<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">su - postgres</div><div class=\"line\">vi .bashrc</div></pre></td></tr></table></figure></p>\n<p>在打开的文件末尾，新增如下变量配置：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">export</span> PGHOME=<span class=\"regexp\">/usr/</span>local/pgsql</div><div class=\"line\"><span class=\"keyword\">export</span> PGUSER=postgres</div><div class=\"line\"><span class=\"keyword\">export</span> LD_LIBRARY_PATH=$PGHOME/lib</div><div class=\"line\"><span class=\"keyword\">export</span> PATH=$PGHOME/bin:$PATH</div></pre></td></tr></table></figure>\n<p> 按住esc，然后输入:wq!保存退出</p>\n<p> 输入以下命令对更改重启生效:<br> <code>source .bashrc</code></p>\n<p> 检查配置是否已修改<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@localhost ~]$ <span class=\"built_in\">echo</span> <span class=\"variable\">$PGHOME</span></div><div class=\"line\">/usr/<span class=\"built_in\">local</span>/pgsql</div></pre></td></tr></table></figure></p>\n<p> 检查ssh免密访问是否配置成功<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@gtm ~]<span class=\"comment\"># ssh datanode1</span></div><div class=\"line\">[root@datanode1 ~]<span class=\"comment\"># exit</span></div><div class=\"line\"><span class=\"built_in\">logout</span></div><div class=\"line\">Connection to datanode1 closed.</div><div class=\"line\"></div><div class=\"line\">[root@gtm ~]<span class=\"comment\"># ssh datanode2</span></div><div class=\"line\">[root@datanode2 ~]<span class=\"comment\"># exit</span></div><div class=\"line\"><span class=\"built_in\">logout</span></div><div class=\"line\">Connection to datanode2 closed.</div></pre></td></tr></table></figure></p>\n<h4 id=\"修改文件夹所有者\"><a href=\"#修改文件夹所有者\" class=\"headerlink\" title=\"修改文件夹所有者\"></a>修改文件夹所有者</h4><p>将/home/postgres下所有文件的所有者变更为postgres用户<br><code>[root@gtm ~]# chown -R postgres /home/postgres</code></p>\n<h4 id=\"生成pgxc-ctl配置文件-只在gtm下做\"><a href=\"#生成pgxc-ctl配置文件-只在gtm下做\" class=\"headerlink\" title=\"生成pgxc_ctl配置文件(只在gtm下做)\"></a>生成pgxc_ctl配置文件(<code>只在gtm下做</code>)</h4><p>在/usr/local/src/postgres-xl/contrib/pgxc_ctl目录下<br>运行命令</p>\n<p><code>./pgxc_ctl</code>后进入操作界面后输入prepare之后使用Crtl+c退出PGXC操作界面</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@localhost ~]$ pgxc_ctl</div><div class=\"line\">/bin/bash</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">ERROR: File <span class=\"string\">\"/home/postgres/pgxc_ctl/pgxc_ctl.conf\"</span> not found or not a regular file. No such file or directory</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">Reading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf</div><div class=\"line\">Finished reading configuration.</div><div class=\"line\">   ******** PGXC_CTL START ***************</div><div class=\"line\"></div><div class=\"line\">Current directory: /home/postgres/pgxc_ctl</div><div class=\"line\">PGXC prepare</div><div class=\"line\">PGXC ^C</div></pre></td></tr></table></figure>\n<h4 id=\"编辑pgxc-ctl-conf文件\"><a href=\"#编辑pgxc-ctl-conf文件\" class=\"headerlink\" title=\"编辑pgxc_ctl.conf文件\"></a>编辑pgxc_ctl.conf文件</h4><p><code>[postgres@localhost ~]$ vim /home/postgres/pgxc_ctl/pgxc_ctl.conf</code></p>\n<h4 id=\"配置内容如下：\"><a href=\"#配置内容如下：\" class=\"headerlink\" title=\"配置内容如下：\"></a>配置内容如下：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/usr/bin/env bash</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># Postgres-XC Configuration file for pgxc_ctl utility.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># Configuration file can be specified as -c option from pgxc_ctl command.   Default is</span></div><div class=\"line\"><span class=\"comment\"># $PGXC_CTL_HOME/pgxc_ctl.org.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># This is bash script so you can make any addition for your convenience to configure</span></div><div class=\"line\"><span class=\"comment\"># your Postgres-XC cluster.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># Please understand that pgxc_ctl provides only a subset of configuration which pgxc_ctl</span></div><div class=\"line\"><span class=\"comment\"># provide.  Here's several several assumptions/restrictions pgxc_ctl depends on.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 1) All the resources of pgxc nodes has to be owned by the same user.   Same user means</span></div><div class=\"line\"><span class=\"comment\">#    user with the same user name.  User ID may be different from server to server.</span></div><div class=\"line\"><span class=\"comment\">#    This must be specified as a variable $pgxcOwner.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 2) All the servers must be reacheable via ssh without password.   It is highly recommended</span></div><div class=\"line\"><span class=\"comment\">#    to setup key-based authentication among all the servers.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 3) All the databases in coordinator/datanode has at least one same superuser.  Pgxc_ctl</span></div><div class=\"line\"><span class=\"comment\">#    uses this user to connect to coordinators and datanodes.   Again, no password should</span></div><div class=\"line\"><span class=\"comment\">#    be used to connect.  You have many options to do this, pg_hba.conf, pg_ident.conf and</span></div><div class=\"line\"><span class=\"comment\">#    others.  Pgxc_ctl provides a way to configure pg_hba.conf but not pg_ident.conf.   This</span></div><div class=\"line\"><span class=\"comment\">#    will be implemented in the later releases.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 4) Gtm master and slave can have different port to listen, while coordinator and datanode</span></div><div class=\"line\"><span class=\"comment\">#    slave should be assigned the same port number as master.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 5) Port nuber of a coordinator slave must be the same as its master.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 6) Master and slave are connected using synchronous replication.  Asynchronous replication</span></div><div class=\"line\"><span class=\"comment\">#    have slight (almost none) chance to bring total cluster into inconsistent state.</span></div><div class=\"line\"><span class=\"comment\">#    This chance is very low and may be negligible.  Support of asynchronous replication</span></div><div class=\"line\"><span class=\"comment\">#    may be supported in the later release.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 7) Each coordinator and datanode can have only one slave each.  Cascaded replication and</span></div><div class=\"line\"><span class=\"comment\">#    multiple slave are not supported in the current pgxc_ctl.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 8) Killing nodes may end up with IPC resource leak, such as semafor and shared memory.</span></div><div class=\"line\"><span class=\"comment\">#    Only listening port (socket) will be cleaned with clean command.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># 9) Backup and restore are not supported in pgxc_ctl at present.   This is a big task and</span></div><div class=\"line\"><span class=\"comment\">#    may need considerable resource.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\">#========================================================================================</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># pgxcInstallDir variable is needed if you invoke \"deploy\" command from pgxc_ctl utility.</span></div><div class=\"line\"><span class=\"comment\"># If don't you don't need this variable.</span></div><div class=\"line\">pgxcInstallDir=<span class=\"variable\">$HOME</span></div><div class=\"line\">pgxlDATA=<span class=\"variable\">$HOME</span>/data</div><div class=\"line\"><span class=\"comment\">#---- OVERALL -----------------------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">pgxcOwner=postgres\t\t\t<span class=\"comment\"># owner of the Postgres-XC databaseo cluster.  Here, we use this</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># both as linus user and database user.  This must be</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># the super user of each coordinator and datanode.</span></div><div class=\"line\">pgxcUser=<span class=\"variable\">$pgxcOwner</span>\t\t<span class=\"comment\"># OS user of Postgres-XC owner</span></div><div class=\"line\"></div><div class=\"line\">tmpDir=/tmp\t\t\t\t\t<span class=\"comment\"># temporary dir used in XC servers</span></div><div class=\"line\"><span class=\"built_in\">local</span>TmpDir=<span class=\"variable\">$tmpDir</span>\t\t\t<span class=\"comment\"># temporary dir used here locally</span></div><div class=\"line\"></div><div class=\"line\">configBackup=n\t\t\t\t\t<span class=\"comment\"># If you want config file backup, specify y to this value.</span></div><div class=\"line\">configBackupHost=pgxc-linker\t<span class=\"comment\"># host to backup config file</span></div><div class=\"line\">configBackupDir=<span class=\"variable\">$HOME</span>/pgxc\t\t<span class=\"comment\"># Backup directory</span></div><div class=\"line\">configBackupFile=pgxc_ctl.bak\t<span class=\"comment\"># Backup file name --&gt; Need to synchronize when original changed.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- GTM ------------------------------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># GTM is mandatory.  You must have at least (and only) one GTM master in your Postgres-XC cluster.</span></div><div class=\"line\"><span class=\"comment\"># If GTM crashes and you need to reconfigure it, you can do it by pgxc_update_gtm command to update</span></div><div class=\"line\"><span class=\"comment\"># GTM master with others.   Of course, we provide pgxc_remove_gtm command to remove it.  This command</span></div><div class=\"line\"><span class=\"comment\"># will not stop the current GTM.  It is up to the operator.</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- GTM Master -----------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Overall ----</span></div><div class=\"line\">gtmName=gtm</div><div class=\"line\">gtmMasterServer=gtm</div><div class=\"line\">gtmMasterPort=6666</div><div class=\"line\">gtmMasterDir=<span class=\"variable\">$pgxlDATA</span>/nodes/gtm</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Configuration ---</span></div><div class=\"line\">gtmExtraConfig=none\t\t\t<span class=\"comment\"># Will be added gtm.conf for both Master and Slave (done at initilization only)</span></div><div class=\"line\">gtmMasterSpecificExtraConfig=none\t<span class=\"comment\"># Will be added to Master's gtm.conf (done at initialization only)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- GTM Slave -----------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Because GTM is a key component to maintain database consistency, you may want to configure GTM slave</span></div><div class=\"line\"><span class=\"comment\"># for backup.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Overall ------</span></div><div class=\"line\">gtmSlave=n\t\t\t\t\t<span class=\"comment\"># Specify y if you configure GTM Slave.   Otherwise, GTM slave will not be configured and</span></div><div class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\"># all the following variables will be reset.</span></div><div class=\"line\">gtmSlaveName=gtmSlave</div><div class=\"line\">gtmSlaveServer=gtm-bc\t\t<span class=\"comment\"># value none means GTM slave is not available.  Give none if you don't configure GTM Slave.</span></div><div class=\"line\">gtmSlavePort=20001\t\t\t<span class=\"comment\"># Not used if you don't configure GTM slave.</span></div><div class=\"line\">gtmSlaveDir=<span class=\"variable\">$pgxlDATA</span>/nodes/gtmSlave\t<span class=\"comment\"># Not used if you don't configure GTM slave.</span></div><div class=\"line\"><span class=\"comment\"># Please note that when you have GTM failover, then there will be no slave available until you configure the slave</span></div><div class=\"line\"><span class=\"comment\"># again. (pgxc_add_gtm_slave function will handle it)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Configuration ----</span></div><div class=\"line\">gtmSlaveSpecificExtraConfig=none <span class=\"comment\"># Will be added to Slave's gtm.conf (done at initialization only)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- GTM Proxy -------------------------------------------------------------------------------------------------------</span></div><div class=\"line\"><span class=\"comment\"># GTM proxy will be selected based upon which server each component runs on.</span></div><div class=\"line\"><span class=\"comment\"># When fails over to the slave, the slave inherits its master's gtm proxy.  It should be</span></div><div class=\"line\"><span class=\"comment\"># reconfigured based upon the new location.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># To do so, slave should be restarted.   So pg_ctl promote -&gt; (edit postgresql.conf and recovery.conf) -&gt; pg_ctl restart</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># You don't have to configure GTM Proxy if you dont' configure GTM slave or you are happy if every component connects</span></div><div class=\"line\"><span class=\"comment\"># to GTM Master directly.  If you configure GTL slave, you must configure GTM proxy too.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Shortcuts ------</span></div><div class=\"line\">gtmProxyDir=<span class=\"variable\">$pgxlDATA</span>/nodes/gtm_pxy</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Overall -------</span></div><div class=\"line\">gtmProxy=n\t\t\t\t<span class=\"comment\"># Specify y if you conifugre at least one GTM proxy.   You may not configure gtm proxies</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># only when you dont' configure GTM slaves.</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># If you specify this value not to y, the following parameters will be set to default empty values.</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># If we find there're no valid Proxy server names (means, every servers are specified</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># as none), then gtmProxy value will be set to \"n\" and all the entries will be set to</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># empty values.</span></div><div class=\"line\">gtmProxyNames=(gtm_pxy1 gtm_pxy2)\t<span class=\"comment\"># No used if it is not configured</span></div><div class=\"line\">gtmProxyServers=(datanode1 datanode2)\t\t\t<span class=\"comment\"># Specify none if you dont' configure it.</span></div><div class=\"line\">gtmProxyPorts=(6666 6666)\t\t\t\t<span class=\"comment\"># Not used if it is not configured.</span></div><div class=\"line\">gtmProxyDirs=(<span class=\"variable\">$gtmProxyDir</span> <span class=\"variable\">$gtmProxyDir</span>)\t<span class=\"comment\"># Not used if it is not configured.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Configuration ----</span></div><div class=\"line\">gtmPxyExtraConfig=none\t\t<span class=\"comment\"># Extra configuration parameter for gtm_proxy.  Coordinator section has an example.</span></div><div class=\"line\">gtmPxySpecificExtraConfig=(none none none none)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Coordinators ----------------------------------------------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- shortcuts ----------</span></div><div class=\"line\">coordMasterDir=<span class=\"variable\">$pgxlDATA</span>/nodes/coord</div><div class=\"line\">coordSlaveDir=<span class=\"variable\">$HOME</span>/pgxc/nodes/coord_slave</div><div class=\"line\">coordArchLogDir=<span class=\"variable\">$HOME</span>/pgxc/nodes/coord_archlog</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Overall ------------</span></div><div class=\"line\">coordNames=(coord1 coord2)\t\t<span class=\"comment\"># Master and slave use the same name</span></div><div class=\"line\">coordPorts=(5432 5432)\t\t\t<span class=\"comment\"># Master ports</span></div><div class=\"line\">poolerPorts=(6667 6667)\t\t\t<span class=\"comment\"># Master pooler ports</span></div><div class=\"line\">coordPgHbaEntries=(0.0.0.0/0)\t\t\t\t<span class=\"comment\"># Assumes that all the coordinator (master/slave) accepts</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># the same connection</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># This entry allows only $pgxcOwner to connect.</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># If you'd like to setup another connection, you should</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># supply these entries through files specified below.</span></div><div class=\"line\"><span class=\"comment\"># Note: The above parameter is extracted as \"host all all 0.0.0.0/0 trust\".   If you don't want</span></div><div class=\"line\"><span class=\"comment\"># such setups, specify the value () to this variable and suplly what you want using coordExtraPgHba</span></div><div class=\"line\"><span class=\"comment\"># and/or coordSpecificExtraPgHba variables.</span></div><div class=\"line\"><span class=\"comment\">#coordPgHbaEntries=(::1/128)\t# Same as above but for IPv6 addresses</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Master -------------</span></div><div class=\"line\">coordMasterServers=(datanode1 datanode2)\t\t<span class=\"comment\"># none means this master is not available</span></div><div class=\"line\">coordMasterDirs=(<span class=\"variable\">$coordMasterDir</span> <span class=\"variable\">$coordMasterDir</span>)</div><div class=\"line\">coordMaxWALsernder=0\t<span class=\"comment\"># max_wal_senders: needed to configure slave. If zero value is specified,</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># it is expected to supply this parameter explicitly by external files</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># specified in the following.\tIf you don't configure slaves, leave this value to zero.</span></div><div class=\"line\">coordMaxWALSenders=(<span class=\"variable\">$coordMaxWALsernder</span> <span class=\"variable\">$coordMaxWALsernder</span>)</div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># max_wal_senders configuration for each coordinator.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Slave -------------</span></div><div class=\"line\">coordSlave=n\t\t\t<span class=\"comment\"># Specify y if you configure at least one coordiantor slave.  Otherwise, the following</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># configuration parameters will be set to empty values.</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># If no effective server names are found (that is, every servers are specified as none),</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># then coordSlave value will be set to n and all the following values will be set to</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># empty values.</span></div><div class=\"line\">coordSlaveSync=y\t\t<span class=\"comment\"># Specify to connect with synchronized mode.</span></div><div class=\"line\">coordSlaveServers=(node07 node08 node09 node06)\t\t\t<span class=\"comment\"># none means this slave is not available</span></div><div class=\"line\">coordSlavePorts=(20004 20005 20004 20005)\t\t\t<span class=\"comment\"># Master ports</span></div><div class=\"line\">coordSlavePoolerPorts=(20010 20011 20010 20011)\t\t\t<span class=\"comment\"># Master pooler ports</span></div><div class=\"line\">coordSlaveDirs=(<span class=\"variable\">$coordSlaveDir</span> <span class=\"variable\">$coordSlaveDir</span> <span class=\"variable\">$coordSlaveDir</span> <span class=\"variable\">$coordSlaveDir</span>)</div><div class=\"line\">coordArchLogDirs=(<span class=\"variable\">$coordArchLogDir</span> <span class=\"variable\">$coordArchLogDir</span> <span class=\"variable\">$coordArchLogDir</span> <span class=\"variable\">$coordArchLogDir</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Configuration files---</span></div><div class=\"line\"><span class=\"comment\"># Need these when you'd like setup specific non-default configuration</span></div><div class=\"line\"><span class=\"comment\"># These files will go to corresponding files for the master.</span></div><div class=\"line\"><span class=\"comment\"># You may supply your bash script to setup extra config lines and extra pg_hba.conf entries</span></div><div class=\"line\"><span class=\"comment\"># Or you may supply these files manually.</span></div><div class=\"line\">coordExtraConfig=coordExtraConfig\t<span class=\"comment\"># Extra configuration file for coordinators.</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># This file will be added to all the coordinators'</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># postgresql.conf</span></div><div class=\"line\"><span class=\"comment\"># Pleae note that the following sets up minimum parameters which you may want to change.</span></div><div class=\"line\"><span class=\"comment\"># You can put your postgresql.conf lines here.</span></div><div class=\"line\">cat &gt; <span class=\"variable\">$coordExtraConfig</span> &lt;&lt;EOF</div><div class=\"line\"><span class=\"comment\">#================================================</span></div><div class=\"line\"><span class=\"comment\"># Added to all the coordinator postgresql.conf</span></div><div class=\"line\"><span class=\"comment\"># Original: $coordExtraConfig</span></div><div class=\"line\">log_destination = <span class=\"string\">'stderr'</span></div><div class=\"line\">logging_collector = on</div><div class=\"line\">log_directory = <span class=\"string\">'pg_log'</span></div><div class=\"line\">listen_addresses = <span class=\"string\">'*'</span></div><div class=\"line\">max_connections = 100</div><div class=\"line\">EOF</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Additional Configuration file for specific coordinator master.</span></div><div class=\"line\"><span class=\"comment\"># You can define each setting by similar means as above.</span></div><div class=\"line\">coordSpecificExtraConfig=(none none none none)</div><div class=\"line\">coordExtraPgHba=none\t<span class=\"comment\"># Extra entry for pg_hba.conf.  This file will be added to all the coordinators' pg_hba.conf</span></div><div class=\"line\">coordSpecificExtraPgHba=(none none none none)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#----- Additional Slaves -----</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\"># Please note that this section is just a suggestion how we extend the configuration for</span></div><div class=\"line\"><span class=\"comment\"># multiple and cascaded replication.   They're not used in the current version.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\">coordAdditionalSlaves=n\t\t<span class=\"comment\"># Additional slave can be specified as follows: where you</span></div><div class=\"line\">coordAdditionalSlaveSet=(cad1)\t\t<span class=\"comment\"># Each specifies set of slaves.   This case, two set of slaves are</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># configured</span></div><div class=\"line\">cad1_Sync=n\t\t  \t\t<span class=\"comment\"># All the slaves at \"cad1\" are connected with asynchronous mode.</span></div><div class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\"># If not, specify \"y\"</span></div><div class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\"># The following lines specifies detailed configuration for each</span></div><div class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\"># slave tag, cad1.  You can define cad2 similarly.</span></div><div class=\"line\">cad1_Servers=(node08 node09 node06 node07)\t<span class=\"comment\"># Hosts</span></div><div class=\"line\">cad1_dir=<span class=\"variable\">$HOME</span>/pgxc/nodes/coord_slave_cad1</div><div class=\"line\">cad1_Dirs=(<span class=\"variable\">$cad1_dir</span> <span class=\"variable\">$cad1_dir</span> <span class=\"variable\">$cad1_dir</span> <span class=\"variable\">$cad1_dir</span>)</div><div class=\"line\">cad1_ArchLogDir=<span class=\"variable\">$HOME</span>/pgxc/nodes/coord_archlog_cad1</div><div class=\"line\">cad1_ArchLogDirs=(<span class=\"variable\">$cad1_ArchLogDir</span> <span class=\"variable\">$cad1_ArchLogDir</span> <span class=\"variable\">$cad1_ArchLogDir</span> <span class=\"variable\">$cad1_ArchLogDir</span>)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Datanodes -------------------------------------------------------------------------------------------------------</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Shortcuts --------------</span></div><div class=\"line\">datanodeMasterDir=<span class=\"variable\">$pgxlDATA</span>/nodes/dn_master</div><div class=\"line\">datanodeSlaveDir=<span class=\"variable\">$HOME</span>/pgxc/nodes/dn_slave</div><div class=\"line\">datanodeArchLogDir=<span class=\"variable\">$HOME</span>/pgxc/nodes/datanode_archlog</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Overall ---------------</span></div><div class=\"line\"><span class=\"comment\">#primaryDatanode=datanode1\t\t\t\t# Primary Node.</span></div><div class=\"line\"><span class=\"comment\"># At present, xc has a priblem to issue ALTER NODE against the primay node.  Until it is fixed, the test will be done</span></div><div class=\"line\"><span class=\"comment\"># without this feature.</span></div><div class=\"line\">primaryDatanode=node1\t\t\t\t<span class=\"comment\"># Primary Node.</span></div><div class=\"line\">datanodeNames=(node1 node2)</div><div class=\"line\">datanodePorts=(5433 5433)\t<span class=\"comment\"># Master ports</span></div><div class=\"line\">datanodePoolerPorts=(6668 6668)\t<span class=\"comment\"># Master pooler ports</span></div><div class=\"line\">datanodePgHbaEntries=(0.0.0.0/0)\t<span class=\"comment\"># Assumes that all the coordinator (master/slave) accepts</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># the same connection</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># This list sets up pg_hba.conf for $pgxcOwner user.</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># If you'd like to setup other entries, supply them</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># through extra configuration files specified below.</span></div><div class=\"line\"><span class=\"comment\"># Note: The above parameter is extracted as \"host all all 0.0.0.0/0 trust\".   If you don't want</span></div><div class=\"line\"><span class=\"comment\"># such setups, specify the value () to this variable and suplly what you want using datanodeExtraPgHba</span></div><div class=\"line\"><span class=\"comment\"># and/or datanodeSpecificExtraPgHba variables.</span></div><div class=\"line\"><span class=\"comment\">#datanodePgHbaEntries=(::1/128)\t# Same as above but for IPv6 addresses</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Master ----------------</span></div><div class=\"line\">datanodeMasterServers=(datanode1 datanode2)\t<span class=\"comment\"># none means this master is not available.</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># This means that there should be the master but is down.</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># The cluster is not operational until the master is</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># recovered and ready to run.</span></div><div class=\"line\">datanodeMasterDirs=(<span class=\"variable\">$datanodeMasterDir</span> <span class=\"variable\">$datanodeMasterDir</span>)</div><div class=\"line\">datanodeMaxWalSender=4\t\t\t\t\t\t\t\t<span class=\"comment\"># max_wal_senders: needed to configure slave. If zero value is</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># specified, it is expected this parameter is explicitly supplied</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># by external configuration files.</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># If you don't configure slaves, leave this value zero.</span></div><div class=\"line\">datanodeMaxWALSenders=(<span class=\"variable\">$datanodeMaxWalSender</span> <span class=\"variable\">$datanodeMaxWalSender</span>)</div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># max_wal_senders configuration for each datanode</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- Slave -----------------</span></div><div class=\"line\">datanodeSlave=n\t\t\t<span class=\"comment\"># Specify y if you configure at least one coordiantor slave.  Otherwise, the following</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># configuration parameters will be set to empty values.</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># If no effective server names are found (that is, every servers are specified as none),</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># then datanodeSlave value will be set to n and all the following values will be set to</span></div><div class=\"line\">\t\t\t\t\t\t<span class=\"comment\"># empty values.</span></div><div class=\"line\">datanodeSlaveServers=(datanode2 datanode1)\t<span class=\"comment\"># value none means this slave is not available</span></div><div class=\"line\">datanodeSlavePorts=(15433 15433)\t<span class=\"comment\"># value none means this slave is not available</span></div><div class=\"line\">datanodeSlavePoolerPorts=(20012 20012)\t<span class=\"comment\"># value none means this slave is not available</span></div><div class=\"line\">datanodeSlaveSync=y\t\t<span class=\"comment\"># If datanode slave is connected in synchronized mode</span></div><div class=\"line\">datanodeSlaveDirs=(<span class=\"variable\">$datanodeSlaveDir</span> <span class=\"variable\">$datanodeSlaveDir</span>)</div><div class=\"line\">datanodeArchLogDirs=( <span class=\"variable\">$datanodeArchLogDir</span> <span class=\"variable\">$datanodeArchLogDir</span> )</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># ---- Configuration files ---</span></div><div class=\"line\"><span class=\"comment\"># You may supply your bash script to setup extra config lines and extra pg_hba.conf entries here.</span></div><div class=\"line\"><span class=\"comment\"># These files will go to corresponding files for the master.</span></div><div class=\"line\"><span class=\"comment\"># Or you may supply these files manually.</span></div><div class=\"line\">datanodeExtraConfig=none\t<span class=\"comment\"># Extra configuration file for datanodes.  This file will be added to all the</span></div><div class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\"># datanodes' postgresql.conf</span></div><div class=\"line\">datanodeSpecificExtraConfig=(none none none none)</div><div class=\"line\">datanodeExtraPgHba=none\t\t<span class=\"comment\"># Extra entry for pg_hba.conf.  This file will be added to all the datanodes' postgresql.conf</span></div><div class=\"line\">datanodeSpecificExtraPgHba=(none none none none)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#----- Additional Slaves -----</span></div><div class=\"line\">datanodeAdditionalSlaves=n\t<span class=\"comment\"># Additional slave can be specified as follows: where you</span></div><div class=\"line\"><span class=\"comment\"># datanodeAdditionalSlaveSet=(dad1 dad2)\t\t# Each specifies set of slaves.   This case, two set of slaves are</span></div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\"># configured</span></div><div class=\"line\"><span class=\"comment\"># dad1_Sync=n\t\t  \t\t# All the slaves at \"cad1\" are connected with asynchronous mode.</span></div><div class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\"># If not, specify \"y\"</span></div><div class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\"># The following lines specifies detailed configuration for each</span></div><div class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\"># slave tag, cad1.  You can define cad2 similarly.</span></div><div class=\"line\"><span class=\"comment\"># dad1_Servers=(node08 node09 node06 node07)\t# Hosts</span></div><div class=\"line\"><span class=\"comment\"># dad1_dir=$HOME/pgxc/nodes/coord_slave_cad1</span></div><div class=\"line\"><span class=\"comment\"># dad1_Dirs=($cad1_dir $cad1_dir $cad1_dir $cad1_dir)</span></div><div class=\"line\"><span class=\"comment\"># dad1_ArchLogDir=$HOME/pgxc/nodes/coord_archlog_cad1</span></div><div class=\"line\"><span class=\"comment\"># dad1_ArchLogDirs=($cad1_ArchLogDir $cad1_ArchLogDir $cad1_ArchLogDir $cad1_ArchLogDir)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#---- WAL archives -------------------------------------------------------------------------------------------------</span></div><div class=\"line\">walArchive=n\t<span class=\"comment\"># If you'd like to configure WAL archive, edit this section.</span></div><div class=\"line\">\t\t\t\t<span class=\"comment\"># Pgxc_ctl assumes that if you configure WAL archive, you configure it</span></div><div class=\"line\">\t\t\t\t<span class=\"comment\"># for all the coordinators and datanodes.</span></div><div class=\"line\">\t\t\t\t<span class=\"comment\"># Default is \"no\".   Please specify \"y\" here to turn it on.</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\">#\t\tEnd of Configuration Section</span></div><div class=\"line\"><span class=\"comment\">#</span></div><div class=\"line\"><span class=\"comment\">#==========================================================================================================================</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#========================================================================================================================</span></div><div class=\"line\"><span class=\"comment\"># The following is for extension.  Just demonstrate how to write such extension.  There's no code</span></div><div class=\"line\"><span class=\"comment\"># which takes care of them so please ignore the following lines.  They are simply ignored by pgxc_ctl.</span></div><div class=\"line\"><span class=\"comment\"># No side effects.</span></div><div class=\"line\"><span class=\"comment\">#=============&lt;&lt; Beginning of future extension demonistration &gt;&gt; ========================================================</span></div><div class=\"line\"><span class=\"comment\"># You can setup more than one backup set for various purposes, such as disaster recovery.</span></div><div class=\"line\">walArchiveSet=(war1 war2)</div><div class=\"line\">war1_source=(master)\t<span class=\"comment\"># you can specify master, slave or ano other additional slaves as a source of WAL archive.</span></div><div class=\"line\">\t\t\t\t\t<span class=\"comment\"># Default is the master</span></div><div class=\"line\">wal1_source=(slave)</div><div class=\"line\">wal1_source=(additiona_coordinator_slave_set additional_datanode_slave_set)</div><div class=\"line\">war1_host=node10\t<span class=\"comment\"># All the nodes are backed up at the same host for a given archive set</span></div><div class=\"line\">war1_backupdir=<span class=\"variable\">$HOME</span>/pgxc/backup_war1</div><div class=\"line\">wal2_source=(master)</div><div class=\"line\">war2_host=node11</div><div class=\"line\">war2_backupdir=<span class=\"variable\">$HOME</span>/pgxc/backup_war2</div><div class=\"line\"><span class=\"comment\">#=============&lt;&lt; End of future extension demonistration &gt;&gt; ========================================================</span></div></pre></td></tr></table></figure>\n<h4 id=\"初始化集群\"><a href=\"#初始化集群\" class=\"headerlink\" title=\"初始化集群\"></a>初始化集群</h4><p><code>pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf init all</code>启动<br><code>pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf stop all</code>关闭</p>\n<p>初始化提示内容如下：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@localhost ~]$ pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf init all</div><div class=\"line\">/bin/bash</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">Reading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf</div><div class=\"line\">Finished reading configuration.</div><div class=\"line\">   ******** PGXC_CTL START ***************</div><div class=\"line\"></div><div class=\"line\">Current directory: /home/postgres/pgxc_ctl</div><div class=\"line\">Initialize GTM master</div><div class=\"line\">The authenticity of host <span class=\"string\">'gtm (192.168.230.143)'</span> can<span class=\"string\">'t be established.</div><div class=\"line\">ECDSA key fingerprint is cd:7e:a2:7d:9b:a9:13:10:96:e9:a4:1a:30:ab:ed:a6.</div><div class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</div><div class=\"line\">mkdir: cannot create directory ‘/home/postgres/pgxl/data’: Permission denied</div><div class=\"line\">The files belonging to this GTM system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">creating directory /home/postgres/pgxl/data/nodes/gtm ... initgtm: could not create directory \"/home/postgres/pgxl/data\": Permission denied</div><div class=\"line\">bash: /home/postgres/pgxl/data/nodes/gtm/gtm.conf: No such file or directory</div><div class=\"line\">gtm cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtm/gtm.conf\": No such file or directory</div><div class=\"line\">gtm_ctl: PID file \"/home/postgres/pgxl/data/nodes/gtm/gtm.pid\" does not exist</div><div class=\"line\">Is server running?</div><div class=\"line\">Done.</div><div class=\"line\">Start GTM master</div><div class=\"line\">server starting</div><div class=\"line\">gtm cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtm/gtm.conf\": No such file or directory</div><div class=\"line\">Initialize GTM slave</div><div class=\"line\">mkdir: cannot create directory ‘/home/postgres/pgxl/data’: Permission denied</div><div class=\"line\">The files belonging to this GTM system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">creating directory /home/postgres/pgxl/data/nodes/gtmSlave ... initgtm: could not create directory \"/home/postgres/pgxl/data\": Permission denied</div><div class=\"line\">bash: /home/postgres/pgxl/data/nodes/gtmSlave/gtm.conf: No such file or directory</div><div class=\"line\">Done.</div><div class=\"line\">Start GTM slaveserver starting</div><div class=\"line\">gtm cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtmSlave/gtm.conf\": No such file or directory</div><div class=\"line\">Done.</div><div class=\"line\">Initialize all the gtm proxies.</div><div class=\"line\">Initializing gtm proxy gtm_pxy1.</div><div class=\"line\">Initializing gtm proxy gtm_pxy2.</div><div class=\"line\">mkdir: cannot create directory ‘/home/postgres/pgxl/data’: Permission denied</div><div class=\"line\">The files belonging to this GTM system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">creating directory /home/postgres/pgxl/data/nodes/gtm_pxy ... initgtm: could not create directory \"/home/postgres/pgxl/data\": Permission denied</div><div class=\"line\">bash: /home/postgres/pgxl/data/nodes/gtm_pxy/gtm_proxy.conf: No such file or directory</div><div class=\"line\">mkdir: cannot create directory ‘/home/postgres/pgxl/data’: Permission denied</div><div class=\"line\">The files belonging to this GTM system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">creating directory /home/postgres/pgxl/data/nodes/gtm_pxy ... initgtm: could not create directory \"/home/postgres/pgxl/data\": Permission denied</div><div class=\"line\">bash: /home/postgres/pgxl/data/nodes/gtm_pxy/gtm_proxy.conf: No such file or directory</div><div class=\"line\">Done.</div><div class=\"line\">Starting all the gtm proxies.</div><div class=\"line\">Starting gtm proxy gtm_pxy1.</div><div class=\"line\">Starting gtm proxy gtm_pxy2.</div><div class=\"line\">server starting</div><div class=\"line\">gtm_proxy cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtm_pxy/gtm_proxy.conf\": No such file or directory</div><div class=\"line\">server starting</div><div class=\"line\">gtm_proxy cannot access the server configuration file \"/home/postgres/pgxl/data/nodes/gtm_pxy/gtm_proxy.conf\": No such file or directory</div><div class=\"line\">Done.</div><div class=\"line\">Initialize all the coordinator masters.</div><div class=\"line\">Initialize coordinator master coord1.</div><div class=\"line\">Initialize coordinator master coord2.</div><div class=\"line\"></div><div class=\"line\">[postgres@gtm ~]$ pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf init all</div><div class=\"line\">/bin/bash</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">Reading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf</div><div class=\"line\">Finished reading configuration.</div><div class=\"line\">   ******** PGXC_CTL START ***************</div><div class=\"line\"></div><div class=\"line\">Current directory: /home/postgres/pgxc_ctl</div><div class=\"line\">Initialize GTM master</div><div class=\"line\">ERROR: target directory (/home/postgres/pgxl/data/nodes/gtm) exists and not empty. Skip GTM initilialization</div><div class=\"line\">1:4221830976:2017-10-26 02:15:06.915 PDT -FATAL:  lock file \"gtm.pid\" already exists</div><div class=\"line\">2:4221830976:2017-10-26 02:15:06.915 PDT -HINT:  Is another GTM (PID 14702) running in data directory \"/home/postgres/pgxl/data/nodes/gtm\"?</div><div class=\"line\">LOCATION:  CreateLockFile, main.c:2099</div><div class=\"line\">waiting for server to shut down.... done</div><div class=\"line\">server stopped</div><div class=\"line\">Done.</div><div class=\"line\">Start GTM master</div><div class=\"line\">server starting</div><div class=\"line\">Initialize GTM slave</div><div class=\"line\">waiting for server to shut down.... done</div><div class=\"line\">server stopped</div><div class=\"line\">The files belonging to this GTM system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">fixing permissions on existing directory /home/postgres/pgxl/data/nodes/gtmSlave ... ok</div><div class=\"line\">creating configuration files ... ok</div><div class=\"line\">creating control file ... ok</div><div class=\"line\"></div><div class=\"line\">Success.</div><div class=\"line\">Done.</div><div class=\"line\">Start GTM slaveserver starting</div><div class=\"line\">Done.</div><div class=\"line\">Initialize all the gtm proxies.</div><div class=\"line\">Initializing gtm proxy gtm_pxy1.</div><div class=\"line\">Initializing gtm proxy gtm_pxy2.</div><div class=\"line\">The files belonging to this GTM system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">fixing permissions on existing directory /home/postgres/pgxl/data/nodes/gtm_pxy ... ok</div><div class=\"line\">creating configuration files ... ok</div><div class=\"line\"></div><div class=\"line\">Success.</div><div class=\"line\">The files belonging to this GTM system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">fixing permissions on existing directory /home/postgres/pgxl/data/nodes/gtm_pxy ... ok</div><div class=\"line\">creating configuration files ... ok</div><div class=\"line\"></div><div class=\"line\">Success.</div><div class=\"line\">Done.</div><div class=\"line\">Starting all the gtm proxies.</div><div class=\"line\">Starting gtm proxy gtm_pxy1.</div><div class=\"line\">Starting gtm proxy gtm_pxy2.</div><div class=\"line\">server starting</div><div class=\"line\">server starting</div><div class=\"line\">Done.</div><div class=\"line\">Initialize all the coordinator masters.</div><div class=\"line\">Initialize coordinator master coord1.</div><div class=\"line\">Initialize coordinator master coord2.</div><div class=\"line\">The files belonging to this database system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\">The database cluster will be initialized with locale \"en_US.UTF-8\".</div><div class=\"line\">The default database encoding has accordingly been set to \"UTF8\".</div><div class=\"line\">The default text search configuration will be set to \"english\".</div><div class=\"line\"></div><div class=\"line\">Data page checksums are disabled.</div><div class=\"line\"></div><div class=\"line\">fixing permissions on existing directory /home/postgres/pgxl/data/nodes/coord ... ok</div><div class=\"line\">creating subdirectories ... ok</div><div class=\"line\">selecting default max_connections ... 100</div><div class=\"line\">selecting default shared_buffers ... 128MB</div><div class=\"line\">selecting dynamic shared memory implementation ... posix</div><div class=\"line\">creating configuration files ... ok</div><div class=\"line\">running bootstrap script ... ok</div><div class=\"line\">performing post-bootstrap initialization ... creating cluster information ... ok</div><div class=\"line\">syncing data to disk ... ok</div><div class=\"line\">freezing database template0 ... ok</div><div class=\"line\">freezing database template1 ... ok</div><div class=\"line\">freezing database postgres ... ok</div><div class=\"line\"></div><div class=\"line\">WARNING: enabling \"trust\" authentication for local connections</div><div class=\"line\">You can change this by editing pg_hba.conf or using the option -A, or</div><div class=\"line\">--auth-local and --auth-host, the next time you run initdb.</div><div class=\"line\"></div><div class=\"line\">Success.</div><div class=\"line\">The files belonging to this database system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\">The database cluster will be initialized with locale \"en_US.UTF-8\".</div><div class=\"line\">The default database encoding has accordingly been set to \"UTF8\".</div><div class=\"line\">The default text search configuration will be set to \"english\".</div><div class=\"line\"></div><div class=\"line\">Data page checksums are disabled.</div><div class=\"line\"></div><div class=\"line\">fixing permissions on existing directory /home/postgres/pgxl/data/nodes/coord ... ok</div><div class=\"line\">creating subdirectories ... ok</div><div class=\"line\">selecting default max_connections ... 100</div><div class=\"line\">selecting default shared_buffers ... 128MB</div><div class=\"line\">selecting dynamic shared memory implementation ... posix</div><div class=\"line\">creating configuration files ... ok</div><div class=\"line\">running bootstrap script ... ok</div><div class=\"line\">performing post-bootstrap initialization ... creating cluster information ... ok</div><div class=\"line\">syncing data to disk ... ok</div><div class=\"line\">freezing database template0 ... ok</div><div class=\"line\">freezing database template1 ... ok</div><div class=\"line\">freezing database postgres ... ok</div><div class=\"line\"></div><div class=\"line\">WARNING: enabling \"trust\" authentication for local connections</div><div class=\"line\">You can change this by editing pg_hba.conf or using the option -A, or</div><div class=\"line\">--auth-local and --auth-host, the next time you run initdb.</div><div class=\"line\"></div><div class=\"line\">Success.</div><div class=\"line\">Done.</div><div class=\"line\">Starting coordinator master.</div><div class=\"line\">Starting coordinator master coord1</div><div class=\"line\">Starting coordinator master coord2</div><div class=\"line\">2017-10-26 02:15:25.296 PDT [15951] LOG:  listening on IPv4 address \"0.0.0.0\", port 5432</div><div class=\"line\">2017-10-26 02:15:25.296 PDT [15951] LOG:  listening on IPv6 address \"::\", port 5432</div><div class=\"line\">2017-10-26 02:15:25.297 PDT [15951] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5432\"</div><div class=\"line\">2017-10-26 02:15:25.304 PDT [15951] LOG:  redirecting log output to logging collector process</div><div class=\"line\">2017-10-26 02:15:25.304 PDT [15951] HINT:  Future log output will appear in directory \"pg_log\".</div><div class=\"line\">2017-10-26 02:15:25.321 PDT [15847] LOG:  listening on IPv4 address \"0.0.0.0\", port 5432</div><div class=\"line\">2017-10-26 02:15:25.321 PDT [15847] LOG:  listening on IPv6 address \"::\", port 5432</div><div class=\"line\">2017-10-26 02:15:25.323 PDT [15847] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5432\"</div><div class=\"line\">2017-10-26 02:15:25.330 PDT [15847] LOG:  redirecting log output to logging collector process</div><div class=\"line\">2017-10-26 02:15:25.330 PDT [15847] HINT:  Future log output will appear in directory \"pg_log\".</div><div class=\"line\">Done.</div><div class=\"line\">Initialize all the datanode masters.</div><div class=\"line\">Initialize the datanode master node1.</div><div class=\"line\">Initialize the datanode master node2.</div><div class=\"line\">The files belonging to this database system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\">The database cluster will be initialized with locale \"en_US.UTF-8\".</div><div class=\"line\">The default database encoding has accordingly been set to \"UTF8\".</div><div class=\"line\">The default text search configuration will be set to \"english\".</div><div class=\"line\"></div><div class=\"line\">Data page checksums are disabled.</div><div class=\"line\"></div><div class=\"line\">fixing permissions on existing directory /home/postgres/pgxl/data/nodes/dn_master ... ok</div><div class=\"line\">creating subdirectories ... ok</div><div class=\"line\">selecting default max_connections ... 100</div><div class=\"line\">selecting default shared_buffers ... 128MB</div><div class=\"line\">selecting dynamic shared memory implementation ... posix</div><div class=\"line\">creating configuration files ... ok</div><div class=\"line\">running bootstrap script ... ok</div><div class=\"line\">performing post-bootstrap initialization ... creating cluster information ... ok</div><div class=\"line\">syncing data to disk ... ok</div><div class=\"line\">freezing database template0 ... ok</div><div class=\"line\">freezing database template1 ... ok</div><div class=\"line\">freezing database postgres ... ok</div><div class=\"line\"></div><div class=\"line\">WARNING: enabling \"trust\" authentication for local connections</div><div class=\"line\">You can change this by editing pg_hba.conf or using the option -A, or</div><div class=\"line\">--auth-local and --auth-host, the next time you run initdb.</div><div class=\"line\"></div><div class=\"line\">Success.</div><div class=\"line\">The files belonging to this database system will be owned by user \"postgres\".</div><div class=\"line\">This user must also own the server process.</div><div class=\"line\"></div><div class=\"line\">The database cluster will be initialized with locale \"en_US.UTF-8\".</div><div class=\"line\">The default database encoding has accordingly been set to \"UTF8\".</div><div class=\"line\">The default text search configuration will be set to \"english\".</div><div class=\"line\"></div><div class=\"line\">Data page checksums are disabled.</div><div class=\"line\"></div><div class=\"line\">fixing permissions on existing directory /home/postgres/pgxl/data/nodes/dn_master ... ok</div><div class=\"line\">creating subdirectories ... ok</div><div class=\"line\">selecting default max_connections ... 100</div><div class=\"line\">selecting default shared_buffers ... 128MB</div><div class=\"line\">selecting dynamic shared memory implementation ... posix</div><div class=\"line\">creating configuration files ... ok</div><div class=\"line\">running bootstrap script ... ok</div><div class=\"line\">performing post-bootstrap initialization ... creating cluster information ... ok</div><div class=\"line\">syncing data to disk ... ok</div><div class=\"line\">freezing database template0 ... ok</div><div class=\"line\">freezing database template1 ... ok</div><div class=\"line\">freezing database postgres ... ok</div><div class=\"line\"></div><div class=\"line\">WARNING: enabling \"trust\" authentication for local connections</div><div class=\"line\">You can change this by editing pg_hba.conf or using the option -A, or</div><div class=\"line\">--auth-local and --auth-host, the next time you run initdb.</div><div class=\"line\"></div><div class=\"line\">Success.</div><div class=\"line\">Done.</div><div class=\"line\">Starting all the datanode masters.</div><div class=\"line\">Starting datanode master node1.</div><div class=\"line\">Starting datanode master node2.</div><div class=\"line\">2017-10-26 02:15:32.075 PDT [16427] LOG:  listening on IPv4 address \"0.0.0.0\", port 5433</div><div class=\"line\">2017-10-26 02:15:32.075 PDT [16427] LOG:  listening on IPv6 address \"::\", port 5433</div><div class=\"line\">2017-10-26 02:15:32.077 PDT [16427] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5433\"</div><div class=\"line\">2017-10-26 02:15:32.083 PDT [16427] LOG:  redirecting log output to logging collector process</div><div class=\"line\">2017-10-26 02:15:32.083 PDT [16427] HINT:  Future log output will appear in directory \"pg_log\".</div><div class=\"line\">2017-10-26 02:15:32.109 PDT [16323] LOG:  listening on IPv4 address \"0.0.0.0\", port 5433</div><div class=\"line\">2017-10-26 02:15:32.109 PDT [16323] LOG:  listening on IPv6 address \"::\", port 5433</div><div class=\"line\">2017-10-26 02:15:32.111 PDT [16323] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5433\"</div><div class=\"line\">2017-10-26 02:15:32.116 PDT [16323] LOG:  redirecting log output to logging collector process</div><div class=\"line\">2017-10-26 02:15:32.116 PDT [16323] HINT:  Future log output will appear in directory \"pg_log\".</div><div class=\"line\">Done.</div><div class=\"line\">ALTER NODE coord1 WITH (HOST='</span>datanode1<span class=\"string\">', PORT=5432);</div><div class=\"line\">ALTER NODE</div><div class=\"line\">CREATE NODE coord2 WITH (TYPE='</span>coordinator<span class=\"string\">', HOST='</span>datanode2<span class=\"string\">', PORT=5432);</div><div class=\"line\">CREATE NODE</div><div class=\"line\">CREATE NODE node1 WITH (TYPE='</span>datanode<span class=\"string\">', HOST='</span>datanode1<span class=\"string\">', PORT=5433, PRIMARY, PREFERRED);</div><div class=\"line\">CREATE NODE</div><div class=\"line\">CREATE NODE node2 WITH (TYPE='</span>datanode<span class=\"string\">', HOST='</span>datanode2<span class=\"string\">', PORT=5433);</div><div class=\"line\">CREATE NODE</div><div class=\"line\">SELECT pgxc_pool_reload();</div><div class=\"line\"> pgxc_pool_reload</div><div class=\"line\">------------------</div><div class=\"line\"> t</div><div class=\"line\">(1 row)</div><div class=\"line\"></div><div class=\"line\">CREATE NODE coord1 WITH (TYPE='</span>coordinator<span class=\"string\">', HOST='</span>datanode1<span class=\"string\">', PORT=5432);</div><div class=\"line\">CREATE NODE</div><div class=\"line\">ALTER NODE coord2 WITH (HOST='</span>datanode2<span class=\"string\">', PORT=5432);</div><div class=\"line\">ALTER NODE</div><div class=\"line\">CREATE NODE node1 WITH (TYPE='</span>datanode<span class=\"string\">', HOST='</span>datanode1<span class=\"string\">', PORT=5433, PRIMARY);</div><div class=\"line\">CREATE NODE</div><div class=\"line\">CREATE NODE node2 WITH (TYPE='</span>datanode<span class=\"string\">', HOST='</span>datanode2<span class=\"string\">', PORT=5433, PREFERRED);</div><div class=\"line\">CREATE NODE</div><div class=\"line\">SELECT pgxc_pool_reload();</div><div class=\"line\"> pgxc_pool_reload</div><div class=\"line\">------------------</div><div class=\"line\"> t</div><div class=\"line\">(1 row)</div><div class=\"line\"></div><div class=\"line\">Done.</div><div class=\"line\">EXECUTE DIRECT ON (node1) '</span>CREATE NODE coord1 WITH (TYPE=<span class=\"string\">''</span>coordinator<span class=\"string\">''</span>, HOST=<span class=\"string\">''</span>datanode1<span class=\"string\">''</span>, PORT=5432)<span class=\"string\">';</div><div class=\"line\">EXECUTE DIRECT</div><div class=\"line\">EXECUTE DIRECT ON (node1) '</span>CREATE NODE coord2 WITH (TYPE=<span class=\"string\">''</span>coordinator<span class=\"string\">''</span>, HOST=<span class=\"string\">''</span>datanode2<span class=\"string\">''</span>, PORT=5432)<span class=\"string\">';</div><div class=\"line\">EXECUTE DIRECT</div><div class=\"line\">EXECUTE DIRECT ON (node1) '</span>ALTER NODE node1 WITH (TYPE=<span class=\"string\">''</span>datanode<span class=\"string\">''</span>, HOST=<span class=\"string\">''</span>datanode1<span class=\"string\">''</span>, PORT=5433, PRIMARY, PREFERRED)<span class=\"string\">';</div><div class=\"line\">EXECUTE DIRECT</div><div class=\"line\">EXECUTE DIRECT ON (node1) '</span>CREATE NODE node2 WITH (TYPE=<span class=\"string\">''</span>datanode<span class=\"string\">''</span>, HOST=<span class=\"string\">''</span>datanode2<span class=\"string\">''</span>, PORT=5433, PREFERRED)<span class=\"string\">';</div><div class=\"line\">EXECUTE DIRECT</div><div class=\"line\">EXECUTE DIRECT ON (node1) '</span>SELECT pgxc_pool_reload()<span class=\"string\">';</div><div class=\"line\"> pgxc_pool_reload</div><div class=\"line\">------------------</div><div class=\"line\"> t</div><div class=\"line\">(1 row)</div><div class=\"line\"></div><div class=\"line\">EXECUTE DIRECT ON (node2) '</span>CREATE NODE coord1 WITH (TYPE=<span class=\"string\">''</span>coordinator<span class=\"string\">''</span>, HOST=<span class=\"string\">''</span>datanode1<span class=\"string\">''</span>, PORT=5432)<span class=\"string\">';</div><div class=\"line\">EXECUTE DIRECT</div><div class=\"line\">EXECUTE DIRECT ON (node2) '</span>CREATE NODE coord2 WITH (TYPE=<span class=\"string\">''</span>coordinator<span class=\"string\">''</span>, HOST=<span class=\"string\">''</span>datanode2<span class=\"string\">''</span>, PORT=5432)<span class=\"string\">';</div><div class=\"line\">EXECUTE DIRECT</div><div class=\"line\">EXECUTE DIRECT ON (node2) '</span>CREATE NODE node1 WITH (TYPE=<span class=\"string\">''</span>datanode<span class=\"string\">''</span>, HOST=<span class=\"string\">''</span>datanode1<span class=\"string\">''</span>, PORT=5433, PRIMARY, PREFERRED)<span class=\"string\">';</div><div class=\"line\">EXECUTE DIRECT</div><div class=\"line\">EXECUTE DIRECT ON (node2) '</span>ALTER NODE node2 WITH (TYPE=<span class=\"string\">''</span>datanode<span class=\"string\">''</span>, HOST=<span class=\"string\">''</span>datanode2<span class=\"string\">''</span>, PORT=5433, PREFERRED)<span class=\"string\">';</div><div class=\"line\">EXECUTE DIRECT</div><div class=\"line\">EXECUTE DIRECT ON (node2) '</span>SELECT pgxc_pool_reload()<span class=\"string\">';</div><div class=\"line\"> pgxc_pool_reload</div><div class=\"line\">------------------</div><div class=\"line\"> t</div><div class=\"line\">(1 row)</div><div class=\"line\"></div><div class=\"line\">Done.</span></div></pre></td></tr></table></figure></p>\n<ul>\n<li>遇到的问题<br>安装时出现<code>permission denied</code><br>是因为权限不足 使用<code>sudo chmod -R 777 /usr</code><br>或<code>sudo pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf init all</code></li>\n</ul>\n<h3 id=\"集群验证\"><a href=\"#集群验证\" class=\"headerlink\" title=\"集群验证\"></a>集群验证</h3><p>在datanode1节点上<br>连接上5432端口，即node1上的coordinator，查看集群节点状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@datanode1 ~]$ psql -p 5432</div><div class=\"line\">psql (PGXL 9.5r1.4, based on PG 9.5.5 (Postgres-XL 9.5r1.4))</div><div class=\"line\">Type <span class=\"string\">\"help\"</span> <span class=\"keyword\">for</span> help.</div><div class=\"line\"></div><div class=\"line\">postgres=<span class=\"comment\"># select * from pgxc_node;</span></div><div class=\"line\"> node_name | node_type | node_port | node_host | nodeis_primary | nodeis_preferred |   node_id</div><div class=\"line\">-----------+-----------+-----------+-----------+----------------+------------------+-------------</div><div class=\"line\"> coord1    | C         |      5432 | datanode1 | f              | f                |  1885696643</div><div class=\"line\"> coord2    | C         |      5432 | datanode2 | f              | f                | -1197102633</div><div class=\"line\"> node1     | D         |      5433 | datanode1 | t              | t                |  1148549230</div><div class=\"line\"> node2     | D         |      5433 | datanode2 | f              | f                |  -927910690</div><div class=\"line\">(4 rows)</div></pre></td></tr></table></figure>\n<p>如上面所示，可看到2个coordinator，2个node。集群状态正常<br>尝试创建测试表test1，并插入数据</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">postgres=<span class=\"comment\"># create table test1(id int,name text);</span></div><div class=\"line\">CREATE TABLE</div><div class=\"line\">postgres=<span class=\"comment\"># insert into test1(id,name) select generate_series(1,8),'test';</span></div><div class=\"line\">INSERT 0 8</div><div class=\"line\">postgres=<span class=\"comment\"># select * from test1;</span></div><div class=\"line\"> id | name</div><div class=\"line\">----+------</div><div class=\"line\">  1 | <span class=\"built_in\">test</span></div><div class=\"line\">  2 | <span class=\"built_in\">test</span></div><div class=\"line\">  5 | <span class=\"built_in\">test</span></div><div class=\"line\">  6 | <span class=\"built_in\">test</span></div><div class=\"line\">  8 | <span class=\"built_in\">test</span></div><div class=\"line\">  3 | <span class=\"built_in\">test</span></div><div class=\"line\">  4 | <span class=\"built_in\">test</span></div><div class=\"line\">  7 | <span class=\"built_in\">test</span></div><div class=\"line\">(8 rows)</div><div class=\"line\"></div><div class=\"line\">postgres=<span class=\"comment\"># exit</span></div><div class=\"line\">postgres-<span class=\"comment\"># \\q</span></div></pre></td></tr></table></figure>\n<p>连接到datanode1服务器的5433端口，即node1，查看测试表的数据<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@datanode1 ~]$ psql -p 5433</div><div class=\"line\">psql (PGXL 9.5r1.4, based on PG 9.5.5 (Postgres-XL 9.5r1.4))</div><div class=\"line\">Type <span class=\"string\">\"help\"</span> <span class=\"keyword\">for</span> help.</div><div class=\"line\"></div><div class=\"line\">postgres=<span class=\"comment\"># select * from test1;</span></div><div class=\"line\"> id | name</div><div class=\"line\">----+------</div><div class=\"line\">  1 | <span class=\"built_in\">test</span></div><div class=\"line\">  2 | <span class=\"built_in\">test</span></div><div class=\"line\">  5 | <span class=\"built_in\">test</span></div><div class=\"line\">  6 | <span class=\"built_in\">test</span></div><div class=\"line\">  8 | <span class=\"built_in\">test</span></div><div class=\"line\">(5 rows)</div></pre></td></tr></table></figure></p>\n<p>可看到表中数据是不全的<br>再去datanode2服务器查看<br>先连接到5432端口，即coordinator<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@datanode2 ~]$ psql -p 5432</div><div class=\"line\">psql (PGXL 9.5r1.4, based on PG 9.5.5 (Postgres-XL 9.5r1.4))</div><div class=\"line\">Type <span class=\"string\">\"help\"</span> <span class=\"keyword\">for</span> help.</div><div class=\"line\"></div><div class=\"line\">postgres=<span class=\"comment\"># select * from test1;</span></div><div class=\"line\"> id | name</div><div class=\"line\">----+------</div><div class=\"line\">  1 | <span class=\"built_in\">test</span></div><div class=\"line\">  2 | <span class=\"built_in\">test</span></div><div class=\"line\">  5 | <span class=\"built_in\">test</span></div><div class=\"line\">  6 | <span class=\"built_in\">test</span></div><div class=\"line\">  8 | <span class=\"built_in\">test</span></div><div class=\"line\">  3 | <span class=\"built_in\">test</span></div><div class=\"line\">  4 | <span class=\"built_in\">test</span></div><div class=\"line\">  7 | <span class=\"built_in\">test</span></div><div class=\"line\">(8 rows)</div><div class=\"line\"></div><div class=\"line\">postgres=<span class=\"comment\"># \\q</span></div></pre></td></tr></table></figure></p>\n<p>再切换到5433端口，即node2<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@datanode2 ~]$ psql -p 5433</div><div class=\"line\">psql (PGXL 9.5r1.4, based on PG 9.5.5 (Postgres-XL 9.5r1.4))</div><div class=\"line\">Type <span class=\"string\">\"help\"</span> <span class=\"keyword\">for</span> help.</div><div class=\"line\"></div><div class=\"line\">postgres=<span class=\"comment\"># select * from test1;</span></div><div class=\"line\"> id | name</div><div class=\"line\">----+------</div><div class=\"line\">  3 | <span class=\"built_in\">test</span></div><div class=\"line\">  4 | <span class=\"built_in\">test</span></div><div class=\"line\">  7 | <span class=\"built_in\">test</span></div><div class=\"line\">(3 rows)</div></pre></td></tr></table></figure></p>\n<p>正好是node1中缺少的那部分数据<br>证实分布式数据库集群搭建完成</p>\n<h3 id=\"数据库集群日常操作\"><a href=\"#数据库集群日常操作\" class=\"headerlink\" title=\"数据库集群日常操作\"></a>数据库集群日常操作</h3><p>关闭集群<br>在gtm服务器上执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@gtm ~]$ pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf stop all</div><div class=\"line\">/bin/bash</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">Reading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf</div><div class=\"line\">Finished reading configuration.</div><div class=\"line\">   ******** PGXC_CTL START ***************</div><div class=\"line\"></div><div class=\"line\">Current directory: /home/postgres/pgxc_ctl</div><div class=\"line\">Stopping all the coordinator masters.</div><div class=\"line\">Stopping coordinator master coord1.</div><div class=\"line\">Stopping coordinator master coord2.</div><div class=\"line\">Done.</div><div class=\"line\">Stopping all the datanode masters.</div><div class=\"line\">Stopping datanode master node1.</div><div class=\"line\">Stopping datanode master node2.</div><div class=\"line\">Done.</div><div class=\"line\">Stopping all the gtm proxies.</div><div class=\"line\">Stopping gtm proxy gtm_pxy1.</div><div class=\"line\">Stopping gtm proxy gtm_pxy2.</div><div class=\"line\">waiting <span class=\"keyword\">for</span> server to shut down.... <span class=\"keyword\">done</span></div><div class=\"line\">server stopped</div><div class=\"line\">waiting <span class=\"keyword\">for</span> server to shut down.... <span class=\"keyword\">done</span></div><div class=\"line\">server stopped</div><div class=\"line\">Done.</div><div class=\"line\">Stop GTM slave</div><div class=\"line\">waiting <span class=\"keyword\">for</span> server to shut down.... <span class=\"keyword\">done</span></div><div class=\"line\">server stopped</div><div class=\"line\">Stop GTM master</div><div class=\"line\">waiting <span class=\"keyword\">for</span> server to shut down.... <span class=\"keyword\">done</span></div><div class=\"line\">server stopped</div></pre></td></tr></table></figure></p>\n<h3 id=\"开启集群\"><a href=\"#开启集群\" class=\"headerlink\" title=\"开启集群\"></a>开启集群</h3><p>在gtm服务器上执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div></pre></td><td class=\"code\"><pre><div class=\"line\">[postgres@gtm ~]$ pgxc_ctl -c /home/postgres/pgxc_ctl/pgxc_ctl.conf start all</div><div class=\"line\">/bin/bash</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">Installing pgxc_ctl_bash script as /home/postgres/pgxc_ctl/pgxc_ctl_bash.</div><div class=\"line\">Reading configuration using /home/postgres/pgxc_ctl/pgxc_ctl_bash --home /home/postgres/pgxc_ctl --configuration /home/postgres/pgxc_ctl/pgxc_ctl.conf</div><div class=\"line\">Finished reading configuration.</div><div class=\"line\">   ******** PGXC_CTL START ***************</div><div class=\"line\"></div><div class=\"line\">Current directory: /home/postgres/pgxc_ctl</div><div class=\"line\">Start GTM master</div><div class=\"line\">server starting</div><div class=\"line\">Start GTM slaveserver starting</div><div class=\"line\">Done.</div><div class=\"line\">Starting all the gtm proxies.</div><div class=\"line\">Starting gtm proxy gtm_pxy1.</div><div class=\"line\">Starting gtm proxy gtm_pxy2.</div><div class=\"line\">server starting</div><div class=\"line\">server starting</div><div class=\"line\">Done.</div><div class=\"line\">Starting coordinator master.</div><div class=\"line\">Starting coordinator master coord1</div><div class=\"line\">Starting coordinator master coord2</div><div class=\"line\">2017-10-26 20:21:35.537 PDT [22477] LOG:  listening on IPv4 address <span class=\"string\">\"0.0.0.0\"</span>, port 5432</div><div class=\"line\">2017-10-26 20:21:35.538 PDT [22477] LOG:  listening on IPv6 address <span class=\"string\">\"::\"</span>, port 5432</div><div class=\"line\">2017-10-26 20:21:35.539 PDT [22477] LOG:  listening on Unix socket <span class=\"string\">\"/tmp/.s.PGSQL.5432\"</span></div><div class=\"line\">2017-10-26 20:21:35.556 PDT [22477] LOG:  redirecting <span class=\"built_in\">log</span> output to logging collector process</div><div class=\"line\">2017-10-26 20:21:35.556 PDT [22477] HINT:  Future <span class=\"built_in\">log</span> output will appear <span class=\"keyword\">in</span> directory <span class=\"string\">\"pg_log\"</span>.</div><div class=\"line\">2017-10-26 20:21:35.563 PDT [22504] LOG:  listening on IPv4 address <span class=\"string\">\"0.0.0.0\"</span>, port 5432</div><div class=\"line\">2017-10-26 20:21:35.563 PDT [22504] LOG:  listening on IPv6 address <span class=\"string\">\"::\"</span>, port 5432</div><div class=\"line\">2017-10-26 20:21:35.565 PDT [22504] LOG:  listening on Unix socket <span class=\"string\">\"/tmp/.s.PGSQL.5432\"</span></div><div class=\"line\">2017-10-26 20:21:35.583 PDT [22504] LOG:  redirecting <span class=\"built_in\">log</span> output to logging collector process</div><div class=\"line\">2017-10-26 20:21:35.583 PDT [22504] HINT:  Future <span class=\"built_in\">log</span> output will appear <span class=\"keyword\">in</span> directory <span class=\"string\">\"pg_log\"</span>.</div><div class=\"line\">Done.</div><div class=\"line\">Starting all the datanode masters.</div><div class=\"line\">Starting datanode master node1.</div><div class=\"line\">Starting datanode master node2.</div><div class=\"line\">2017-10-26 20:21:36.360 PDT [22590] LOG:  listening on IPv4 address <span class=\"string\">\"0.0.0.0\"</span>, port 5433</div><div class=\"line\">2017-10-26 20:21:36.360 PDT [22590] LOG:  listening on IPv6 address <span class=\"string\">\"::\"</span>, port 5433</div><div class=\"line\">2017-10-26 20:21:36.362 PDT [22590] LOG:  listening on Unix socket <span class=\"string\">\"/tmp/.s.PGSQL.5433\"</span></div><div class=\"line\">2017-10-26 20:21:36.382 PDT [22590] LOG:  redirecting <span class=\"built_in\">log</span> output to logging collector process</div><div class=\"line\">2017-10-26 20:21:36.382 PDT [22590] HINT:  Future <span class=\"built_in\">log</span> output will appear <span class=\"keyword\">in</span> directory <span class=\"string\">\"pg_log\"</span>.</div><div class=\"line\">2017-10-26 20:21:36.374 PDT [22617] LOG:  listening on IPv4 address <span class=\"string\">\"0.0.0.0\"</span>, port 5433</div><div class=\"line\">2017-10-26 20:21:36.374 PDT [22617] LOG:  listening on IPv6 address <span class=\"string\">\"::\"</span>, port 5433</div><div class=\"line\">2017-10-26 20:21:36.375 PDT [22617] LOG:  listening on Unix socket <span class=\"string\">\"/tmp/.s.PGSQL.5433\"</span></div><div class=\"line\">2017-10-26 20:21:36.395 PDT [22617] LOG:  redirecting <span class=\"built_in\">log</span> output to logging collector process</div><div class=\"line\">2017-10-26 20:21:36.395 PDT [22617] HINT:  Future <span class=\"built_in\">log</span> output will appear <span class=\"keyword\">in</span> directory <span class=\"string\">\"pg_log\"</span>.</div><div class=\"line\">Done.</div></pre></td></tr></table></figure>\n<h4 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h4><p><a href=\"http://blog.csdn.net/sunbocong/article/details/78363453\">Postgres-XL 9.5简易搭建</a></p>"},{"title":"vue scrollTop 无法赋值","date":"2018-12-21T08:48:36.000Z","keywords":"scrollTop","_content":"> vue scrollTop 无法赋值\n\n## 遇到问题\n\n`container.scrollTop 一直为0`不能赋值\n\n``` javascript\n  watch: {\n    historyList () {\n      this.$nextTick(() => {\n        const container = this.$el.querySelector('.scrolldivmain')\n        console.log(container.scrollHeight)\n        console.log(container.scrollTop)\n        this.$refs.scrolldiv.scrollTo(0, container.scrollHeight + 'px')\n        container.scrollTop = container.scrollHeight\n        container.scrollTop(0, container.scrollHeight)\n        console.log(container.scrollTop) // container.scrollTop 一直为0\n      })\n    }\n  }\n```\n<!--  more  -->\n\n## 注意点\n - 确定下滚动条是在哪里显示的\n  有个方法判断下：\n``` javascript\n    window.addEventListener('scroll', () => {\n        var scrollTop = this.$el.querySelector('.scrolldivmain')\n        // console.log(scrollTop.scrollHeight)\n        console.log(scrollTop.scrollTop) // 查看打印的值是否有变化 如果有 则说明滚滚动条在这个标签中\n        // scrollTop.scrollTop = scrollTop.scrollHeight // 可以尝试下 滚动滚动条。一直在底部则可以设置成功\n    }, true)\n```\n\n## 解决方案\n需要用到的地方 调用this.scrollToBottom()即可\n``` html\n<!--element-ui-->\n\n<el-main class=\"scrolldivmain\">\n    some code\n</el-main>\n```\n\n``` javascript\nmethods: {\n  // 滚动到底部\n    scrollToBottom () {\n      this.$nextTick(() => {\n        setTimeout(() => {\n          var scrollTop = this.$el.querySelector('.scrolldivmain')\n          scrollTop.scrollTop = scrollTop.scrollHeight\n        }, 13)\n      })\n    }\n}\n```\n\n## 参考文章\n[vue 无法监听scroll事件](https://segmentfault.com/q/1010000009119633)\n[参考vue-chat代码](https://github.com/yiluxiangbei87110/vue-chat)\n","source":"_posts/scrollTopFaileSetValue.md","raw":"---\ntitle: vue scrollTop 无法赋值\ndate: 2018-12-21 16:48:36\ntags: vue\ncategories: FE\nkeywords: scrollTop\n---\n> vue scrollTop 无法赋值\n\n## 遇到问题\n\n`container.scrollTop 一直为0`不能赋值\n\n``` javascript\n  watch: {\n    historyList () {\n      this.$nextTick(() => {\n        const container = this.$el.querySelector('.scrolldivmain')\n        console.log(container.scrollHeight)\n        console.log(container.scrollTop)\n        this.$refs.scrolldiv.scrollTo(0, container.scrollHeight + 'px')\n        container.scrollTop = container.scrollHeight\n        container.scrollTop(0, container.scrollHeight)\n        console.log(container.scrollTop) // container.scrollTop 一直为0\n      })\n    }\n  }\n```\n<!--  more  -->\n\n## 注意点\n - 确定下滚动条是在哪里显示的\n  有个方法判断下：\n``` javascript\n    window.addEventListener('scroll', () => {\n        var scrollTop = this.$el.querySelector('.scrolldivmain')\n        // console.log(scrollTop.scrollHeight)\n        console.log(scrollTop.scrollTop) // 查看打印的值是否有变化 如果有 则说明滚滚动条在这个标签中\n        // scrollTop.scrollTop = scrollTop.scrollHeight // 可以尝试下 滚动滚动条。一直在底部则可以设置成功\n    }, true)\n```\n\n## 解决方案\n需要用到的地方 调用this.scrollToBottom()即可\n``` html\n<!--element-ui-->\n\n<el-main class=\"scrolldivmain\">\n    some code\n</el-main>\n```\n\n``` javascript\nmethods: {\n  // 滚动到底部\n    scrollToBottom () {\n      this.$nextTick(() => {\n        setTimeout(() => {\n          var scrollTop = this.$el.querySelector('.scrolldivmain')\n          scrollTop.scrollTop = scrollTop.scrollHeight\n        }, 13)\n      })\n    }\n}\n```\n\n## 参考文章\n[vue 无法监听scroll事件](https://segmentfault.com/q/1010000009119633)\n[参考vue-chat代码](https://github.com/yiluxiangbei87110/vue-chat)\n","slug":"scrollTopFaileSetValue","published":1,"updated":"2019-02-12T08:51:35.924Z","_id":"cjs1iy5n7002bcdon7xcdcsma","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>vue scrollTop 无法赋值</p>\n</blockquote>\n<h2 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h2><p><code>container.scrollTop 一直为0</code>不能赋值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">watch: &#123;</div><div class=\"line\">  historyList () &#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.$nextTick(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">      <span class=\"keyword\">const</span> container = <span class=\"keyword\">this</span>.$el.querySelector(<span class=\"string\">'.scrolldivmain'</span>)</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(container.scrollHeight)</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(container.scrollTop)</div><div class=\"line\">      <span class=\"keyword\">this</span>.$refs.scrolldiv.scrollTo(<span class=\"number\">0</span>, container.scrollHeight + <span class=\"string\">'px'</span>)</div><div class=\"line\">      container.scrollTop = container.scrollHeight</div><div class=\"line\">      container.scrollTop(<span class=\"number\">0</span>, container.scrollHeight)</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(container.scrollTop) <span class=\"comment\">// container.scrollTop 一直为0</span></div><div class=\"line\">    &#125;)</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"注意点\"><a href=\"#注意点\" class=\"headerlink\" title=\"注意点\"></a>注意点</h2><ul>\n<li>确定下滚动条是在哪里显示的<br>有个方法判断下：<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'scroll'</span>, () =&gt; &#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> scrollTop = <span class=\"keyword\">this</span>.$el.querySelector(<span class=\"string\">'.scrolldivmain'</span>)</div><div class=\"line\">    <span class=\"comment\">// console.log(scrollTop.scrollHeight)</span></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(scrollTop.scrollTop) <span class=\"comment\">// 查看打印的值是否有变化 如果有 则说明滚滚动条在这个标签中</span></div><div class=\"line\">    <span class=\"comment\">// scrollTop.scrollTop = scrollTop.scrollHeight // 可以尝试下 滚动滚动条。一直在底部则可以设置成功</span></div><div class=\"line\">&#125;, <span class=\"literal\">true</span>)</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>需要用到的地方 调用this.scrollToBottom()即可<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!--element-ui--&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-main</span> <span class=\"attr\">class</span>=<span class=\"string\">\"scrolldivmain\"</span>&gt;</span></div><div class=\"line\">    some code</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-main</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">methods: &#123;</div><div class=\"line\">  <span class=\"comment\">// 滚动到底部</span></div><div class=\"line\">    scrollToBottom () &#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.$nextTick(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">        setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">          <span class=\"keyword\">var</span> scrollTop = <span class=\"keyword\">this</span>.$el.querySelector(<span class=\"string\">'.scrolldivmain'</span>)</div><div class=\"line\">          scrollTop.scrollTop = scrollTop.scrollHeight</div><div class=\"line\">        &#125;, <span class=\"number\">13</span>)</div><div class=\"line\">      &#125;)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://segmentfault.com/q/1010000009119633\" target=\"_blank\" rel=\"external\">vue 无法监听scroll事件</a><br><a href=\"https://github.com/yiluxiangbei87110/vue-chat\" target=\"_blank\" rel=\"external\">参考vue-chat代码</a></p>\n","excerpt":"<blockquote>\n<p>vue scrollTop 无法赋值</p>\n</blockquote>\n<h2 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h2><p><code>container.scrollTop 一直为0</code>不能赋值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">watch: &#123;</div><div class=\"line\">  historyList () &#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.$nextTick(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">      <span class=\"keyword\">const</span> container = <span class=\"keyword\">this</span>.$el.querySelector(<span class=\"string\">'.scrolldivmain'</span>)</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(container.scrollHeight)</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(container.scrollTop)</div><div class=\"line\">      <span class=\"keyword\">this</span>.$refs.scrolldiv.scrollTo(<span class=\"number\">0</span>, container.scrollHeight + <span class=\"string\">'px'</span>)</div><div class=\"line\">      container.scrollTop = container.scrollHeight</div><div class=\"line\">      container.scrollTop(<span class=\"number\">0</span>, container.scrollHeight)</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(container.scrollTop) <span class=\"comment\">// container.scrollTop 一直为0</span></div><div class=\"line\">    &#125;)</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","more":"<h2 id=\"注意点\"><a href=\"#注意点\" class=\"headerlink\" title=\"注意点\"></a>注意点</h2><ul>\n<li>确定下滚动条是在哪里显示的<br>有个方法判断下：<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'scroll'</span>, () =&gt; &#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> scrollTop = <span class=\"keyword\">this</span>.$el.querySelector(<span class=\"string\">'.scrolldivmain'</span>)</div><div class=\"line\">    <span class=\"comment\">// console.log(scrollTop.scrollHeight)</span></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(scrollTop.scrollTop) <span class=\"comment\">// 查看打印的值是否有变化 如果有 则说明滚滚动条在这个标签中</span></div><div class=\"line\">    <span class=\"comment\">// scrollTop.scrollTop = scrollTop.scrollHeight // 可以尝试下 滚动滚动条。一直在底部则可以设置成功</span></div><div class=\"line\">&#125;, <span class=\"literal\">true</span>)</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>需要用到的地方 调用this.scrollToBottom()即可<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!--element-ui--&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-main</span> <span class=\"attr\">class</span>=<span class=\"string\">\"scrolldivmain\"</span>&gt;</span></div><div class=\"line\">    some code</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-main</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">methods: &#123;</div><div class=\"line\">  <span class=\"comment\">// 滚动到底部</span></div><div class=\"line\">    scrollToBottom () &#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.$nextTick(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">        setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">          <span class=\"keyword\">var</span> scrollTop = <span class=\"keyword\">this</span>.$el.querySelector(<span class=\"string\">'.scrolldivmain'</span>)</div><div class=\"line\">          scrollTop.scrollTop = scrollTop.scrollHeight</div><div class=\"line\">        &#125;, <span class=\"number\">13</span>)</div><div class=\"line\">      &#125;)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://segmentfault.com/q/1010000009119633\">vue 无法监听scroll事件</a><br><a href=\"https://github.com/yiluxiangbei87110/vue-chat\">参考vue-chat代码</a></p>"},{"title":"vue中使用echarts 使用记录","date":"2019-01-16T08:52:19.000Z","keywords":"echarts","_content":"> 仅以此记录下个人使用echart的方法，毕竟好记性不如烂笔头。\n\n\n# 参考资料\n[手摸手，带你用vue撸后台 系列三(实战篇)](https://segmentfault.com/a/1190000009762198)\n\n# 安装echarts\n`npm install echarts --save`\n# echarts package版本\n`\"echarts\": \"^4.2.0-rc.2\"`\n<!--  more  -->\n\n# utils\n``` javascript\nexport function debounce (func, wait, immediate) {\n  let timeout, args, context, timestamp, result\n\n  const later = function () {\n    // 据上一次触发时间间隔\n    const last = +new Date() - timestamp\n\n    // 上次被包装函数被调用时间间隔last小于设定时间间隔wait\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last)\n    } else {\n      timeout = null\n      // 如果设定为immediate===true，因为开始边界已经调用过了此处无需调用\n      if (!immediate) {\n        result = func.apply(context, args)\n        if (!timeout) context = args = null\n      }\n    }\n  }\n\n  return function (...args) {\n    context = this\n    timestamp = +new Date()\n    const callNow = immediate && !timeout\n    // 如果延时不存在，重新设定延时\n    if (!timeout) timeout = setTimeout(later, wait)\n    if (callNow) {\n      result = func.apply(context, args)\n      context = args = null\n    }\n\n    return result\n  }\n}\n```\n\n# chart组件代码\n``` javascript\n<template>\n  <div :class=\"className\" :style=\"{height:height,width:width}\"></div>\n</template>\n\n<script>\nimport echarts from 'echarts'\nimport { debounce } from '@/utils'\n\nexport default {\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '350px'\n    },\n    autoResize: {\n      type: Boolean,\n      default: true\n    },\n    chartData: {\n      type: Object\n    }\n  },\n  data () {\n    return {}\n  },\n  mounted () {\n    this.initChart()\n    if (this.autoResize) {\n      this.__resizeHanlder = debounce(() => {\n        if (this.$chart) {\n          this.$chart.resize()\n        }\n      }, 100)\n      window.addEventListener('resize', this.__resizeHanlder)\n    }\n  },\n  beforeDestroy () {\n    if (!this.$chart) {\n      return\n    }\n    if (this.autoResize) {\n      window.removeEventListener('resize', this.__resizeHanlder)\n    }\n\n    this.$chart.dispose()\n    this.$chart = null\n  },\n  watch: {\n    chartData: {\n      deep: true,\n      handler (val) {\n        this.setOptions(val)\n      }\n    }\n  },\n  methods: {\n    setOptions (val) {\n      this.$chart.clear() // 清空画布\n      this.$chart.setOption(val)\n    },\n    initChart () {\n      this.$chart = echarts.init(this.$el, 'macarons')\n      this.setOptions(this.chartData)\n    }\n  }\n}\n</script>\n\n```\n# 使用方法\n``` javascript\n<template>\n    <div>\n        <charts :chartData=\"Option\"></charts>\n    </div>\n</template>\n\n<script>\nimport Charts '@/components/Charts'\n\nexport default {\n  name: 'chartDemo',\n  components: {\n    Charts\n  },\n  data () {\n    return {\n      Option: {}\n    }\n  },\n  mounted () {\n    this.getList()\n  },\n  methods: {\n    getList () {\n        this.Option = {\n            xAxis: {\n                type: 'category',\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [{\n                data: [820, 932, 901, 934, 1290, 1330, 1320],\n                type: 'line'\n            }]\n        }\n    }\n  }\n</script>\n```\n","source":"_posts/echarts.md","raw":"---\ntitle: vue中使用echarts 使用记录\ndate: 2019-01-16 16:52:19\ntags: vue\ncategories: FE\nkeywords: echarts\n---\n> 仅以此记录下个人使用echart的方法，毕竟好记性不如烂笔头。\n\n\n# 参考资料\n[手摸手，带你用vue撸后台 系列三(实战篇)](https://segmentfault.com/a/1190000009762198)\n\n# 安装echarts\n`npm install echarts --save`\n# echarts package版本\n`\"echarts\": \"^4.2.0-rc.2\"`\n<!--  more  -->\n\n# utils\n``` javascript\nexport function debounce (func, wait, immediate) {\n  let timeout, args, context, timestamp, result\n\n  const later = function () {\n    // 据上一次触发时间间隔\n    const last = +new Date() - timestamp\n\n    // 上次被包装函数被调用时间间隔last小于设定时间间隔wait\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last)\n    } else {\n      timeout = null\n      // 如果设定为immediate===true，因为开始边界已经调用过了此处无需调用\n      if (!immediate) {\n        result = func.apply(context, args)\n        if (!timeout) context = args = null\n      }\n    }\n  }\n\n  return function (...args) {\n    context = this\n    timestamp = +new Date()\n    const callNow = immediate && !timeout\n    // 如果延时不存在，重新设定延时\n    if (!timeout) timeout = setTimeout(later, wait)\n    if (callNow) {\n      result = func.apply(context, args)\n      context = args = null\n    }\n\n    return result\n  }\n}\n```\n\n# chart组件代码\n``` javascript\n<template>\n  <div :class=\"className\" :style=\"{height:height,width:width}\"></div>\n</template>\n\n<script>\nimport echarts from 'echarts'\nimport { debounce } from '@/utils'\n\nexport default {\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '350px'\n    },\n    autoResize: {\n      type: Boolean,\n      default: true\n    },\n    chartData: {\n      type: Object\n    }\n  },\n  data () {\n    return {}\n  },\n  mounted () {\n    this.initChart()\n    if (this.autoResize) {\n      this.__resizeHanlder = debounce(() => {\n        if (this.$chart) {\n          this.$chart.resize()\n        }\n      }, 100)\n      window.addEventListener('resize', this.__resizeHanlder)\n    }\n  },\n  beforeDestroy () {\n    if (!this.$chart) {\n      return\n    }\n    if (this.autoResize) {\n      window.removeEventListener('resize', this.__resizeHanlder)\n    }\n\n    this.$chart.dispose()\n    this.$chart = null\n  },\n  watch: {\n    chartData: {\n      deep: true,\n      handler (val) {\n        this.setOptions(val)\n      }\n    }\n  },\n  methods: {\n    setOptions (val) {\n      this.$chart.clear() // 清空画布\n      this.$chart.setOption(val)\n    },\n    initChart () {\n      this.$chart = echarts.init(this.$el, 'macarons')\n      this.setOptions(this.chartData)\n    }\n  }\n}\n</script>\n\n```\n# 使用方法\n``` javascript\n<template>\n    <div>\n        <charts :chartData=\"Option\"></charts>\n    </div>\n</template>\n\n<script>\nimport Charts '@/components/Charts'\n\nexport default {\n  name: 'chartDemo',\n  components: {\n    Charts\n  },\n  data () {\n    return {\n      Option: {}\n    }\n  },\n  mounted () {\n    this.getList()\n  },\n  methods: {\n    getList () {\n        this.Option = {\n            xAxis: {\n                type: 'category',\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [{\n                data: [820, 932, 901, 934, 1290, 1330, 1320],\n                type: 'line'\n            }]\n        }\n    }\n  }\n</script>\n```\n","slug":"echarts","published":1,"updated":"2019-02-12T08:54:36.957Z","_id":"cjs1j2y0e002ecdon2239awez","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>仅以此记录下个人使用echart的方法，毕竟好记性不如烂笔头。</p>\n</blockquote>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p><a href=\"https://segmentfault.com/a/1190000009762198\" target=\"_blank\" rel=\"external\">手摸手，带你用vue撸后台 系列三(实战篇)</a></p>\n<h1 id=\"安装echarts\"><a href=\"#安装echarts\" class=\"headerlink\" title=\"安装echarts\"></a>安装echarts</h1><p><code>npm install echarts --save</code></p>\n<h1 id=\"echarts-package版本\"><a href=\"#echarts-package版本\" class=\"headerlink\" title=\"echarts package版本\"></a>echarts package版本</h1><p><code>&quot;echarts&quot;: &quot;^4.2.0-rc.2&quot;</code><br><a id=\"more\"></a></p>\n<h1 id=\"utils\"><a href=\"#utils\" class=\"headerlink\" title=\"utils\"></a>utils</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">debounce</span> (<span class=\"params\">func, wait, immediate</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">let</span> timeout, args, context, timestamp, result</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">const</span> later = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 据上一次触发时间间隔</span></div><div class=\"line\">    <span class=\"keyword\">const</span> last = +<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>() - timestamp</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// 上次被包装函数被调用时间间隔last小于设定时间间隔wait</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (last &lt; wait &amp;&amp; last &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">      timeout = setTimeout(later, wait - last)</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">      timeout = <span class=\"literal\">null</span></div><div class=\"line\">      <span class=\"comment\">// 如果设定为immediate===true，因为开始边界已经调用过了此处无需调用</span></div><div class=\"line\">      <span class=\"keyword\">if</span> (!immediate) &#123;</div><div class=\"line\">        result = func.apply(context, args)</div><div class=\"line\">        <span class=\"keyword\">if</span> (!timeout) context = args = <span class=\"literal\">null</span></div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">...args</span>) </span>&#123;</div><div class=\"line\">    context = <span class=\"keyword\">this</span></div><div class=\"line\">    timestamp = +<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</div><div class=\"line\">    <span class=\"keyword\">const</span> callNow = immediate &amp;&amp; !timeout</div><div class=\"line\">    <span class=\"comment\">// 如果延时不存在，重新设定延时</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (!timeout) timeout = setTimeout(later, wait)</div><div class=\"line\">    <span class=\"keyword\">if</span> (callNow) &#123;</div><div class=\"line\">      result = func.apply(context, args)</div><div class=\"line\">      context = args = <span class=\"literal\">null</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> result</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"chart组件代码\"><a href=\"#chart组件代码\" class=\"headerlink\" title=\"chart组件代码\"></a>chart组件代码</h1><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;template&gt;</div><div class=\"line\">  &lt;div :class=\"className\" :style=\"&#123;height:height,width:width&#125;\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;/template&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">import echarts from 'echarts'</div><div class=\"line\">import &#123; debounce &#125; from '@/utils'</div><div class=\"line\"></div><div class=\"line\">export default &#123;</div><div class=\"line\">  props: &#123;</div><div class=\"line\">    className: &#123;</div><div class=\"line\">      type: String,</div><div class=\"line\">      default: 'chart'</div><div class=\"line\">    &#125;,</div><div class=\"line\">    width: &#123;</div><div class=\"line\">      type: String,</div><div class=\"line\">      default: '100%'</div><div class=\"line\">    &#125;,</div><div class=\"line\">    height: &#123;</div><div class=\"line\">      type: String,</div><div class=\"line\">      default: '350px'</div><div class=\"line\">    &#125;,</div><div class=\"line\">    autoResize: &#123;</div><div class=\"line\">      type: Boolean,</div><div class=\"line\">      default: true</div><div class=\"line\">    &#125;,</div><div class=\"line\">    chartData: &#123;</div><div class=\"line\">      type: Object</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  data () &#123;</div><div class=\"line\">    return &#123;&#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  mounted () &#123;</div><div class=\"line\">    this.initChart()</div><div class=\"line\">    if (this.autoResize) &#123;</div><div class=\"line\">      this.__resizeHanlder = debounce(() =&gt; &#123;</div><div class=\"line\">        if (this.$chart) &#123;</div><div class=\"line\">          this.$chart.resize()</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;, 100)</div><div class=\"line\">      window.addEventListener('resize', this.__resizeHanlder)</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  beforeDestroy () &#123;</div><div class=\"line\">    if (!this.$chart) &#123;</div><div class=\"line\">      return</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (this.autoResize) &#123;</div><div class=\"line\">      window.removeEventListener('resize', this.__resizeHanlder)</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    this.$chart.dispose()</div><div class=\"line\">    this.$chart = null</div><div class=\"line\">  &#125;,</div><div class=\"line\">  watch: &#123;</div><div class=\"line\">    chartData: &#123;</div><div class=\"line\">      deep: true,</div><div class=\"line\">      handler (val) &#123;</div><div class=\"line\">        this.setOptions(val)</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  methods: &#123;</div><div class=\"line\">    setOptions (val) &#123;</div><div class=\"line\">      this.$chart.clear() // 清空画布</div><div class=\"line\">      this.$chart.setOption(val)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    initChart () &#123;</div><div class=\"line\">      this.$chart = echarts.init(this.$el, 'macarons')</div><div class=\"line\">      this.setOptions(this.chartData)</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/script&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h1><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;template&gt;</div><div class=\"line\">    &lt;div&gt;</div><div class=\"line\">        &lt;charts :chartData=\"Option\"&gt;&lt;/charts&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/template&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">import Charts '@/components/Charts'</div><div class=\"line\"></div><div class=\"line\">export default &#123;</div><div class=\"line\">  name: 'chartDemo',</div><div class=\"line\">  components: &#123;</div><div class=\"line\">    Charts</div><div class=\"line\">  &#125;,</div><div class=\"line\">  data () &#123;</div><div class=\"line\">    return &#123;</div><div class=\"line\">      Option: &#123;&#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  mounted () &#123;</div><div class=\"line\">    this.getList()</div><div class=\"line\">  &#125;,</div><div class=\"line\">  methods: &#123;</div><div class=\"line\">    getList () &#123;</div><div class=\"line\">        this.Option = &#123;</div><div class=\"line\">            xAxis: &#123;</div><div class=\"line\">                type: 'category',</div><div class=\"line\">                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']</div><div class=\"line\">            &#125;,</div><div class=\"line\">            yAxis: &#123;</div><div class=\"line\">                type: 'value'</div><div class=\"line\">            &#125;,</div><div class=\"line\">            series: [&#123;</div><div class=\"line\">                data: [820, 932, 901, 934, 1290, 1330, 1320],</div><div class=\"line\">                type: 'line'</div><div class=\"line\">            &#125;]</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&lt;/script&gt;</div></pre></td></tr></table></figure>\n","excerpt":"<blockquote>\n<p>仅以此记录下个人使用echart的方法，毕竟好记性不如烂笔头。</p>\n</blockquote>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p><a href=\"https://segmentfault.com/a/1190000009762198\">手摸手，带你用vue撸后台 系列三(实战篇)</a></p>\n<h1 id=\"安装echarts\"><a href=\"#安装echarts\" class=\"headerlink\" title=\"安装echarts\"></a>安装echarts</h1><p><code>npm install echarts --save</code></p>\n<h1 id=\"echarts-package版本\"><a href=\"#echarts-package版本\" class=\"headerlink\" title=\"echarts package版本\"></a>echarts package版本</h1><p><code>&quot;echarts&quot;: &quot;^4.2.0-rc.2&quot;</code><br>","more":"</p>\n<h1 id=\"utils\"><a href=\"#utils\" class=\"headerlink\" title=\"utils\"></a>utils</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">debounce</span> (<span class=\"params\">func, wait, immediate</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">let</span> timeout, args, context, timestamp, result</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">const</span> later = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 据上一次触发时间间隔</span></div><div class=\"line\">    <span class=\"keyword\">const</span> last = +<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>() - timestamp</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// 上次被包装函数被调用时间间隔last小于设定时间间隔wait</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (last &lt; wait &amp;&amp; last &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">      timeout = setTimeout(later, wait - last)</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">      timeout = <span class=\"literal\">null</span></div><div class=\"line\">      <span class=\"comment\">// 如果设定为immediate===true，因为开始边界已经调用过了此处无需调用</span></div><div class=\"line\">      <span class=\"keyword\">if</span> (!immediate) &#123;</div><div class=\"line\">        result = func.apply(context, args)</div><div class=\"line\">        <span class=\"keyword\">if</span> (!timeout) context = args = <span class=\"literal\">null</span></div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">...args</span>) </span>&#123;</div><div class=\"line\">    context = <span class=\"keyword\">this</span></div><div class=\"line\">    timestamp = +<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</div><div class=\"line\">    <span class=\"keyword\">const</span> callNow = immediate &amp;&amp; !timeout</div><div class=\"line\">    <span class=\"comment\">// 如果延时不存在，重新设定延时</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (!timeout) timeout = setTimeout(later, wait)</div><div class=\"line\">    <span class=\"keyword\">if</span> (callNow) &#123;</div><div class=\"line\">      result = func.apply(context, args)</div><div class=\"line\">      context = args = <span class=\"literal\">null</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> result</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"chart组件代码\"><a href=\"#chart组件代码\" class=\"headerlink\" title=\"chart组件代码\"></a>chart组件代码</h1><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;template&gt;</div><div class=\"line\">  &lt;div :class=\"className\" :style=\"&#123;height:height,width:width&#125;\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;/template&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">import echarts from 'echarts'</div><div class=\"line\">import &#123; debounce &#125; from '@/utils'</div><div class=\"line\"></div><div class=\"line\">export default &#123;</div><div class=\"line\">  props: &#123;</div><div class=\"line\">    className: &#123;</div><div class=\"line\">      type: String,</div><div class=\"line\">      default: 'chart'</div><div class=\"line\">    &#125;,</div><div class=\"line\">    width: &#123;</div><div class=\"line\">      type: String,</div><div class=\"line\">      default: '100%'</div><div class=\"line\">    &#125;,</div><div class=\"line\">    height: &#123;</div><div class=\"line\">      type: String,</div><div class=\"line\">      default: '350px'</div><div class=\"line\">    &#125;,</div><div class=\"line\">    autoResize: &#123;</div><div class=\"line\">      type: Boolean,</div><div class=\"line\">      default: true</div><div class=\"line\">    &#125;,</div><div class=\"line\">    chartData: &#123;</div><div class=\"line\">      type: Object</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  data () &#123;</div><div class=\"line\">    return &#123;&#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  mounted () &#123;</div><div class=\"line\">    this.initChart()</div><div class=\"line\">    if (this.autoResize) &#123;</div><div class=\"line\">      this.__resizeHanlder = debounce(() =&gt; &#123;</div><div class=\"line\">        if (this.$chart) &#123;</div><div class=\"line\">          this.$chart.resize()</div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;, 100)</div><div class=\"line\">      window.addEventListener('resize', this.__resizeHanlder)</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  beforeDestroy () &#123;</div><div class=\"line\">    if (!this.$chart) &#123;</div><div class=\"line\">      return</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (this.autoResize) &#123;</div><div class=\"line\">      window.removeEventListener('resize', this.__resizeHanlder)</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    this.$chart.dispose()</div><div class=\"line\">    this.$chart = null</div><div class=\"line\">  &#125;,</div><div class=\"line\">  watch: &#123;</div><div class=\"line\">    chartData: &#123;</div><div class=\"line\">      deep: true,</div><div class=\"line\">      handler (val) &#123;</div><div class=\"line\">        this.setOptions(val)</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  methods: &#123;</div><div class=\"line\">    setOptions (val) &#123;</div><div class=\"line\">      this.$chart.clear() // 清空画布</div><div class=\"line\">      this.$chart.setOption(val)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    initChart () &#123;</div><div class=\"line\">      this.$chart = echarts.init(this.$el, 'macarons')</div><div class=\"line\">      this.setOptions(this.chartData)</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/script&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h1><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;template&gt;</div><div class=\"line\">    &lt;div&gt;</div><div class=\"line\">        &lt;charts :chartData=\"Option\"&gt;&lt;/charts&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/template&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">import Charts '@/components/Charts'</div><div class=\"line\"></div><div class=\"line\">export default &#123;</div><div class=\"line\">  name: 'chartDemo',</div><div class=\"line\">  components: &#123;</div><div class=\"line\">    Charts</div><div class=\"line\">  &#125;,</div><div class=\"line\">  data () &#123;</div><div class=\"line\">    return &#123;</div><div class=\"line\">      Option: &#123;&#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  mounted () &#123;</div><div class=\"line\">    this.getList()</div><div class=\"line\">  &#125;,</div><div class=\"line\">  methods: &#123;</div><div class=\"line\">    getList () &#123;</div><div class=\"line\">        this.Option = &#123;</div><div class=\"line\">            xAxis: &#123;</div><div class=\"line\">                type: 'category',</div><div class=\"line\">                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']</div><div class=\"line\">            &#125;,</div><div class=\"line\">            yAxis: &#123;</div><div class=\"line\">                type: 'value'</div><div class=\"line\">            &#125;,</div><div class=\"line\">            series: [&#123;</div><div class=\"line\">                data: [820, 932, 901, 934, 1290, 1330, 1320],</div><div class=\"line\">                type: 'line'</div><div class=\"line\">            &#125;]</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&lt;/script&gt;</div></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjs1is1je0000cdon03bai9oo","category_id":"cjs1is1jk0004cdonlkhoy6yj","_id":"cjs1is1js000ecdonzd12hhq7"},{"post_id":"cjs1is1jr000dcdonylmoz7il","category_id":"cjs1is1jk0004cdonlkhoy6yj","_id":"cjs1is1ju000kcdon99kjqaaf"},{"post_id":"cjs1is1jm0006cdon1xsee810","category_id":"cjs1is1jk0004cdonlkhoy6yj","_id":"cjs1is1jv000ocdonmoaqqyaf"},{"post_id":"cjs1is1jo0008cdons1asrml2","category_id":"cjs1is1jt000gcdon71eyapge","_id":"cjs1is1jx000scdonrq3mbgwa"},{"post_id":"cjs1is1ju000lcdonp9ss21n3","category_id":"cjs1is1jk0004cdonlkhoy6yj","_id":"cjs1is1jy000wcdonefqzxng7"},{"post_id":"cjs1is1jp0009cdon3gd3q7j4","category_id":"cjs1is1jv000mcdonq2lulasv","_id":"cjs1is1jz000zcdonf5nrh4ac"},{"post_id":"cjs1is1jy000vcdonf0lvqdgk","category_id":"cjs1is1jk0004cdonlkhoy6yj","_id":"cjs1is1k10013cdonhneoos9m"},{"post_id":"cjs1is1js000fcdon84f8spd5","category_id":"cjs1is1jt000gcdon71eyapge","_id":"cjs1is1k20016cdonu9cyxgtb"},{"post_id":"cjs1is1jx000rcdon5u9876ef","category_id":"cjs1is1jz0010cdonkt3l44wi","_id":"cjs1is1k4001ccdonfwgu0lpf"},{"post_id":"cjs1is1jz000ycdonjxoznuil","category_id":"cjs1is1k20017cdon2zjd4uap","_id":"cjs1is1k6001icdoncaczmjs1"},{"post_id":"cjs1is1k4001dcdonhlsbvu91","category_id":"cjs1is1jk0004cdonlkhoy6yj","_id":"cjs1is1k7001mcdonpiy7ifc5"},{"post_id":"cjs1is1k20018cdonk541qnpu","category_id":"cjs1is1k5001ecdonbrnmyi9o","_id":"cjs1is1k8001pcdonyl14hb80"},{"post_id":"cjs1is1k6001jcdon5ts8jbtb","category_id":"cjs1is1jk0004cdonlkhoy6yj","_id":"cjs1is1k9001rcdonji05ti71"},{"post_id":"cjs1is1k7001ncdonw63cq0f4","category_id":"cjs1is1jk0004cdonlkhoy6yj","_id":"cjs1is1k9001tcdonupf6rd4s"},{"post_id":"cjs1is1k3001bcdon3jwnvhy4","category_id":"cjs1is1k7001kcdonwf9be5w2","_id":"cjs1is1k9001ucdon7lxhxola"},{"post_id":"cjs1iy5n7002bcdon7xcdcsma","category_id":"cjs1is1jk0004cdonlkhoy6yj","_id":"cjs1izizj002dcdonbgeiw16r"},{"post_id":"cjs1j2y0e002ecdon2239awez","category_id":"cjs1is1jk0004cdonlkhoy6yj","_id":"cjs1j3ha8002gcdonbl7ai74x"}],"PostTag":[{"post_id":"cjs1is1je0000cdon03bai9oo","tag_id":"cjs1is1jl0005cdon2fqcxcji","_id":"cjs1is1jr000ccdond0evejxz"},{"post_id":"cjs1is1jm0006cdon1xsee810","tag_id":"cjs1is1jp000bcdonwu1brv1d","_id":"cjs1is1ju000jcdonav2hc4sp"},{"post_id":"cjs1is1jo0008cdons1asrml2","tag_id":"cjs1is1jt000hcdonky5p9ipr","_id":"cjs1is1jw000qcdon4z1917yf"},{"post_id":"cjs1is1jp0009cdon3gd3q7j4","tag_id":"cjs1is1jv000ncdon38ibvd9q","_id":"cjs1is1jz000xcdon2dx9c1vj"},{"post_id":"cjs1is1jr000dcdonylmoz7il","tag_id":"cjs1is1jy000ucdonjyypymfd","_id":"cjs1is1k10014cdonspyxut1j"},{"post_id":"cjs1is1js000fcdon84f8spd5","tag_id":"cjs1is1jt000hcdonky5p9ipr","_id":"cjs1is1k3001acdone52zxydt"},{"post_id":"cjs1is1ju000lcdonp9ss21n3","tag_id":"cjs1is1k30019cdondgwry8hi","_id":"cjs1is1k6001hcdonf424szec"},{"post_id":"cjs1is1jy000vcdonf0lvqdgk","tag_id":"cjs1is1k5001fcdonr4yxa488","_id":"cjs1is1k8001ocdon7v6lfymh"},{"post_id":"cjs1is1jz000ycdonjxoznuil","tag_id":"cjs1is1k7001lcdonufb7g074","_id":"cjs1is1k9001scdonqmym9sze"},{"post_id":"cjs1is1k00011cdonfo7jkli7","tag_id":"cjs1is1k8001qcdono0vxekay","_id":"cjs1is1ka001wcdonckxt2zn7"},{"post_id":"cjs1is1k20018cdonk541qnpu","tag_id":"cjs1is1k9001vcdona3qp8sgo","_id":"cjs1is1ka001ycdonf23yca5v"},{"post_id":"cjs1is1k3001bcdon3jwnvhy4","tag_id":"cjs1is1ka001xcdon93fliwjg","_id":"cjs1is1ka0020cdonobd2lby2"},{"post_id":"cjs1is1k4001dcdonhlsbvu91","tag_id":"cjs1is1ka001zcdonmxsgqddl","_id":"cjs1is1kb0022cdonst6kl4ca"},{"post_id":"cjs1is1k6001jcdon5ts8jbtb","tag_id":"cjs1is1kb0021cdonqep22281","_id":"cjs1is1kb0024cdonwg2wqa3z"},{"post_id":"cjs1is1k7001ncdonw63cq0f4","tag_id":"cjs1is1ka001zcdonmxsgqddl","_id":"cjs1is1kc0025cdonkk5mrzn7"},{"post_id":"cjs1is1ov0028cdon9kpfftkm","tag_id":"cjs1is1ox0029cdonfsvok2al","_id":"cjs1is1ox002acdonrckg460p"},{"post_id":"cjs1iy5n7002bcdon7xcdcsma","tag_id":"cjs1is1ka001zcdonmxsgqddl","_id":"cjs1izizi002ccdonezk947e5"},{"post_id":"cjs1j2y0e002ecdon2239awez","tag_id":"cjs1is1ka001zcdonmxsgqddl","_id":"cjs1j3ha7002fcdonoysai72a"}],"Tag":[{"name":"ECM6","_id":"cjs1is1jl0005cdon2fqcxcji"},{"name":"hexo","_id":"cjs1is1jp000bcdonwu1brv1d"},{"name":"markdown","_id":"cjs1is1jt000hcdonky5p9ipr"},{"name":"mac","_id":"cjs1is1jv000ncdon38ibvd9q"},{"name":"bower","_id":"cjs1is1jy000ucdonjyypymfd"},{"name":"gulp","_id":"cjs1is1k30019cdondgwry8hi"},{"name":"js","_id":"cjs1is1k5001fcdonr4yxa488"},{"name":"微信开发","_id":"cjs1is1k7001lcdonufb7g074"},{"name":"nginx","_id":"cjs1is1k8001qcdono0vxekay"},{"name":"前端网站","_id":"cjs1is1k9001vcdona3qp8sgo"},{"name":"sql","_id":"cjs1is1ka001xcdon93fliwjg"},{"name":"vue","_id":"cjs1is1ka001zcdonmxsgqddl"},{"name":"css","_id":"cjs1is1kb0021cdonqep22281"},{"name":"分布式","_id":"cjs1is1ox0029cdonfsvok2al"}]}}